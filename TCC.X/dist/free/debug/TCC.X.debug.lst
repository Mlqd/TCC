

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Mar 21 12:20:50 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           ; Version 1.45
    39                           ; Generated 16/11/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4550 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     _TMR0H	set	4055
    73  0000                     _TMR0L	set	4054
    74  0000                     _LATB	set	3978
    75  0000                     _ADRESL	set	4035
    76  0000                     _ADRESH	set	4036
    77  0000                     _ADCON0bits	set	4034
    78  0000                     _ADCON0	set	4034
    79  0000                     _LATCbits	set	3979
    80  0000                     _LATDbits	set	3980
    81  0000                     _INTCONbits	set	4082
    82  0000                     _LATC	set	3979
    83  0000                     _LATD	set	3980
    84  0000                     _INTCON	set	4082
    85  0000                     _T0CON	set	4053
    86  0000                     _LATBbits	set	3978
    87  0000                     _TRISB	set	3987
    88  0000                     _ADCON2	set	4032
    89  0000                     _ADCON1	set	4033
    90  0000                     _TRISA	set	3986
    91  0000                     _TRISE	set	3990
    92  0000                     _TRISD	set	3989
    93  0000                     _TRISC	set	3988
    94  0000                     _CMCON	set	4020
    95  0000                     _UCON	set	3949
    96                           
    97                           	psect	smallconst
    98  000800                     __psmallconst:
    99                           	opt stack 0
   100  000800  00                 	db	0
   101  000801                     STR_1:
   102  000801  54                 	db	84	;'T'
   103  000802  65                 	db	101	;'e'
   104  000803  73                 	db	115	;'s'
   105  000804  74                 	db	116	;'t'
   106  000805  65                 	db	101	;'e'
   107  000806  20                 	db	32
   108  000807  43                 	db	67	;'C'
   109  000808  6F                 	db	111	;'o'
   110  000809  6E                 	db	110	;'n'
   111  00080A  76                 	db	118	;'v'
   112  00080B  2E                 	db	46
   113  00080C  20                 	db	32
   114  00080D  41                 	db	65	;'A'
   115  00080E  44                 	db	68	;'D'
   116  00080F  43                 	db	67	;'C'
   117  000810  20                 	db	32
   118  000811  00                 	db	0
   119  000812                     STR_2:
   120  000812  53                 	db	83	;'S'
   121  000813  69                 	db	105	;'i'
   122  000814  6E                 	db	110	;'n'
   123  000815  61                 	db	97	;'a'
   124  000816  6C                 	db	108	;'l'
   125  000817  20                 	db	32
   126  000818  49                 	db	73	;'I'
   127  000819  72                 	db	114	;'r'
   128  00081A  20                 	db	32
   129  00081B  00                 	db	0
   130  00081C                     STR_8:
   131  00081C  53                 	db	83	;'S'
   132  00081D  69                 	db	105	;'i'
   133  00081E  6E                 	db	110	;'n'
   134  00081F  61                 	db	97	;'a'
   135  000820  6C                 	db	108	;'l'
   136  000821  20                 	db	32
   137  000822  56                 	db	86	;'V'
   138  000823  72                 	db	114	;'r'
   139  000824  20                 	db	32
   140  000825  00                 	db	0
   141  000826                     STR_4:
   142  000826  53                 	db	83	;'S'
   143  000827  69                 	db	105	;'i'
   144  000828  6E                 	db	110	;'n'
   145  000829  61                 	db	97	;'a'
   146  00082A  6C                 	db	108	;'l'
   147  00082B  20                 	db	32
   148  00082C  49                 	db	73	;'I'
   149  00082D  73                 	db	115	;'s'
   150  00082E  20                 	db	32
   151  00082F  00                 	db	0
   152  000830                     STR_10:
   153  000830  53                 	db	83	;'S'
   154  000831  69                 	db	105	;'i'
   155  000832  6E                 	db	110	;'n'
   156  000833  61                 	db	97	;'a'
   157  000834  6C                 	db	108	;'l'
   158  000835  20                 	db	32
   159  000836  56                 	db	86	;'V'
   160  000837  73                 	db	115	;'s'
   161  000838  20                 	db	32
   162  000839  00                 	db	0
   163  00083A                     STR_6:
   164  00083A  53                 	db	83	;'S'
   165  00083B  69                 	db	105	;'i'
   166  00083C  6E                 	db	110	;'n'
   167  00083D  61                 	db	97	;'a'
   168  00083E  6C                 	db	108	;'l'
   169  00083F  20                 	db	32
   170  000840  49                 	db	73	;'I'
   171  000841  74                 	db	116	;'t'
   172  000842  20                 	db	32
   173  000843  00                 	db	0
   174  000844                     STR_12:
   175  000844  53                 	db	83	;'S'
   176  000845  69                 	db	105	;'i'
   177  000846  6E                 	db	110	;'n'
   178  000847  61                 	db	97	;'a'
   179  000848  6C                 	db	108	;'l'
   180  000849  20                 	db	32
   181  00084A  56                 	db	86	;'V'
   182  00084B  74                 	db	116	;'t'
   183  00084C  20                 	db	32
   184  00084D  00                 	db	0
   185  00084E                     STR_3:
   186  00084E  56                 	db	86	;'V'
   187  00084F  00                 	db	0
   188  0000                     
   189                           ; #config settings
   190  000850  00                 	db	0	; dummy byte at the end
   191  0000                     
   192                           	psect	cinit
   193  001962                     __pcinit:
   194                           	opt stack 0
   195  001962                     start_initialization:
   196                           	opt stack 0
   197  001962                     __initialization:
   198                           	opt stack 0
   199  001962                     end_of_initialization:
   200                           	opt stack 0
   201  001962                     __end_of__initialization:
   202                           	opt stack 0
   203  001962  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   204  001964  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   205  001966  0E00               	movlw	low (__Lmediumconst shr (0+16))
   206  001968  6EF8               	movwf	tblptru,c
   207  00196A  0100               	movlb	0
   208  00196C  EF29  F004         	goto	_main	;jump to C main() function
   209                           tblptru	equ	0xFF8
   210                           
   211                           	psect	cstackBANK2
   212  000200                     __pcstackBANK2:
   213                           	opt stack 0
   214  000200                     ??_writeLcd:
   215  000200                     ?_adc_read:
   216                           	opt stack 0
   217  000200                     ?___ftpack:
   218                           	opt stack 0
   219  000200                     ?___lmul:
   220                           	opt stack 0
   221  000200                     ?___almod:
   222                           	opt stack 0
   223  000200                     setTimer@state:
   224                           	opt stack 0
   225  000200                     ___ftpack@arg:
   226                           	opt stack 0
   227  000200                     ___lmul@multiplier:
   228                           	opt stack 0
   229  000200                     ___almod@dividend:
   230                           	opt stack 0
   231                           
   232                           ; 4 bytes @ 0x0
   233  000200                     	ds	1
   234  000201                     writeLcd@c:
   235                           	opt stack 0
   236                           
   237                           ; 1 bytes @ 0x1
   238  000201                     	ds	1
   239  000202                     ??_clearLcd:
   240  000202                     ??_adc_read:
   241  000202                     gotoLcd@pos:
   242                           	opt stack 0
   243  000202                     writeCStringLcd@s:
   244                           	opt stack 0
   245  000202                     writeStringLcd@s:
   246                           	opt stack 0
   247                           
   248                           ; 2 bytes @ 0x2
   249  000202                     	ds	1
   250  000203                     ??_initConfigs:
   251  000203                     ___ftpack@exp:
   252                           	opt stack 0
   253                           
   254                           ; 1 bytes @ 0x3
   255  000203                     	ds	1
   256  000204                     adc_read@canal:
   257                           	opt stack 0
   258  000204                     ___ftpack@sign:
   259                           	opt stack 0
   260  000204                     ___lmul@multiplicand:
   261                           	opt stack 0
   262  000204                     ___almod@divisor:
   263                           	opt stack 0
   264                           
   265                           ; 4 bytes @ 0x4
   266  000204                     	ds	1
   267  000205                     ??___ftpack:
   268  000205                     adc_read@x:
   269                           	opt stack 0
   270                           
   271                           ; 1 bytes @ 0x5
   272  000205                     	ds	1
   273  000206                     adc_read@y:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x6
   277  000206                     	ds	2
   278  000208                     ?___lwtoft:
   279                           	opt stack 0
   280  000208                     ___almod@counter:
   281                           	opt stack 0
   282  000208                     ___lwtoft@c:
   283                           	opt stack 0
   284  000208                     ___lmul@product:
   285                           	opt stack 0
   286                           
   287                           ; 4 bytes @ 0x8
   288  000208                     	ds	1
   289  000209                     ___almod@sign:
   290                           	opt stack 0
   291                           
   292                           ; 1 bytes @ 0x9
   293  000209                     	ds	1
   294  00020A                     ?___aldiv:
   295                           	opt stack 0
   296  00020A                     ___aldiv@dividend:
   297                           	opt stack 0
   298                           
   299                           ; 4 bytes @ 0xA
   300  00020A                     	ds	1
   301  00020B                     ?___ftmul:
   302                           	opt stack 0
   303  00020B                     ___ftmul@f1:
   304                           	opt stack 0
   305                           
   306                           ; 3 bytes @ 0xB
   307  00020B                     	ds	3
   308  00020E                     ___ftmul@f2:
   309                           	opt stack 0
   310  00020E                     ___aldiv@divisor:
   311                           	opt stack 0
   312                           
   313                           ; 4 bytes @ 0xE
   314  00020E                     	ds	3
   315  000211                     ??___ftmul:
   316                           
   317                           ; 1 bytes @ 0x11
   318  000211                     	ds	1
   319  000212                     ___aldiv@counter:
   320                           	opt stack 0
   321                           
   322                           ; 1 bytes @ 0x12
   323  000212                     	ds	1
   324  000213                     ___aldiv@sign:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0x13
   328  000213                     	ds	1
   329  000214                     ___ftmul@exp:
   330                           	opt stack 0
   331  000214                     ___aldiv@quotient:
   332                           	opt stack 0
   333                           
   334                           ; 4 bytes @ 0x14
   335  000214                     	ds	1
   336  000215                     ___ftmul@f3_as_product:
   337                           	opt stack 0
   338                           
   339                           ; 3 bytes @ 0x15
   340  000215                     	ds	3
   341  000218                     ___ftmul@cntr:
   342                           	opt stack 0
   343                           
   344                           ; 1 bytes @ 0x18
   345  000218                     	ds	1
   346  000219                     ___ftmul@sign:
   347                           	opt stack 0
   348                           
   349                           ; 1 bytes @ 0x19
   350  000219                     	ds	1
   351  00021A                     ?___ftdiv:
   352                           	opt stack 0
   353  00021A                     ?___fttol:
   354                           	opt stack 0
   355  00021A                     ___ftdiv@f1:
   356                           	opt stack 0
   357  00021A                     ___fttol@f1:
   358                           	opt stack 0
   359                           
   360                           ; 3 bytes @ 0x1A
   361  00021A                     	ds	3
   362  00021D                     ___ftdiv@f2:
   363                           	opt stack 0
   364                           
   365                           ; 3 bytes @ 0x1D
   366  00021D                     	ds	1
   367  00021E                     ??___fttol:
   368                           
   369                           ; 1 bytes @ 0x1E
   370  00021E                     	ds	2
   371  000220                     ??___ftdiv:
   372                           
   373                           ; 1 bytes @ 0x20
   374  000220                     	ds	3
   375  000223                     ___ftdiv@cntr:
   376                           	opt stack 0
   377  000223                     ___fttol@sign1:
   378                           	opt stack 0
   379                           
   380                           ; 1 bytes @ 0x23
   381  000223                     	ds	1
   382  000224                     ___ftdiv@f3:
   383                           	opt stack 0
   384  000224                     ___fttol@lval:
   385                           	opt stack 0
   386                           
   387                           ; 4 bytes @ 0x24
   388  000224                     	ds	3
   389  000227                     ___ftdiv@exp:
   390                           	opt stack 0
   391                           
   392                           ; 1 bytes @ 0x27
   393  000227                     	ds	1
   394  000228                     ___ftdiv@sign:
   395                           	opt stack 0
   396  000228                     ___fttol@exp1:
   397                           	opt stack 0
   398                           
   399                           ; 1 bytes @ 0x28
   400  000228                     	ds	1
   401  000229                     writeValueLcd@val:
   402                           	opt stack 0
   403                           
   404                           ; 3 bytes @ 0x29
   405  000229                     	ds	3
   406  00022C                     ??_writeValueLcd:
   407                           
   408                           ; 1 bytes @ 0x2C
   409  00022C                     	ds	4
   410  000230                     writeValueLcd@x:
   411                           	opt stack 0
   412                           
   413                           ; 4 bytes @ 0x30
   414  000230                     	ds	4
   415  000234                     ??_main:
   416                           
   417                           ; 1 bytes @ 0x34
   418  000234                     	ds	2
   419  000236                     main@valor:
   420                           	opt stack 0
   421                           
   422                           ; 3 bytes @ 0x36
   423  000236                     	ds	3
   424                           tblptru	equ	0xFF8
   425                           
   426                           	psect	cstackBANK1
   427  000100                     __pcstackBANK1:
   428                           	opt stack 0
   429  000100                     tmr0_flag@Ir:
   430                           	opt stack 0
   431                           
   432                           ; 60 bytes @ 0x0
   433  000100                     	ds	60
   434  00013C                     tmr0_flag@Is:
   435                           	opt stack 0
   436                           
   437                           ; 60 bytes @ 0x3C
   438  00013C                     	ds	60
   439  000178                     tmr0_flag@It:
   440                           	opt stack 0
   441                           
   442                           ; 60 bytes @ 0x78
   443  000178                     	ds	60
   444                           tblptru	equ	0xFF8
   445                           
   446                           	psect	cstackBANK0
   447  000060                     __pcstackBANK0:
   448                           	opt stack 0
   449  000060                     tmr0_flag@Vs:
   450                           	opt stack 0
   451                           
   452                           ; 60 bytes @ 0x0
   453  000060                     	ds	60
   454  00009C                     tmr0_flag@Vt:
   455                           	opt stack 0
   456                           
   457                           ; 60 bytes @ 0x3C
   458  00009C                     	ds	60
   459                           tblptru	equ	0xFF8
   460                           
   461                           	psect	cstackCOMRAM
   462  000001                     __pcstackCOMRAM:
   463                           	opt stack 0
   464  000001                     ?i2_adc_read:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x0
   468  000001                     	ds	2
   469  000003                     ??i2_adc_read:
   470                           
   471                           ; 1 bytes @ 0x2
   472  000003                     	ds	2
   473  000005                     i2adc_read@canal:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0x4
   477  000005                     	ds	1
   478  000006                     i2adc_read@x:
   479                           	opt stack 0
   480                           
   481                           ; 1 bytes @ 0x5
   482  000006                     	ds	1
   483  000007                     i2adc_read@y:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0x6
   487  000007                     	ds	1
   488  000008                     tmr0_flag@Vr:
   489                           	opt stack 0
   490                           
   491                           ; 60 bytes @ 0x7
   492  000008                     	ds	60
   493  000044                     tmr0_flag@i:
   494                           	opt stack 0
   495                           
   496                           ; 2 bytes @ 0x43
   497  000044                     	ds	2
   498  000046                     ??_high_priority_interrupt:
   499                           
   500                           ; 1 bytes @ 0x45
   501  000046                     	ds	18
   502                           tblptru	equ	0xFF8
   503                           
   504 ;;
   505 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   506 ;;
   507 ;; *************** function _main *****************
   508 ;; Defined at:
   509 ;;		line 17 in file "main.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;		None
   512 ;; Auto vars:     Size  Location     Type
   513 ;;  str             7    0        unsigned char [7]
   514 ;;  valor           3   54[BANK2 ] float 
   515 ;;  val             2    0        unsigned char [2]
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   525 ;;      Params:         0       0       0       0       0       0       0       0       0
   526 ;;      Locals:         0       0       0       3       0       0       0       0       0
   527 ;;      Temps:          0       0       0       2       0       0       0       0       0
   528 ;;      Totals:         0       0       0       5       0       0       0       0       0
   529 ;;Total ram usage:        5 bytes
   530 ;; Hardware stack levels required when called:    7
   531 ;; This function calls:
   532 ;;		___ftdiv
   533 ;;		___ftmul
   534 ;;		___lwtoft
   535 ;;		_adc_read
   536 ;;		_clearLcd
   537 ;;		_gotoLcd
   538 ;;		_initConfigs
   539 ;;		_setTimer
   540 ;;		_writeCStringLcd
   541 ;;		_writeStringLcd
   542 ;;		_writeValueLcd
   543 ;; This function is called by:
   544 ;;		Startup code after reset
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           	psect	text0
   549  000852                     __ptext0:
   550                           	opt stack 0
   551  000852                     _main:
   552                           	opt stack 24
   553                           
   554                           ;main.c: 18: _delay((unsigned long)((1000)*((16000000)/4000.0)));
   555                           
   556                           ;incstack = 0
   557  000852  0E15               	movlw	21
   558  000854  0102               	movlb	2	; () banked
   559  000856  6F35               	movwf	(??_main+1)& (0+255),b
   560  000858  0E4B               	movlw	75
   561  00085A  6F34               	movwf	??_main& (0+255),b
   562  00085C  0EBE               	movlw	190
   563  00085E                     u1157:
   564  00085E  2EE8               	decfsz	wreg,f,c
   565  000860  D7FE               	bra	u1157
   566  000862  2F34               	decfsz	??_main& (0+255),f,b
   567  000864  D7FC               	bra	u1157
   568  000866  2F35               	decfsz	(??_main+1)& (0+255),f,b
   569  000868  D7FA               	bra	u1157
   570  00086A  F000               	nop	
   571                           
   572                           ;main.c: 19: _delay((unsigned long)((1000)*((16000000)/4000.0)));
   573  00086C  0E15               	movlw	21
   574  00086E  0102               	movlb	2	; () banked
   575  000870  6F35               	movwf	(??_main+1)& (0+255),b
   576  000872  0E4B               	movlw	75
   577  000874  6F34               	movwf	??_main& (0+255),b
   578  000876  0EBE               	movlw	190
   579  000878                     u1167:
   580  000878  2EE8               	decfsz	wreg,f,c
   581  00087A  D7FE               	bra	u1167
   582  00087C  2F34               	decfsz	??_main& (0+255),f,b
   583  00087E  D7FC               	bra	u1167
   584  000880  2F35               	decfsz	(??_main+1)& (0+255),f,b
   585  000882  D7FA               	bra	u1167
   586  000884  F000               	nop	
   587                           
   588                           ;main.c: 20: _delay((unsigned long)((1000)*((16000000)/4000.0)));
   589  000886  0E15               	movlw	21
   590  000888  0102               	movlb	2	; () banked
   591  00088A  6F35               	movwf	(??_main+1)& (0+255),b
   592  00088C  0E4B               	movlw	75
   593  00088E  6F34               	movwf	??_main& (0+255),b
   594  000890  0EBE               	movlw	190
   595  000892                     u1177:
   596  000892  2EE8               	decfsz	wreg,f,c
   597  000894  D7FE               	bra	u1177
   598  000896  2F34               	decfsz	??_main& (0+255),f,b
   599  000898  D7FC               	bra	u1177
   600  00089A  2F35               	decfsz	(??_main+1)& (0+255),f,b
   601  00089C  D7FA               	bra	u1177
   602  00089E  F000               	nop	
   603                           
   604                           ;main.c: 21: initConfigs();
   605  0008A0  EC70  F00B         	call	_initConfigs	;wreg free
   606                           
   607                           ;main.c: 22: _delay((unsigned long)((1000)*((16000000)/4000.0)));
   608  0008A4  0E15               	movlw	21
   609  0008A6  0102               	movlb	2	; () banked
   610  0008A8  6F35               	movwf	(??_main+1)& (0+255),b
   611  0008AA  0E4B               	movlw	75
   612  0008AC  6F34               	movwf	??_main& (0+255),b
   613  0008AE  0EBE               	movlw	190
   614  0008B0                     u1187:
   615  0008B0  2EE8               	decfsz	wreg,f,c
   616  0008B2  D7FE               	bra	u1187
   617  0008B4  2F34               	decfsz	??_main& (0+255),f,b
   618  0008B6  D7FC               	bra	u1187
   619  0008B8  2F35               	decfsz	(??_main+1)& (0+255),f,b
   620  0008BA  D7FA               	bra	u1187
   621  0008BC  F000               	nop	
   622                           
   623                           ;main.c: 23: _delay((unsigned long)((1000)*((16000000)/4000.0)));
   624  0008BE  0E15               	movlw	21
   625  0008C0  0102               	movlb	2	; () banked
   626  0008C2  6F35               	movwf	(??_main+1)& (0+255),b
   627  0008C4  0E4B               	movlw	75
   628  0008C6  6F34               	movwf	??_main& (0+255),b
   629  0008C8  0EBE               	movlw	190
   630  0008CA                     u1197:
   631  0008CA  2EE8               	decfsz	wreg,f,c
   632  0008CC  D7FE               	bra	u1197
   633  0008CE  2F34               	decfsz	??_main& (0+255),f,b
   634  0008D0  D7FC               	bra	u1197
   635  0008D2  2F35               	decfsz	(??_main+1)& (0+255),f,b
   636  0008D4  D7FA               	bra	u1197
   637  0008D6  F000               	nop	
   638                           
   639                           ;main.c: 24: clearLcd();
   640  0008D8  EC9B  F00C         	call	_clearLcd	;wreg free
   641                           
   642                           ;main.c: 25: setTimer(1);
   643  0008DC  0E01               	movlw	1
   644  0008DE  EC72  F00C         	call	_setTimer
   645  0008E2                     
   646                           ;main.c: 28: gotoLcd(0x80);
   647  0008E2  0E80               	movlw	128
   648  0008E4  ECA9  F00C         	call	_gotoLcd
   649                           
   650                           ;main.c: 29: writeCStringLcd("Teste Conv. ADC ");
   651  0008E8  0E01               	movlw	low STR_1
   652  0008EA  0102               	movlb	2	; () banked
   653  0008EC  6F02               	movwf	writeCStringLcd@s& (0+255),b
   654  0008EE  0E08               	movlw	high STR_1
   655  0008F0  6F03               	movwf	(writeCStringLcd@s+1)& (0+255),b
   656  0008F2  EC5B  F00C         	call	_writeCStringLcd	;wreg free
   657                           
   658                           ;main.c: 31: float valor;
   659                           ;main.c: 32: unsigned char str[7];
   660                           ;main.c: 33: unsigned char val[2];
   661                           ;main.c: 35: valor = ((float) (adc_read(0))*5) / 1023;
   662  0008F6  0E00               	movlw	0
   663  0008F8  0102               	movlb	2	; () banked
   664  0008FA  6F0E               	movwf	___ftmul@f2& (0+255),b
   665  0008FC  0EA0               	movlw	160
   666  0008FE  6F0F               	movwf	(___ftmul@f2+1)& (0+255),b
   667  000900  0E40               	movlw	64
   668  000902  6F10               	movwf	(___ftmul@f2+2)& (0+255),b
   669  000904  0E00               	movlw	0
   670  000906  EC0D  F00C         	call	_adc_read
   671  00090A  C200  F208         	movff	?_adc_read,___lwtoft@c
   672  00090E  C201  F209         	movff	?_adc_read+1,___lwtoft@c+1
   673  000912  EC88  F00C         	call	___lwtoft	;wreg free
   674  000916  C208  F20B         	movff	?___lwtoft,___ftmul@f1
   675  00091A  C209  F20C         	movff	?___lwtoft+1,___ftmul@f1+1
   676  00091E  C20A  F20D         	movff	?___lwtoft+2,___ftmul@f1+2
   677  000922  ECA8  F008         	call	___ftmul	;wreg free
   678  000926  C20B  F21A         	movff	?___ftmul,___ftdiv@f1
   679  00092A  C20C  F21B         	movff	?___ftmul+1,___ftdiv@f1+1
   680  00092E  C20D  F21C         	movff	?___ftmul+2,___ftdiv@f1+2
   681  000932  0EC0               	movlw	192
   682  000934  0102               	movlb	2	; () banked
   683  000936  6F1D               	movwf	___ftdiv@f2& (0+255),b
   684  000938  0E7F               	movlw	127
   685  00093A  6F1E               	movwf	(___ftdiv@f2+1)& (0+255),b
   686  00093C  0E44               	movlw	68
   687  00093E  6F1F               	movwf	(___ftdiv@f2+2)& (0+255),b
   688  000940  EC98  F009         	call	___ftdiv	;wreg free
   689  000944  C21A  F236         	movff	?___ftdiv,main@valor
   690  000948  C21B  F237         	movff	?___ftdiv+1,main@valor+1
   691  00094C  C21C  F238         	movff	?___ftdiv+2,main@valor+2
   692                           
   693                           ;main.c: 36: gotoLcd(0xC0);
   694  000950  0EC0               	movlw	192
   695  000952  ECA9  F00C         	call	_gotoLcd
   696                           
   697                           ;main.c: 37: writeStringLcd("Sinal Ir ");
   698  000956  0E12               	movlw	low STR_2
   699  000958  0102               	movlb	2	; () banked
   700  00095A  6F02               	movwf	writeStringLcd@s& (0+255),b
   701  00095C  0E08               	movlw	high STR_2
   702  00095E  6F03               	movwf	(writeStringLcd@s+1)& (0+255),b
   703  000960  EC44  F00C         	call	_writeStringLcd	;wreg free
   704                           
   705                           ;main.c: 38: writeValueLcd(valor);
   706  000964  C236  F229         	movff	main@valor,writeValueLcd@val
   707  000968  C237  F22A         	movff	main@valor+1,writeValueLcd@val+1
   708  00096C  C238  F22B         	movff	main@valor+2,writeValueLcd@val+2
   709  000970  EC6E  F006         	call	_writeValueLcd	;wreg free
   710                           
   711                           ;main.c: 39: writeStringLcd("V");
   712  000974  0E4E               	movlw	low STR_3
   713  000976  0102               	movlb	2	; () banked
   714  000978  6F02               	movwf	writeStringLcd@s& (0+255),b
   715  00097A  0E08               	movlw	high STR_3
   716  00097C  6F03               	movwf	(writeStringLcd@s+1)& (0+255),b
   717  00097E  EC44  F00C         	call	_writeStringLcd	;wreg free
   718                           
   719                           ;main.c: 40: _delay((unsigned long)((1000)*((16000000)/4000.0)));
   720  000982  0E15               	movlw	21
   721  000984  0102               	movlb	2	; () banked
   722  000986  6F35               	movwf	(??_main+1)& (0+255),b
   723  000988  0E4B               	movlw	75
   724  00098A  6F34               	movwf	??_main& (0+255),b
   725  00098C  0EBE               	movlw	190
   726  00098E                     u1207:
   727  00098E  2EE8               	decfsz	wreg,f,c
   728  000990  D7FE               	bra	u1207
   729  000992  2F34               	decfsz	??_main& (0+255),f,b
   730  000994  D7FC               	bra	u1207
   731  000996  2F35               	decfsz	(??_main+1)& (0+255),f,b
   732  000998  D7FA               	bra	u1207
   733  00099A  F000               	nop	
   734                           
   735                           ;main.c: 42: valor = ((float) (adc_read(1))*5) / 1023;
   736  00099C  0E00               	movlw	0
   737  00099E  0102               	movlb	2	; () banked
   738  0009A0  6F0E               	movwf	___ftmul@f2& (0+255),b
   739  0009A2  0EA0               	movlw	160
   740  0009A4  6F0F               	movwf	(___ftmul@f2+1)& (0+255),b
   741  0009A6  0E40               	movlw	64
   742  0009A8  6F10               	movwf	(___ftmul@f2+2)& (0+255),b
   743  0009AA  0E01               	movlw	1
   744  0009AC  EC0D  F00C         	call	_adc_read
   745  0009B0  C200  F208         	movff	?_adc_read,___lwtoft@c
   746  0009B4  C201  F209         	movff	?_adc_read+1,___lwtoft@c+1
   747  0009B8  EC88  F00C         	call	___lwtoft	;wreg free
   748  0009BC  C208  F20B         	movff	?___lwtoft,___ftmul@f1
   749  0009C0  C209  F20C         	movff	?___lwtoft+1,___ftmul@f1+1
   750  0009C4  C20A  F20D         	movff	?___lwtoft+2,___ftmul@f1+2
   751  0009C8  ECA8  F008         	call	___ftmul	;wreg free
   752  0009CC  C20B  F21A         	movff	?___ftmul,___ftdiv@f1
   753  0009D0  C20C  F21B         	movff	?___ftmul+1,___ftdiv@f1+1
   754  0009D4  C20D  F21C         	movff	?___ftmul+2,___ftdiv@f1+2
   755  0009D8  0EC0               	movlw	192
   756  0009DA  0102               	movlb	2	; () banked
   757  0009DC  6F1D               	movwf	___ftdiv@f2& (0+255),b
   758  0009DE  0E7F               	movlw	127
   759  0009E0  6F1E               	movwf	(___ftdiv@f2+1)& (0+255),b
   760  0009E2  0E44               	movlw	68
   761  0009E4  6F1F               	movwf	(___ftdiv@f2+2)& (0+255),b
   762  0009E6  EC98  F009         	call	___ftdiv	;wreg free
   763  0009EA  C21A  F236         	movff	?___ftdiv,main@valor
   764  0009EE  C21B  F237         	movff	?___ftdiv+1,main@valor+1
   765  0009F2  C21C  F238         	movff	?___ftdiv+2,main@valor+2
   766                           
   767                           ;main.c: 43: gotoLcd(0xC0);
   768  0009F6  0EC0               	movlw	192
   769  0009F8  ECA9  F00C         	call	_gotoLcd
   770                           
   771                           ;main.c: 44: writeStringLcd("Sinal Is ");
   772  0009FC  0E26               	movlw	low STR_4
   773  0009FE  0102               	movlb	2	; () banked
   774  000A00  6F02               	movwf	writeStringLcd@s& (0+255),b
   775  000A02  0E08               	movlw	high STR_4
   776  000A04  6F03               	movwf	(writeStringLcd@s+1)& (0+255),b
   777  000A06  EC44  F00C         	call	_writeStringLcd	;wreg free
   778                           
   779                           ;main.c: 45: writeValueLcd(valor);
   780  000A0A  C236  F229         	movff	main@valor,writeValueLcd@val
   781  000A0E  C237  F22A         	movff	main@valor+1,writeValueLcd@val+1
   782  000A12  C238  F22B         	movff	main@valor+2,writeValueLcd@val+2
   783  000A16  EC6E  F006         	call	_writeValueLcd	;wreg free
   784                           
   785                           ;main.c: 46: writeStringLcd("V");
   786  000A1A  0E4E               	movlw	low STR_3
   787  000A1C  0102               	movlb	2	; () banked
   788  000A1E  6F02               	movwf	writeStringLcd@s& (0+255),b
   789  000A20  0E08               	movlw	high STR_3
   790  000A22  6F03               	movwf	(writeStringLcd@s+1)& (0+255),b
   791  000A24  EC44  F00C         	call	_writeStringLcd	;wreg free
   792                           
   793                           ;main.c: 47: _delay((unsigned long)((1000)*((16000000)/4000.0)));
   794  000A28  0E15               	movlw	21
   795  000A2A  0102               	movlb	2	; () banked
   796  000A2C  6F35               	movwf	(??_main+1)& (0+255),b
   797  000A2E  0E4B               	movlw	75
   798  000A30  6F34               	movwf	??_main& (0+255),b
   799  000A32  0EBE               	movlw	190
   800  000A34                     u1217:
   801  000A34  2EE8               	decfsz	wreg,f,c
   802  000A36  D7FE               	bra	u1217
   803  000A38  2F34               	decfsz	??_main& (0+255),f,b
   804  000A3A  D7FC               	bra	u1217
   805  000A3C  2F35               	decfsz	(??_main+1)& (0+255),f,b
   806  000A3E  D7FA               	bra	u1217
   807  000A40  F000               	nop	
   808                           
   809                           ;main.c: 49: valor = ((float) (adc_read(2))*5) / 1023;
   810  000A42  0E00               	movlw	0
   811  000A44  0102               	movlb	2	; () banked
   812  000A46  6F0E               	movwf	___ftmul@f2& (0+255),b
   813  000A48  0EA0               	movlw	160
   814  000A4A  6F0F               	movwf	(___ftmul@f2+1)& (0+255),b
   815  000A4C  0E40               	movlw	64
   816  000A4E  6F10               	movwf	(___ftmul@f2+2)& (0+255),b
   817  000A50  0E02               	movlw	2
   818  000A52  EC0D  F00C         	call	_adc_read
   819  000A56  C200  F208         	movff	?_adc_read,___lwtoft@c
   820  000A5A  C201  F209         	movff	?_adc_read+1,___lwtoft@c+1
   821  000A5E  EC88  F00C         	call	___lwtoft	;wreg free
   822  000A62  C208  F20B         	movff	?___lwtoft,___ftmul@f1
   823  000A66  C209  F20C         	movff	?___lwtoft+1,___ftmul@f1+1
   824  000A6A  C20A  F20D         	movff	?___lwtoft+2,___ftmul@f1+2
   825  000A6E  ECA8  F008         	call	___ftmul	;wreg free
   826  000A72  C20B  F21A         	movff	?___ftmul,___ftdiv@f1
   827  000A76  C20C  F21B         	movff	?___ftmul+1,___ftdiv@f1+1
   828  000A7A  C20D  F21C         	movff	?___ftmul+2,___ftdiv@f1+2
   829  000A7E  0EC0               	movlw	192
   830  000A80  0102               	movlb	2	; () banked
   831  000A82  6F1D               	movwf	___ftdiv@f2& (0+255),b
   832  000A84  0E7F               	movlw	127
   833  000A86  6F1E               	movwf	(___ftdiv@f2+1)& (0+255),b
   834  000A88  0E44               	movlw	68
   835  000A8A  6F1F               	movwf	(___ftdiv@f2+2)& (0+255),b
   836  000A8C  EC98  F009         	call	___ftdiv	;wreg free
   837  000A90  C21A  F236         	movff	?___ftdiv,main@valor
   838  000A94  C21B  F237         	movff	?___ftdiv+1,main@valor+1
   839  000A98  C21C  F238         	movff	?___ftdiv+2,main@valor+2
   840                           
   841                           ;main.c: 50: gotoLcd(0xC0);
   842  000A9C  0EC0               	movlw	192
   843  000A9E  ECA9  F00C         	call	_gotoLcd
   844                           
   845                           ;main.c: 51: writeStringLcd("Sinal It ");
   846  000AA2  0E3A               	movlw	low STR_6
   847  000AA4  0102               	movlb	2	; () banked
   848  000AA6  6F02               	movwf	writeStringLcd@s& (0+255),b
   849  000AA8  0E08               	movlw	high STR_6
   850  000AAA  6F03               	movwf	(writeStringLcd@s+1)& (0+255),b
   851  000AAC  EC44  F00C         	call	_writeStringLcd	;wreg free
   852                           
   853                           ;main.c: 52: writeValueLcd(valor);
   854  000AB0  C236  F229         	movff	main@valor,writeValueLcd@val
   855  000AB4  C237  F22A         	movff	main@valor+1,writeValueLcd@val+1
   856  000AB8  C238  F22B         	movff	main@valor+2,writeValueLcd@val+2
   857  000ABC  EC6E  F006         	call	_writeValueLcd	;wreg free
   858                           
   859                           ;main.c: 53: writeStringLcd("V");
   860  000AC0  0E4E               	movlw	low STR_3
   861  000AC2  0102               	movlb	2	; () banked
   862  000AC4  6F02               	movwf	writeStringLcd@s& (0+255),b
   863  000AC6  0E08               	movlw	high STR_3
   864  000AC8  6F03               	movwf	(writeStringLcd@s+1)& (0+255),b
   865  000ACA  EC44  F00C         	call	_writeStringLcd	;wreg free
   866                           
   867                           ;main.c: 54: _delay((unsigned long)((1000)*((16000000)/4000.0)));
   868  000ACE  0E15               	movlw	21
   869  000AD0  0102               	movlb	2	; () banked
   870  000AD2  6F35               	movwf	(??_main+1)& (0+255),b
   871  000AD4  0E4B               	movlw	75
   872  000AD6  6F34               	movwf	??_main& (0+255),b
   873  000AD8  0EBE               	movlw	190
   874  000ADA                     u1227:
   875  000ADA  2EE8               	decfsz	wreg,f,c
   876  000ADC  D7FE               	bra	u1227
   877  000ADE  2F34               	decfsz	??_main& (0+255),f,b
   878  000AE0  D7FC               	bra	u1227
   879  000AE2  2F35               	decfsz	(??_main+1)& (0+255),f,b
   880  000AE4  D7FA               	bra	u1227
   881  000AE6  F000               	nop	
   882                           
   883                           ;main.c: 56: valor = ((float) (adc_read(3))*5) / 1023;
   884  000AE8  0E00               	movlw	0
   885  000AEA  0102               	movlb	2	; () banked
   886  000AEC  6F0E               	movwf	___ftmul@f2& (0+255),b
   887  000AEE  0EA0               	movlw	160
   888  000AF0  6F0F               	movwf	(___ftmul@f2+1)& (0+255),b
   889  000AF2  0E40               	movlw	64
   890  000AF4  6F10               	movwf	(___ftmul@f2+2)& (0+255),b
   891  000AF6  0E03               	movlw	3
   892  000AF8  EC0D  F00C         	call	_adc_read
   893  000AFC  C200  F208         	movff	?_adc_read,___lwtoft@c
   894  000B00  C201  F209         	movff	?_adc_read+1,___lwtoft@c+1
   895  000B04  EC88  F00C         	call	___lwtoft	;wreg free
   896  000B08  C208  F20B         	movff	?___lwtoft,___ftmul@f1
   897  000B0C  C209  F20C         	movff	?___lwtoft+1,___ftmul@f1+1
   898  000B10  C20A  F20D         	movff	?___lwtoft+2,___ftmul@f1+2
   899  000B14  ECA8  F008         	call	___ftmul	;wreg free
   900  000B18  C20B  F21A         	movff	?___ftmul,___ftdiv@f1
   901  000B1C  C20C  F21B         	movff	?___ftmul+1,___ftdiv@f1+1
   902  000B20  C20D  F21C         	movff	?___ftmul+2,___ftdiv@f1+2
   903  000B24  0EC0               	movlw	192
   904  000B26  0102               	movlb	2	; () banked
   905  000B28  6F1D               	movwf	___ftdiv@f2& (0+255),b
   906  000B2A  0E7F               	movlw	127
   907  000B2C  6F1E               	movwf	(___ftdiv@f2+1)& (0+255),b
   908  000B2E  0E44               	movlw	68
   909  000B30  6F1F               	movwf	(___ftdiv@f2+2)& (0+255),b
   910  000B32  EC98  F009         	call	___ftdiv	;wreg free
   911  000B36  C21A  F236         	movff	?___ftdiv,main@valor
   912  000B3A  C21B  F237         	movff	?___ftdiv+1,main@valor+1
   913  000B3E  C21C  F238         	movff	?___ftdiv+2,main@valor+2
   914                           
   915                           ;main.c: 57: gotoLcd(0xC0);
   916  000B42  0EC0               	movlw	192
   917  000B44  ECA9  F00C         	call	_gotoLcd
   918                           
   919                           ;main.c: 58: writeStringLcd("Sinal Vr ");
   920  000B48  0E1C               	movlw	low STR_8
   921  000B4A  0102               	movlb	2	; () banked
   922  000B4C  6F02               	movwf	writeStringLcd@s& (0+255),b
   923  000B4E  0E08               	movlw	high STR_8
   924  000B50  6F03               	movwf	(writeStringLcd@s+1)& (0+255),b
   925  000B52  EC44  F00C         	call	_writeStringLcd	;wreg free
   926                           
   927                           ;main.c: 59: writeValueLcd(valor);
   928  000B56  C236  F229         	movff	main@valor,writeValueLcd@val
   929  000B5A  C237  F22A         	movff	main@valor+1,writeValueLcd@val+1
   930  000B5E  C238  F22B         	movff	main@valor+2,writeValueLcd@val+2
   931  000B62  EC6E  F006         	call	_writeValueLcd	;wreg free
   932                           
   933                           ;main.c: 60: writeStringLcd("V");
   934  000B66  0E4E               	movlw	low STR_3
   935  000B68  0102               	movlb	2	; () banked
   936  000B6A  6F02               	movwf	writeStringLcd@s& (0+255),b
   937  000B6C  0E08               	movlw	high STR_3
   938  000B6E  6F03               	movwf	(writeStringLcd@s+1)& (0+255),b
   939  000B70  EC44  F00C         	call	_writeStringLcd	;wreg free
   940                           
   941                           ;main.c: 61: _delay((unsigned long)((1000)*((16000000)/4000.0)));
   942  000B74  0E15               	movlw	21
   943  000B76  0102               	movlb	2	; () banked
   944  000B78  6F35               	movwf	(??_main+1)& (0+255),b
   945  000B7A  0E4B               	movlw	75
   946  000B7C  6F34               	movwf	??_main& (0+255),b
   947  000B7E  0EBE               	movlw	190
   948  000B80                     u1237:
   949  000B80  2EE8               	decfsz	wreg,f,c
   950  000B82  D7FE               	bra	u1237
   951  000B84  2F34               	decfsz	??_main& (0+255),f,b
   952  000B86  D7FC               	bra	u1237
   953  000B88  2F35               	decfsz	(??_main+1)& (0+255),f,b
   954  000B8A  D7FA               	bra	u1237
   955  000B8C  F000               	nop	
   956                           
   957                           ;main.c: 63: valor = ((float) (adc_read(4))*5) / 1023;
   958  000B8E  0E00               	movlw	0
   959  000B90  0102               	movlb	2	; () banked
   960  000B92  6F0E               	movwf	___ftmul@f2& (0+255),b
   961  000B94  0EA0               	movlw	160
   962  000B96  6F0F               	movwf	(___ftmul@f2+1)& (0+255),b
   963  000B98  0E40               	movlw	64
   964  000B9A  6F10               	movwf	(___ftmul@f2+2)& (0+255),b
   965  000B9C  0E04               	movlw	4
   966  000B9E  EC0D  F00C         	call	_adc_read
   967  000BA2  C200  F208         	movff	?_adc_read,___lwtoft@c
   968  000BA6  C201  F209         	movff	?_adc_read+1,___lwtoft@c+1
   969  000BAA  EC88  F00C         	call	___lwtoft	;wreg free
   970  000BAE  C208  F20B         	movff	?___lwtoft,___ftmul@f1
   971  000BB2  C209  F20C         	movff	?___lwtoft+1,___ftmul@f1+1
   972  000BB6  C20A  F20D         	movff	?___lwtoft+2,___ftmul@f1+2
   973  000BBA  ECA8  F008         	call	___ftmul	;wreg free
   974  000BBE  C20B  F21A         	movff	?___ftmul,___ftdiv@f1
   975  000BC2  C20C  F21B         	movff	?___ftmul+1,___ftdiv@f1+1
   976  000BC6  C20D  F21C         	movff	?___ftmul+2,___ftdiv@f1+2
   977  000BCA  0EC0               	movlw	192
   978  000BCC  0102               	movlb	2	; () banked
   979  000BCE  6F1D               	movwf	___ftdiv@f2& (0+255),b
   980  000BD0  0E7F               	movlw	127
   981  000BD2  6F1E               	movwf	(___ftdiv@f2+1)& (0+255),b
   982  000BD4  0E44               	movlw	68
   983  000BD6  6F1F               	movwf	(___ftdiv@f2+2)& (0+255),b
   984  000BD8  EC98  F009         	call	___ftdiv	;wreg free
   985  000BDC  C21A  F236         	movff	?___ftdiv,main@valor
   986  000BE0  C21B  F237         	movff	?___ftdiv+1,main@valor+1
   987  000BE4  C21C  F238         	movff	?___ftdiv+2,main@valor+2
   988                           
   989                           ;main.c: 64: gotoLcd(0xC0);
   990  000BE8  0EC0               	movlw	192
   991  000BEA  ECA9  F00C         	call	_gotoLcd
   992                           
   993                           ;main.c: 65: writeStringLcd("Sinal Vs ");
   994  000BEE  0E30               	movlw	low STR_10
   995  000BF0  0102               	movlb	2	; () banked
   996  000BF2  6F02               	movwf	writeStringLcd@s& (0+255),b
   997  000BF4  0E08               	movlw	high STR_10
   998  000BF6  6F03               	movwf	(writeStringLcd@s+1)& (0+255),b
   999  000BF8  EC44  F00C         	call	_writeStringLcd	;wreg free
  1000                           
  1001                           ;main.c: 66: writeValueLcd(valor);
  1002  000BFC  C236  F229         	movff	main@valor,writeValueLcd@val
  1003  000C00  C237  F22A         	movff	main@valor+1,writeValueLcd@val+1
  1004  000C04  C238  F22B         	movff	main@valor+2,writeValueLcd@val+2
  1005  000C08  EC6E  F006         	call	_writeValueLcd	;wreg free
  1006                           
  1007                           ;main.c: 67: writeStringLcd("V");
  1008  000C0C  0E4E               	movlw	low STR_3
  1009  000C0E  0102               	movlb	2	; () banked
  1010  000C10  6F02               	movwf	writeStringLcd@s& (0+255),b
  1011  000C12  0E08               	movlw	high STR_3
  1012  000C14  6F03               	movwf	(writeStringLcd@s+1)& (0+255),b
  1013  000C16  EC44  F00C         	call	_writeStringLcd	;wreg free
  1014                           
  1015                           ;main.c: 68: _delay((unsigned long)((1000)*((16000000)/4000.0)));
  1016  000C1A  0E15               	movlw	21
  1017  000C1C  0102               	movlb	2	; () banked
  1018  000C1E  6F35               	movwf	(??_main+1)& (0+255),b
  1019  000C20  0E4B               	movlw	75
  1020  000C22  6F34               	movwf	??_main& (0+255),b
  1021  000C24  0EBE               	movlw	190
  1022  000C26                     u1247:
  1023  000C26  2EE8               	decfsz	wreg,f,c
  1024  000C28  D7FE               	bra	u1247
  1025  000C2A  2F34               	decfsz	??_main& (0+255),f,b
  1026  000C2C  D7FC               	bra	u1247
  1027  000C2E  2F35               	decfsz	(??_main+1)& (0+255),f,b
  1028  000C30  D7FA               	bra	u1247
  1029  000C32  F000               	nop	
  1030                           
  1031                           ;main.c: 70: valor = ((float) (adc_read(5))*5) / 1023;
  1032  000C34  0E00               	movlw	0
  1033  000C36  0102               	movlb	2	; () banked
  1034  000C38  6F0E               	movwf	___ftmul@f2& (0+255),b
  1035  000C3A  0EA0               	movlw	160
  1036  000C3C  6F0F               	movwf	(___ftmul@f2+1)& (0+255),b
  1037  000C3E  0E40               	movlw	64
  1038  000C40  6F10               	movwf	(___ftmul@f2+2)& (0+255),b
  1039  000C42  0E05               	movlw	5
  1040  000C44  EC0D  F00C         	call	_adc_read
  1041  000C48  C200  F208         	movff	?_adc_read,___lwtoft@c
  1042  000C4C  C201  F209         	movff	?_adc_read+1,___lwtoft@c+1
  1043  000C50  EC88  F00C         	call	___lwtoft	;wreg free
  1044  000C54  C208  F20B         	movff	?___lwtoft,___ftmul@f1
  1045  000C58  C209  F20C         	movff	?___lwtoft+1,___ftmul@f1+1
  1046  000C5C  C20A  F20D         	movff	?___lwtoft+2,___ftmul@f1+2
  1047  000C60  ECA8  F008         	call	___ftmul	;wreg free
  1048  000C64  C20B  F21A         	movff	?___ftmul,___ftdiv@f1
  1049  000C68  C20C  F21B         	movff	?___ftmul+1,___ftdiv@f1+1
  1050  000C6C  C20D  F21C         	movff	?___ftmul+2,___ftdiv@f1+2
  1051  000C70  0EC0               	movlw	192
  1052  000C72  0102               	movlb	2	; () banked
  1053  000C74  6F1D               	movwf	___ftdiv@f2& (0+255),b
  1054  000C76  0E7F               	movlw	127
  1055  000C78  6F1E               	movwf	(___ftdiv@f2+1)& (0+255),b
  1056  000C7A  0E44               	movlw	68
  1057  000C7C  6F1F               	movwf	(___ftdiv@f2+2)& (0+255),b
  1058  000C7E  EC98  F009         	call	___ftdiv	;wreg free
  1059  000C82  C21A  F236         	movff	?___ftdiv,main@valor
  1060  000C86  C21B  F237         	movff	?___ftdiv+1,main@valor+1
  1061  000C8A  C21C  F238         	movff	?___ftdiv+2,main@valor+2
  1062                           
  1063                           ;main.c: 71: gotoLcd(0xC0);
  1064  000C8E  0EC0               	movlw	192
  1065  000C90  ECA9  F00C         	call	_gotoLcd
  1066                           
  1067                           ;main.c: 72: writeStringLcd("Sinal Vt ");
  1068  000C94  0E44               	movlw	low STR_12
  1069  000C96  0102               	movlb	2	; () banked
  1070  000C98  6F02               	movwf	writeStringLcd@s& (0+255),b
  1071  000C9A  0E08               	movlw	high STR_12
  1072  000C9C  6F03               	movwf	(writeStringLcd@s+1)& (0+255),b
  1073  000C9E  EC44  F00C         	call	_writeStringLcd	;wreg free
  1074                           
  1075                           ;main.c: 73: writeValueLcd(valor);
  1076  000CA2  C236  F229         	movff	main@valor,writeValueLcd@val
  1077  000CA6  C237  F22A         	movff	main@valor+1,writeValueLcd@val+1
  1078  000CAA  C238  F22B         	movff	main@valor+2,writeValueLcd@val+2
  1079  000CAE  EC6E  F006         	call	_writeValueLcd	;wreg free
  1080                           
  1081                           ;main.c: 74: writeStringLcd("V");
  1082  000CB2  0E4E               	movlw	low STR_3
  1083  000CB4  0102               	movlb	2	; () banked
  1084  000CB6  6F02               	movwf	writeStringLcd@s& (0+255),b
  1085  000CB8  0E08               	movlw	high STR_3
  1086  000CBA  6F03               	movwf	(writeStringLcd@s+1)& (0+255),b
  1087  000CBC  EC44  F00C         	call	_writeStringLcd	;wreg free
  1088                           
  1089                           ;main.c: 75: _delay((unsigned long)((1000)*((16000000)/4000.0)));
  1090  000CC0  0E15               	movlw	21
  1091  000CC2  0102               	movlb	2	; () banked
  1092  000CC4  6F35               	movwf	(??_main+1)& (0+255),b
  1093  000CC6  0E4B               	movlw	75
  1094  000CC8  6F34               	movwf	??_main& (0+255),b
  1095  000CCA  0EBE               	movlw	190
  1096  000CCC                     u1257:
  1097  000CCC  2EE8               	decfsz	wreg,f,c
  1098  000CCE  D7FE               	bra	u1257
  1099  000CD0  2F34               	decfsz	??_main& (0+255),f,b
  1100  000CD2  D7FC               	bra	u1257
  1101  000CD4  2F35               	decfsz	(??_main+1)& (0+255),f,b
  1102  000CD6  D7FA               	bra	u1257
  1103  000CD8  F000               	nop	
  1104  000CDA  D603               	goto	l23
  1105  000CDC                     __end_of_main:
  1106                           	opt stack 0
  1107                           tblptru	equ	0xFF8
  1108                           wreg	equ	0xFE8
  1109                           
  1110 ;; *************** function _writeValueLcd *****************
  1111 ;; Defined at:
  1112 ;;		line 53 in file "lcd.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  val             3   41[BANK2 ] float 
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  x               4   48[BANK2 ] long 
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, status,0, cstack
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1126 ;;      Params:         0       0       0       3       0       0       0       0       0
  1127 ;;      Locals:         0       0       0       4       0       0       0       0       0
  1128 ;;      Temps:          0       0       0       4       0       0       0       0       0
  1129 ;;      Totals:         0       0       0      11       0       0       0       0       0
  1130 ;;Total ram usage:       11 bytes
  1131 ;; Hardware stack levels used:    1
  1132 ;; Hardware stack levels required when called:    5
  1133 ;; This function calls:
  1134 ;;		___aldiv
  1135 ;;		___almod
  1136 ;;		___ftmul
  1137 ;;		___fttol
  1138 ;;		___lmul
  1139 ;;		_writeLcd
  1140 ;; This function is called by:
  1141 ;;		_main
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text1
  1146  000CDC                     __ptext1:
  1147                           	opt stack 0
  1148  000CDC                     _writeValueLcd:
  1149                           	opt stack 25
  1150                           
  1151                           ;lcd.c: 54: LATBbits.LATB4 = 1;
  1152                           
  1153                           ;incstack = 0
  1154  000CDC  888A               	bsf	3978,4,c	;volatile
  1155                           
  1156                           ;lcd.c: 55: long x = val*100;
  1157  000CDE  0E00               	movlw	0
  1158  000CE0  0102               	movlb	2	; () banked
  1159  000CE2  6F0E               	movwf	___ftmul@f2& (0+255),b
  1160  000CE4  0EC8               	movlw	200
  1161  000CE6  6F0F               	movwf	(___ftmul@f2+1)& (0+255),b
  1162  000CE8  0E42               	movlw	66
  1163  000CEA  6F10               	movwf	(___ftmul@f2+2)& (0+255),b
  1164  000CEC  C229  F20B         	movff	writeValueLcd@val,___ftmul@f1
  1165  000CF0  C22A  F20C         	movff	writeValueLcd@val+1,___ftmul@f1+1
  1166  000CF4  C22B  F20D         	movff	writeValueLcd@val+2,___ftmul@f1+2
  1167  000CF8  ECA8  F008         	call	___ftmul	;wreg free
  1168  000CFC  C20B  F21A         	movff	?___ftmul,___fttol@f1
  1169  000D00  C20C  F21B         	movff	?___ftmul+1,___fttol@f1+1
  1170  000D04  C20D  F21C         	movff	?___ftmul+2,___fttol@f1+2
  1171  000D08  EC2C  F008         	call	___fttol	;wreg free
  1172  000D0C  C21A  F230         	movff	?___fttol,writeValueLcd@x
  1173  000D10  C21B  F231         	movff	?___fttol+1,writeValueLcd@x+1
  1174  000D14  C21C  F232         	movff	?___fttol+2,writeValueLcd@x+2
  1175  000D18  C21D  F233         	movff	?___fttol+3,writeValueLcd@x+3
  1176                           
  1177                           ;lcd.c: 56: if(val<0.0) { x *= -1; writeLcd('-');}
  1178  000D1C  0102               	movlb	2	; () banked
  1179  000D1E  AF2B               	btfss	(writeValueLcd@val+2)& (0+255),7,b
  1180  000D20  D01D               	goto	l139
  1181                           
  1182                           ; BSR set to: 2
  1183  000D22  C230  F200         	movff	writeValueLcd@x,___lmul@multiplier
  1184  000D26  C231  F201         	movff	writeValueLcd@x+1,___lmul@multiplier+1
  1185  000D2A  C232  F202         	movff	writeValueLcd@x+2,___lmul@multiplier+2
  1186  000D2E  C233  F203         	movff	writeValueLcd@x+3,___lmul@multiplier+3
  1187  000D32  0EFF               	movlw	255
  1188  000D34  6F04               	movwf	___lmul@multiplicand& (0+255),b
  1189  000D36  0EFF               	movlw	255
  1190  000D38  6F05               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1191  000D3A  0EFF               	movlw	255
  1192  000D3C  6F06               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1193  000D3E  0EFF               	movlw	255
  1194  000D40  6F07               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1195  000D42  ECB8  F00B         	call	___lmul	;wreg free
  1196  000D46  C200  F230         	movff	?___lmul,writeValueLcd@x
  1197  000D4A  C201  F231         	movff	?___lmul+1,writeValueLcd@x+1
  1198  000D4E  C202  F232         	movff	?___lmul+2,writeValueLcd@x+2
  1199  000D52  C203  F233         	movff	?___lmul+3,writeValueLcd@x+3
  1200  000D56  0E2D               	movlw	45
  1201  000D58  ECE4  F00B         	call	_writeLcd
  1202  000D5C                     l139:
  1203                           
  1204                           ;lcd.c: 57: if(x > 1000) {
  1205  000D5C  0102               	movlb	2	; () banked
  1206  000D5E  BF33               	btfsc	(writeValueLcd@x+3)& (0+255),7,b
  1207  000D60  D0B9               	goto	l140
  1208  000D62  5133               	movf	(writeValueLcd@x+3)& (0+255),w,b
  1209  000D64  1132               	iorwf	(writeValueLcd@x+2)& (0+255),w,b
  1210  000D66  E106               	bnz	u1050
  1211  000D68  0EE9               	movlw	233
  1212  000D6A  5D30               	subwf	writeValueLcd@x& (0+255),w,b
  1213  000D6C  0E03               	movlw	3
  1214  000D6E  5931               	subwfb	(writeValueLcd@x+1)& (0+255),w,b
  1215  000D70  A0D8               	btfss	status,0,c
  1216  000D72  D0B0               	goto	l140
  1217  000D74                     u1050:
  1218                           
  1219                           ; BSR set to: 2
  1220                           ;lcd.c: 58: if(x > 10000) writeLcd(((x%100000-x%10000)/10000)+48);
  1221  000D74  BF33               	btfsc	(writeValueLcd@x+3)& (0+255),7,b
  1222  000D76  D05B               	goto	l141
  1223  000D78  5133               	movf	(writeValueLcd@x+3)& (0+255),w,b
  1224  000D7A  1132               	iorwf	(writeValueLcd@x+2)& (0+255),w,b
  1225  000D7C  E106               	bnz	u1060
  1226  000D7E  0E11               	movlw	17
  1227  000D80  5D30               	subwf	writeValueLcd@x& (0+255),w,b
  1228  000D82  0E27               	movlw	39
  1229  000D84  5931               	subwfb	(writeValueLcd@x+1)& (0+255),w,b
  1230  000D86  A0D8               	btfss	status,0,c
  1231  000D88  D052               	goto	l141
  1232  000D8A                     u1060:
  1233                           
  1234                           ; BSR set to: 2
  1235  000D8A  0EA0               	movlw	160
  1236  000D8C  6F04               	movwf	___almod@divisor& (0+255),b
  1237  000D8E  0E86               	movlw	134
  1238  000D90  6F05               	movwf	(___almod@divisor+1)& (0+255),b
  1239  000D92  0E01               	movlw	1
  1240  000D94  6F06               	movwf	(___almod@divisor+2)& (0+255),b
  1241  000D96  0E00               	movlw	0
  1242  000D98  6F07               	movwf	(___almod@divisor+3)& (0+255),b
  1243  000D9A  C230  F200         	movff	writeValueLcd@x,___almod@dividend
  1244  000D9E  C231  F201         	movff	writeValueLcd@x+1,___almod@dividend+1
  1245  000DA2  C232  F202         	movff	writeValueLcd@x+2,___almod@dividend+2
  1246  000DA6  C233  F203         	movff	writeValueLcd@x+3,___almod@dividend+3
  1247  000DAA  ECCB  F00A         	call	___almod	;wreg free
  1248  000DAE  C200  F22C         	movff	?___almod,??_writeValueLcd
  1249  000DB2  C201  F22D         	movff	?___almod+1,??_writeValueLcd+1
  1250  000DB6  C202  F22E         	movff	?___almod+2,??_writeValueLcd+2
  1251  000DBA  C203  F22F         	movff	?___almod+3,??_writeValueLcd+3
  1252  000DBE  0E10               	movlw	16
  1253  000DC0  0102               	movlb	2	; () banked
  1254  000DC2  6F04               	movwf	___almod@divisor& (0+255),b
  1255  000DC4  0E27               	movlw	39
  1256  000DC6  6F05               	movwf	(___almod@divisor+1)& (0+255),b
  1257  000DC8  0E00               	movlw	0
  1258  000DCA  6F06               	movwf	(___almod@divisor+2)& (0+255),b
  1259  000DCC  0E00               	movlw	0
  1260  000DCE  6F07               	movwf	(___almod@divisor+3)& (0+255),b
  1261  000DD0  C230  F200         	movff	writeValueLcd@x,___almod@dividend
  1262  000DD4  C231  F201         	movff	writeValueLcd@x+1,___almod@dividend+1
  1263  000DD8  C232  F202         	movff	writeValueLcd@x+2,___almod@dividend+2
  1264  000DDC  C233  F203         	movff	writeValueLcd@x+3,___almod@dividend+3
  1265  000DE0  ECCB  F00A         	call	___almod	;wreg free
  1266  000DE4  0102               	movlb	2	; () banked
  1267  000DE6  1F00               	comf	?___almod& (0+255),f,b
  1268  000DE8  1F01               	comf	(?___almod+1)& (0+255),f,b
  1269  000DEA  1F02               	comf	(?___almod+2)& (0+255),f,b
  1270  000DEC  1F03               	comf	(?___almod+3)& (0+255),f,b
  1271  000DEE  2B00               	incf	?___almod& (0+255),f,b
  1272  000DF0  0E00               	movlw	0
  1273  000DF2  2301               	addwfc	(?___almod+1)& (0+255),f,b
  1274  000DF4  2302               	addwfc	(?___almod+2)& (0+255),f,b
  1275  000DF6  2303               	addwfc	(?___almod+3)& (0+255),f,b
  1276  000DF8  5100               	movf	?___almod& (0+255),w,b
  1277  000DFA  252C               	addwf	??_writeValueLcd& (0+255),w,b
  1278  000DFC  6F0A               	movwf	___aldiv@dividend& (0+255),b
  1279  000DFE  5101               	movf	(?___almod+1)& (0+255),w,b
  1280  000E00  212D               	addwfc	(??_writeValueLcd+1)& (0+255),w,b
  1281  000E02  6F0B               	movwf	(___aldiv@dividend+1)& (0+255),b
  1282  000E04  5102               	movf	(?___almod+2)& (0+255),w,b
  1283  000E06  212E               	addwfc	(??_writeValueLcd+2)& (0+255),w,b
  1284  000E08  6F0C               	movwf	(___aldiv@dividend+2)& (0+255),b
  1285  000E0A  5103               	movf	(?___almod+3)& (0+255),w,b
  1286  000E0C  212F               	addwfc	(??_writeValueLcd+3)& (0+255),w,b
  1287  000E0E  6F0D               	movwf	(___aldiv@dividend+3)& (0+255),b
  1288  000E10  0E10               	movlw	16
  1289  000E12  6F0E               	movwf	___aldiv@divisor& (0+255),b
  1290  000E14  0E27               	movlw	39
  1291  000E16  6F0F               	movwf	(___aldiv@divisor+1)& (0+255),b
  1292  000E18  0E00               	movlw	0
  1293  000E1A  6F10               	movwf	(___aldiv@divisor+2)& (0+255),b
  1294  000E1C  0E00               	movlw	0
  1295  000E1E  6F11               	movwf	(___aldiv@divisor+3)& (0+255),b
  1296  000E20  EC0C  F00A         	call	___aldiv	;wreg free
  1297  000E24  0102               	movlb	2	; () banked
  1298  000E26  510A               	movf	?___aldiv& (0+255),w,b
  1299  000E28  0F30               	addlw	48
  1300  000E2A  ECE4  F00B         	call	_writeLcd
  1301  000E2E                     l141:
  1302                           
  1303                           ;lcd.c: 59: writeLcd(((x%10000-x%1000)/1000)+48);
  1304  000E2E  0E10               	movlw	16
  1305  000E30  0102               	movlb	2	; () banked
  1306  000E32  6F04               	movwf	___almod@divisor& (0+255),b
  1307  000E34  0E27               	movlw	39
  1308  000E36  6F05               	movwf	(___almod@divisor+1)& (0+255),b
  1309  000E38  0E00               	movlw	0
  1310  000E3A  6F06               	movwf	(___almod@divisor+2)& (0+255),b
  1311  000E3C  0E00               	movlw	0
  1312  000E3E  6F07               	movwf	(___almod@divisor+3)& (0+255),b
  1313  000E40  C230  F200         	movff	writeValueLcd@x,___almod@dividend
  1314  000E44  C231  F201         	movff	writeValueLcd@x+1,___almod@dividend+1
  1315  000E48  C232  F202         	movff	writeValueLcd@x+2,___almod@dividend+2
  1316  000E4C  C233  F203         	movff	writeValueLcd@x+3,___almod@dividend+3
  1317  000E50  ECCB  F00A         	call	___almod	;wreg free
  1318  000E54  C200  F22C         	movff	?___almod,??_writeValueLcd
  1319  000E58  C201  F22D         	movff	?___almod+1,??_writeValueLcd+1
  1320  000E5C  C202  F22E         	movff	?___almod+2,??_writeValueLcd+2
  1321  000E60  C203  F22F         	movff	?___almod+3,??_writeValueLcd+3
  1322  000E64  0EE8               	movlw	232
  1323  000E66  0102               	movlb	2	; () banked
  1324  000E68  6F04               	movwf	___almod@divisor& (0+255),b
  1325  000E6A  0E03               	movlw	3
  1326  000E6C  6F05               	movwf	(___almod@divisor+1)& (0+255),b
  1327  000E6E  0E00               	movlw	0
  1328  000E70  6F06               	movwf	(___almod@divisor+2)& (0+255),b
  1329  000E72  0E00               	movlw	0
  1330  000E74  6F07               	movwf	(___almod@divisor+3)& (0+255),b
  1331  000E76  C230  F200         	movff	writeValueLcd@x,___almod@dividend
  1332  000E7A  C231  F201         	movff	writeValueLcd@x+1,___almod@dividend+1
  1333  000E7E  C232  F202         	movff	writeValueLcd@x+2,___almod@dividend+2
  1334  000E82  C233  F203         	movff	writeValueLcd@x+3,___almod@dividend+3
  1335  000E86  ECCB  F00A         	call	___almod	;wreg free
  1336  000E8A  0102               	movlb	2	; () banked
  1337  000E8C  1F00               	comf	?___almod& (0+255),f,b
  1338  000E8E  1F01               	comf	(?___almod+1)& (0+255),f,b
  1339  000E90  1F02               	comf	(?___almod+2)& (0+255),f,b
  1340  000E92  1F03               	comf	(?___almod+3)& (0+255),f,b
  1341  000E94  2B00               	incf	?___almod& (0+255),f,b
  1342  000E96  0E00               	movlw	0
  1343  000E98  2301               	addwfc	(?___almod+1)& (0+255),f,b
  1344  000E9A  2302               	addwfc	(?___almod+2)& (0+255),f,b
  1345  000E9C  2303               	addwfc	(?___almod+3)& (0+255),f,b
  1346  000E9E  5100               	movf	?___almod& (0+255),w,b
  1347  000EA0  252C               	addwf	??_writeValueLcd& (0+255),w,b
  1348  000EA2  6F0A               	movwf	___aldiv@dividend& (0+255),b
  1349  000EA4  5101               	movf	(?___almod+1)& (0+255),w,b
  1350  000EA6  212D               	addwfc	(??_writeValueLcd+1)& (0+255),w,b
  1351  000EA8  6F0B               	movwf	(___aldiv@dividend+1)& (0+255),b
  1352  000EAA  5102               	movf	(?___almod+2)& (0+255),w,b
  1353  000EAC  212E               	addwfc	(??_writeValueLcd+2)& (0+255),w,b
  1354  000EAE  6F0C               	movwf	(___aldiv@dividend+2)& (0+255),b
  1355  000EB0  5103               	movf	(?___almod+3)& (0+255),w,b
  1356  000EB2  212F               	addwfc	(??_writeValueLcd+3)& (0+255),w,b
  1357  000EB4  6F0D               	movwf	(___aldiv@dividend+3)& (0+255),b
  1358  000EB6  0EE8               	movlw	232
  1359  000EB8  6F0E               	movwf	___aldiv@divisor& (0+255),b
  1360  000EBA  0E03               	movlw	3
  1361  000EBC  6F0F               	movwf	(___aldiv@divisor+1)& (0+255),b
  1362  000EBE  0E00               	movlw	0
  1363  000EC0  6F10               	movwf	(___aldiv@divisor+2)& (0+255),b
  1364  000EC2  0E00               	movlw	0
  1365  000EC4  6F11               	movwf	(___aldiv@divisor+3)& (0+255),b
  1366  000EC6  EC0C  F00A         	call	___aldiv	;wreg free
  1367  000ECA  0102               	movlb	2	; () banked
  1368  000ECC  510A               	movf	?___aldiv& (0+255),w,b
  1369  000ECE  0F30               	addlw	48
  1370  000ED0  ECE4  F00B         	call	_writeLcd
  1371  000ED4                     l140:
  1372                           
  1373                           ;lcd.c: 60: }
  1374                           ;lcd.c: 61: writeLcd(((x%1000-x%100)/100)+48);
  1375  000ED4  0EE8               	movlw	232
  1376  000ED6  0102               	movlb	2	; () banked
  1377  000ED8  6F04               	movwf	___almod@divisor& (0+255),b
  1378  000EDA  0E03               	movlw	3
  1379  000EDC  6F05               	movwf	(___almod@divisor+1)& (0+255),b
  1380  000EDE  0E00               	movlw	0
  1381  000EE0  6F06               	movwf	(___almod@divisor+2)& (0+255),b
  1382  000EE2  0E00               	movlw	0
  1383  000EE4  6F07               	movwf	(___almod@divisor+3)& (0+255),b
  1384  000EE6  C230  F200         	movff	writeValueLcd@x,___almod@dividend
  1385  000EEA  C231  F201         	movff	writeValueLcd@x+1,___almod@dividend+1
  1386  000EEE  C232  F202         	movff	writeValueLcd@x+2,___almod@dividend+2
  1387  000EF2  C233  F203         	movff	writeValueLcd@x+3,___almod@dividend+3
  1388  000EF6  ECCB  F00A         	call	___almod	;wreg free
  1389  000EFA  C200  F22C         	movff	?___almod,??_writeValueLcd
  1390  000EFE  C201  F22D         	movff	?___almod+1,??_writeValueLcd+1
  1391  000F02  C202  F22E         	movff	?___almod+2,??_writeValueLcd+2
  1392  000F06  C203  F22F         	movff	?___almod+3,??_writeValueLcd+3
  1393  000F0A  0E64               	movlw	100
  1394  000F0C  0102               	movlb	2	; () banked
  1395  000F0E  6F04               	movwf	___almod@divisor& (0+255),b
  1396  000F10  0E00               	movlw	0
  1397  000F12  6F05               	movwf	(___almod@divisor+1)& (0+255),b
  1398  000F14  0E00               	movlw	0
  1399  000F16  6F06               	movwf	(___almod@divisor+2)& (0+255),b
  1400  000F18  0E00               	movlw	0
  1401  000F1A  6F07               	movwf	(___almod@divisor+3)& (0+255),b
  1402  000F1C  C230  F200         	movff	writeValueLcd@x,___almod@dividend
  1403  000F20  C231  F201         	movff	writeValueLcd@x+1,___almod@dividend+1
  1404  000F24  C232  F202         	movff	writeValueLcd@x+2,___almod@dividend+2
  1405  000F28  C233  F203         	movff	writeValueLcd@x+3,___almod@dividend+3
  1406  000F2C  ECCB  F00A         	call	___almod	;wreg free
  1407  000F30  0102               	movlb	2	; () banked
  1408  000F32  1F00               	comf	?___almod& (0+255),f,b
  1409  000F34  1F01               	comf	(?___almod+1)& (0+255),f,b
  1410  000F36  1F02               	comf	(?___almod+2)& (0+255),f,b
  1411  000F38  1F03               	comf	(?___almod+3)& (0+255),f,b
  1412  000F3A  2B00               	incf	?___almod& (0+255),f,b
  1413  000F3C  0E00               	movlw	0
  1414  000F3E  2301               	addwfc	(?___almod+1)& (0+255),f,b
  1415  000F40  2302               	addwfc	(?___almod+2)& (0+255),f,b
  1416  000F42  2303               	addwfc	(?___almod+3)& (0+255),f,b
  1417  000F44  5100               	movf	?___almod& (0+255),w,b
  1418  000F46  252C               	addwf	??_writeValueLcd& (0+255),w,b
  1419  000F48  6F0A               	movwf	___aldiv@dividend& (0+255),b
  1420  000F4A  5101               	movf	(?___almod+1)& (0+255),w,b
  1421  000F4C  212D               	addwfc	(??_writeValueLcd+1)& (0+255),w,b
  1422  000F4E  6F0B               	movwf	(___aldiv@dividend+1)& (0+255),b
  1423  000F50  5102               	movf	(?___almod+2)& (0+255),w,b
  1424  000F52  212E               	addwfc	(??_writeValueLcd+2)& (0+255),w,b
  1425  000F54  6F0C               	movwf	(___aldiv@dividend+2)& (0+255),b
  1426  000F56  5103               	movf	(?___almod+3)& (0+255),w,b
  1427  000F58  212F               	addwfc	(??_writeValueLcd+3)& (0+255),w,b
  1428  000F5A  6F0D               	movwf	(___aldiv@dividend+3)& (0+255),b
  1429  000F5C  0E64               	movlw	100
  1430  000F5E  6F0E               	movwf	___aldiv@divisor& (0+255),b
  1431  000F60  0E00               	movlw	0
  1432  000F62  6F0F               	movwf	(___aldiv@divisor+1)& (0+255),b
  1433  000F64  0E00               	movlw	0
  1434  000F66  6F10               	movwf	(___aldiv@divisor+2)& (0+255),b
  1435  000F68  0E00               	movlw	0
  1436  000F6A  6F11               	movwf	(___aldiv@divisor+3)& (0+255),b
  1437  000F6C  EC0C  F00A         	call	___aldiv	;wreg free
  1438  000F70  0102               	movlb	2	; () banked
  1439  000F72  510A               	movf	?___aldiv& (0+255),w,b
  1440  000F74  0F30               	addlw	48
  1441  000F76  ECE4  F00B         	call	_writeLcd
  1442                           
  1443                           ;lcd.c: 62: writeLcd('.');
  1444  000F7A  0E2E               	movlw	46
  1445  000F7C  ECE4  F00B         	call	_writeLcd
  1446                           
  1447                           ;lcd.c: 63: writeLcd(((x%100-x%10)/10)+48);
  1448  000F80  0E64               	movlw	100
  1449  000F82  0102               	movlb	2	; () banked
  1450  000F84  6F04               	movwf	___almod@divisor& (0+255),b
  1451  000F86  0E00               	movlw	0
  1452  000F88  6F05               	movwf	(___almod@divisor+1)& (0+255),b
  1453  000F8A  0E00               	movlw	0
  1454  000F8C  6F06               	movwf	(___almod@divisor+2)& (0+255),b
  1455  000F8E  0E00               	movlw	0
  1456  000F90  6F07               	movwf	(___almod@divisor+3)& (0+255),b
  1457  000F92  C230  F200         	movff	writeValueLcd@x,___almod@dividend
  1458  000F96  C231  F201         	movff	writeValueLcd@x+1,___almod@dividend+1
  1459  000F9A  C232  F202         	movff	writeValueLcd@x+2,___almod@dividend+2
  1460  000F9E  C233  F203         	movff	writeValueLcd@x+3,___almod@dividend+3
  1461  000FA2  ECCB  F00A         	call	___almod	;wreg free
  1462  000FA6  C200  F22C         	movff	?___almod,??_writeValueLcd
  1463  000FAA  C201  F22D         	movff	?___almod+1,??_writeValueLcd+1
  1464  000FAE  C202  F22E         	movff	?___almod+2,??_writeValueLcd+2
  1465  000FB2  C203  F22F         	movff	?___almod+3,??_writeValueLcd+3
  1466  000FB6  0E0A               	movlw	10
  1467  000FB8  0102               	movlb	2	; () banked
  1468  000FBA  6F04               	movwf	___almod@divisor& (0+255),b
  1469  000FBC  0E00               	movlw	0
  1470  000FBE  6F05               	movwf	(___almod@divisor+1)& (0+255),b
  1471  000FC0  0E00               	movlw	0
  1472  000FC2  6F06               	movwf	(___almod@divisor+2)& (0+255),b
  1473  000FC4  0E00               	movlw	0
  1474  000FC6  6F07               	movwf	(___almod@divisor+3)& (0+255),b
  1475  000FC8  C230  F200         	movff	writeValueLcd@x,___almod@dividend
  1476  000FCC  C231  F201         	movff	writeValueLcd@x+1,___almod@dividend+1
  1477  000FD0  C232  F202         	movff	writeValueLcd@x+2,___almod@dividend+2
  1478  000FD4  C233  F203         	movff	writeValueLcd@x+3,___almod@dividend+3
  1479  000FD8  ECCB  F00A         	call	___almod	;wreg free
  1480  000FDC  0102               	movlb	2	; () banked
  1481  000FDE  1F00               	comf	?___almod& (0+255),f,b
  1482  000FE0  1F01               	comf	(?___almod+1)& (0+255),f,b
  1483  000FE2  1F02               	comf	(?___almod+2)& (0+255),f,b
  1484  000FE4  1F03               	comf	(?___almod+3)& (0+255),f,b
  1485  000FE6  2B00               	incf	?___almod& (0+255),f,b
  1486  000FE8  0E00               	movlw	0
  1487  000FEA  2301               	addwfc	(?___almod+1)& (0+255),f,b
  1488  000FEC  2302               	addwfc	(?___almod+2)& (0+255),f,b
  1489  000FEE  2303               	addwfc	(?___almod+3)& (0+255),f,b
  1490  000FF0  5100               	movf	?___almod& (0+255),w,b
  1491  000FF2  252C               	addwf	??_writeValueLcd& (0+255),w,b
  1492  000FF4  6F0A               	movwf	___aldiv@dividend& (0+255),b
  1493  000FF6  5101               	movf	(?___almod+1)& (0+255),w,b
  1494  000FF8  212D               	addwfc	(??_writeValueLcd+1)& (0+255),w,b
  1495  000FFA  6F0B               	movwf	(___aldiv@dividend+1)& (0+255),b
  1496  000FFC  5102               	movf	(?___almod+2)& (0+255),w,b
  1497  000FFE  212E               	addwfc	(??_writeValueLcd+2)& (0+255),w,b
  1498  001000  6F0C               	movwf	(___aldiv@dividend+2)& (0+255),b
  1499  001002  5103               	movf	(?___almod+3)& (0+255),w,b
  1500  001004  212F               	addwfc	(??_writeValueLcd+3)& (0+255),w,b
  1501  001006  6F0D               	movwf	(___aldiv@dividend+3)& (0+255),b
  1502  001008  0E0A               	movlw	10
  1503  00100A  6F0E               	movwf	___aldiv@divisor& (0+255),b
  1504  00100C  0E00               	movlw	0
  1505  00100E  6F0F               	movwf	(___aldiv@divisor+1)& (0+255),b
  1506  001010  0E00               	movlw	0
  1507  001012  6F10               	movwf	(___aldiv@divisor+2)& (0+255),b
  1508  001014  0E00               	movlw	0
  1509  001016  6F11               	movwf	(___aldiv@divisor+3)& (0+255),b
  1510  001018  EC0C  F00A         	call	___aldiv	;wreg free
  1511  00101C  0102               	movlb	2	; () banked
  1512  00101E  510A               	movf	?___aldiv& (0+255),w,b
  1513  001020  0F30               	addlw	48
  1514  001022  ECE4  F00B         	call	_writeLcd
  1515                           
  1516                           ;lcd.c: 64: writeLcd((x%10)+48);
  1517  001026  C230  F200         	movff	writeValueLcd@x,___almod@dividend
  1518  00102A  C231  F201         	movff	writeValueLcd@x+1,___almod@dividend+1
  1519  00102E  C232  F202         	movff	writeValueLcd@x+2,___almod@dividend+2
  1520  001032  C233  F203         	movff	writeValueLcd@x+3,___almod@dividend+3
  1521  001036  0E0A               	movlw	10
  1522  001038  0102               	movlb	2	; () banked
  1523  00103A  6F04               	movwf	___almod@divisor& (0+255),b
  1524  00103C  0E00               	movlw	0
  1525  00103E  6F05               	movwf	(___almod@divisor+1)& (0+255),b
  1526  001040  0E00               	movlw	0
  1527  001042  6F06               	movwf	(___almod@divisor+2)& (0+255),b
  1528  001044  0E00               	movlw	0
  1529  001046  6F07               	movwf	(___almod@divisor+3)& (0+255),b
  1530  001048  ECCB  F00A         	call	___almod	;wreg free
  1531  00104C  0102               	movlb	2	; () banked
  1532  00104E  5100               	movf	?___almod& (0+255),w,b
  1533  001050  0F30               	addlw	48
  1534  001052  ECE4  F00B         	call	_writeLcd
  1535  001056  0012               	return		;funcret
  1536  001058                     __end_of_writeValueLcd:
  1537                           	opt stack 0
  1538                           tblptru	equ	0xFF8
  1539                           wreg	equ	0xFE8
  1540                           status	equ	0xFD8
  1541                           
  1542 ;; *************** function ___lmul *****************
  1543 ;; Defined at:
  1544 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;  multiplier      4    0[BANK2 ] unsigned long 
  1547 ;;  multiplicand    4    4[BANK2 ] unsigned long 
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;  product         4    8[BANK2 ] unsigned long 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  4    0[BANK2 ] unsigned long 
  1552 ;; Registers used:
  1553 ;;		wreg, status,2, status,0
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1559 ;;      Params:         0       0       0       8       0       0       0       0       0
  1560 ;;      Locals:         0       0       0       4       0       0       0       0       0
  1561 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1562 ;;      Totals:         0       0       0      12       0       0       0       0       0
  1563 ;;Total ram usage:       12 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:    3
  1566 ;; This function calls:
  1567 ;;		Nothing
  1568 ;; This function is called by:
  1569 ;;		_writeValueLcd
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           	psect	text2
  1574  001770                     __ptext2:
  1575                           	opt stack 0
  1576  001770                     ___lmul:
  1577                           	opt stack 26
  1578                           
  1579                           ;incstack = 0
  1580  001770  0E00               	movlw	0
  1581  001772  0102               	movlb	2	; () banked
  1582  001774  6F08               	movwf	___lmul@product& (0+255),b
  1583  001776  0E00               	movlw	0
  1584  001778  6F09               	movwf	(___lmul@product+1)& (0+255),b
  1585  00177A  0E00               	movlw	0
  1586  00177C  6F0A               	movwf	(___lmul@product+2)& (0+255),b
  1587  00177E  0E00               	movlw	0
  1588  001780  6F0B               	movwf	(___lmul@product+3)& (0+255),b
  1589  001782                     
  1590                           ; BSR set to: 2
  1591                           
  1592                           ; BSR set to: 2
  1593  001782  A100               	btfss	___lmul@multiplier& (0+255),0,b
  1594  001784  D008               	goto	l175
  1595                           
  1596                           ; BSR set to: 2
  1597  001786  5104               	movf	___lmul@multiplicand& (0+255),w,b
  1598  001788  2708               	addwf	___lmul@product& (0+255),f,b
  1599  00178A  5105               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1600  00178C  2309               	addwfc	(___lmul@product+1)& (0+255),f,b
  1601  00178E  5106               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1602  001790  230A               	addwfc	(___lmul@product+2)& (0+255),f,b
  1603  001792  5107               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1604  001794  230B               	addwfc	(___lmul@product+3)& (0+255),f,b
  1605  001796                     l175:
  1606                           
  1607                           ; BSR set to: 2
  1608                           
  1609                           ; BSR set to: 2
  1610  001796  90D8               	bcf	status,0,c
  1611  001798  3704               	rlcf	___lmul@multiplicand& (0+255),f,b
  1612  00179A  3705               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1613  00179C  3706               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1614  00179E  3707               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1615                           
  1616                           ; BSR set to: 2
  1617  0017A0  90D8               	bcf	status,0,c
  1618  0017A2  3303               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1619  0017A4  3302               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1620  0017A6  3301               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1621  0017A8  3300               	rrcf	___lmul@multiplier& (0+255),f,b
  1622  0017AA  5100               	movf	___lmul@multiplier& (0+255),w,b
  1623  0017AC  1101               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1624  0017AE  1102               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1625  0017B0  1103               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1626  0017B2  A4D8               	btfss	status,2,c
  1627  0017B4  D7E6               	goto	l174
  1628                           
  1629                           ; BSR set to: 2
  1630  0017B6  C208  F200         	movff	___lmul@product,?___lmul
  1631  0017BA  C209  F201         	movff	___lmul@product+1,?___lmul+1
  1632  0017BE  C20A  F202         	movff	___lmul@product+2,?___lmul+2
  1633  0017C2  C20B  F203         	movff	___lmul@product+3,?___lmul+3
  1634                           
  1635                           ; BSR set to: 2
  1636  0017C6  0012               	return		;funcret
  1637  0017C8                     __end_of___lmul:
  1638                           	opt stack 0
  1639                           tblptru	equ	0xFF8
  1640                           wreg	equ	0xFE8
  1641                           status	equ	0xFD8
  1642                           
  1643 ;; *************** function ___fttol *****************
  1644 ;; Defined at:
  1645 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;  f1              3   26[BANK2 ] float 
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;  lval            4   36[BANK2 ] unsigned long 
  1650 ;;  exp1            1   40[BANK2 ] unsigned char 
  1651 ;;  sign1           1   35[BANK2 ] unsigned char 
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  4   26[BANK2 ] long 
  1654 ;; Registers used:
  1655 ;;		wreg, status,2, status,0
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1661 ;;      Params:         0       0       0       4       0       0       0       0       0
  1662 ;;      Locals:         0       0       0       6       0       0       0       0       0
  1663 ;;      Temps:          0       0       0       5       0       0       0       0       0
  1664 ;;      Totals:         0       0       0      15       0       0       0       0       0
  1665 ;;Total ram usage:       15 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    3
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_writeValueLcd
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           	psect	text3
  1676  001058                     __ptext3:
  1677                           	opt stack 0
  1678  001058                     ___fttol:
  1679                           	opt stack 26
  1680                           
  1681                           ; BSR set to: 2
  1682                           ;incstack = 0
  1683  001058  C21C  F21E         	movff	___fttol@f1+2,??___fttol
  1684  00105C  0102               	movlb	2	; () banked
  1685  00105E  6B1F               	clrf	(??___fttol+1)& (0+255),b
  1686  001060  6B20               	clrf	(??___fttol+2)& (0+255),b
  1687  001062  351B               	rlcf	(___fttol@f1+1)& (0+255),w,b
  1688  001064  371E               	rlcf	??___fttol& (0+255),f,b
  1689  001066  E301               	bnc	u911
  1690  001068  811F               	bsf	(??___fttol+1)& (0+255),0,b
  1691  00106A                     u911:
  1692  00106A  511E               	movf	??___fttol& (0+255),w,b
  1693  00106C  6F28               	movwf	___fttol@exp1& (0+255),b
  1694  00106E  5128               	movf	___fttol@exp1& (0+255),w,b
  1695  001070  A4D8               	btfss	status,2,c
  1696  001072  D009               	goto	l477
  1697                           
  1698                           ; BSR set to: 2
  1699  001074  0E00               	movlw	0
  1700  001076  6F1A               	movwf	?___fttol& (0+255),b
  1701  001078  0E00               	movlw	0
  1702  00107A  6F1B               	movwf	(?___fttol+1)& (0+255),b
  1703  00107C  0E00               	movlw	0
  1704  00107E  6F1C               	movwf	(?___fttol+2)& (0+255),b
  1705  001080  0E00               	movlw	0
  1706  001082  6F1D               	movwf	(?___fttol+3)& (0+255),b
  1707                           
  1708                           ; BSR set to: 2
  1709  001084  0012               	return	
  1710  001086                     l477:
  1711                           
  1712                           ; BSR set to: 2
  1713                           
  1714                           ; BSR set to: 2
  1715  001086  0E17               	movlw	23
  1716  001088  6F1E               	movwf	??___fttol& (0+255),b
  1717  00108A  C21A  F21F         	movff	___fttol@f1,??___fttol+1
  1718  00108E  C21B  F220         	movff	___fttol@f1+1,??___fttol+2
  1719  001092  C21C  F221         	movff	___fttol@f1+2,??___fttol+3
  1720  001096  291E               	incf	??___fttol& (0+255),w,b
  1721  001098  6F22               	movwf	(??___fttol+4)& (0+255),b
  1722  00109A  D004               	goto	u930
  1723  00109C                     u935:
  1724  00109C  90D8               	bcf	status,0,c
  1725  00109E  3321               	rrcf	(??___fttol+3)& (0+255),f,b
  1726  0010A0  3320               	rrcf	(??___fttol+2)& (0+255),f,b
  1727  0010A2  331F               	rrcf	(??___fttol+1)& (0+255),f,b
  1728  0010A4                     u930:
  1729  0010A4  2F22               	decfsz	(??___fttol+4)& (0+255),f,b
  1730  0010A6  D7FA               	goto	u935
  1731  0010A8  0102               	movlb	2	; () banked
  1732  0010AA  511F               	movf	(??___fttol+1)& (0+255),w,b
  1733  0010AC  6F23               	movwf	___fttol@sign1& (0+255),b
  1734                           
  1735                           ; BSR set to: 2
  1736  0010AE  8F1B               	bsf	(___fttol@f1+1)& (0+255),7,b
  1737                           
  1738                           ; BSR set to: 2
  1739  0010B0  0EFF               	movlw	255
  1740  0010B2  171A               	andwf	___fttol@f1& (0+255),f,b
  1741  0010B4  0EFF               	movlw	255
  1742  0010B6  171B               	andwf	(___fttol@f1+1)& (0+255),f,b
  1743  0010B8  0E00               	movlw	0
  1744  0010BA  171C               	andwf	(___fttol@f1+2)& (0+255),f,b
  1745                           
  1746                           ; BSR set to: 2
  1747  0010BC  511A               	movf	___fttol@f1& (0+255),w,b
  1748  0010BE  6F24               	movwf	___fttol@lval& (0+255),b
  1749  0010C0  511B               	movf	(___fttol@f1+1)& (0+255),w,b
  1750  0010C2  6F25               	movwf	(___fttol@lval+1)& (0+255),b
  1751  0010C4  511C               	movf	(___fttol@f1+2)& (0+255),w,b
  1752  0010C6  6F26               	movwf	(___fttol@lval+2)& (0+255),b
  1753  0010C8  6B27               	clrf	(___fttol@lval+3)& (0+255),b
  1754                           
  1755                           ; BSR set to: 2
  1756  0010CA  0E8E               	movlw	142
  1757  0010CC  5F28               	subwf	___fttol@exp1& (0+255),f,b
  1758                           
  1759                           ; BSR set to: 2
  1760  0010CE  AF28               	btfss	___fttol@exp1& (0+255),7,b
  1761  0010D0  D016               	goto	l479
  1762                           
  1763                           ; BSR set to: 2
  1764  0010D2  5128               	movf	___fttol@exp1& (0+255),w,b
  1765  0010D4  0A80               	xorlw	128
  1766  0010D6  0F8F               	addlw	143
  1767  0010D8  B0D8               	btfsc	status,0,c
  1768  0010DA  D009               	goto	l480
  1769                           
  1770                           ; BSR set to: 2
  1771  0010DC  0E00               	movlw	0
  1772  0010DE  6F1A               	movwf	?___fttol& (0+255),b
  1773  0010E0  0E00               	movlw	0
  1774  0010E2  6F1B               	movwf	(?___fttol+1)& (0+255),b
  1775  0010E4  0E00               	movlw	0
  1776  0010E6  6F1C               	movwf	(?___fttol+2)& (0+255),b
  1777  0010E8  0E00               	movlw	0
  1778  0010EA  6F1D               	movwf	(?___fttol+3)& (0+255),b
  1779                           
  1780                           ; BSR set to: 2
  1781  0010EC  0012               	return	
  1782  0010EE                     l480:
  1783                           
  1784                           ; BSR set to: 2
  1785                           
  1786                           ; BSR set to: 2
  1787                           
  1788                           ; BSR set to: 2
  1789  0010EE  90D8               	bcf	status,0,c
  1790  0010F0  3327               	rrcf	(___fttol@lval+3)& (0+255),f,b
  1791  0010F2  3326               	rrcf	(___fttol@lval+2)& (0+255),f,b
  1792  0010F4  3325               	rrcf	(___fttol@lval+1)& (0+255),f,b
  1793  0010F6  3324               	rrcf	___fttol@lval& (0+255),f,b
  1794                           
  1795                           ; BSR set to: 2
  1796  0010F8  3F28               	incfsz	___fttol@exp1& (0+255),f,b
  1797  0010FA  D7F9               	goto	l480
  1798                           
  1799                           ; BSR set to: 2
  1800  0010FC  D015               	goto	u970
  1801  0010FE                     l479:
  1802                           
  1803                           ; BSR set to: 2
  1804                           
  1805                           ; BSR set to: 2
  1806  0010FE  0E17               	movlw	23
  1807  001100  6528               	cpfsgt	___fttol@exp1& (0+255),b
  1808  001102  D00F               	goto	l485
  1809                           
  1810                           ; BSR set to: 2
  1811  001104  0E00               	movlw	0
  1812  001106  6F1A               	movwf	?___fttol& (0+255),b
  1813  001108  0E00               	movlw	0
  1814  00110A  6F1B               	movwf	(?___fttol+1)& (0+255),b
  1815  00110C  0E00               	movlw	0
  1816  00110E  6F1C               	movwf	(?___fttol+2)& (0+255),b
  1817  001110  0E00               	movlw	0
  1818  001112  6F1D               	movwf	(?___fttol+3)& (0+255),b
  1819                           
  1820                           ; BSR set to: 2
  1821  001114  0012               	return	
  1822  001116                     
  1823                           ; BSR set to: 2
  1824                           
  1825                           ; BSR set to: 2
  1826  001116  90D8               	bcf	status,0,c
  1827  001118  3724               	rlcf	___fttol@lval& (0+255),f,b
  1828  00111A  3725               	rlcf	(___fttol@lval+1)& (0+255),f,b
  1829  00111C  3726               	rlcf	(___fttol@lval+2)& (0+255),f,b
  1830  00111E  3727               	rlcf	(___fttol@lval+3)& (0+255),f,b
  1831  001120  0728               	decf	___fttol@exp1& (0+255),f,b
  1832  001122                     l485:
  1833                           
  1834                           ; BSR set to: 2
  1835                           
  1836                           ; BSR set to: 2
  1837  001122  5128               	movf	___fttol@exp1& (0+255),w,b
  1838  001124  A4D8               	btfss	status,2,c
  1839  001126  D7F7               	goto	l486
  1840  001128                     u970:
  1841                           
  1842                           ; BSR set to: 2
  1843                           
  1844                           ; BSR set to: 2
  1845                           
  1846                           ; BSR set to: 2
  1847  001128  5123               	movf	___fttol@sign1& (0+255),w,b
  1848  00112A  B4D8               	btfsc	status,2,c
  1849  00112C  D008               	goto	l488
  1850                           
  1851                           ; BSR set to: 2
  1852  00112E  1F27               	comf	(___fttol@lval+3)& (0+255),f,b
  1853  001130  1F26               	comf	(___fttol@lval+2)& (0+255),f,b
  1854  001132  1F25               	comf	(___fttol@lval+1)& (0+255),f,b
  1855  001134  6D24               	negf	___fttol@lval& (0+255),b
  1856  001136  0E00               	movlw	0
  1857  001138  2325               	addwfc	(___fttol@lval+1)& (0+255),f,b
  1858  00113A  2326               	addwfc	(___fttol@lval+2)& (0+255),f,b
  1859  00113C  2327               	addwfc	(___fttol@lval+3)& (0+255),f,b
  1860  00113E                     l488:
  1861                           
  1862                           ; BSR set to: 2
  1863                           
  1864                           ; BSR set to: 2
  1865  00113E  C224  F21A         	movff	___fttol@lval,?___fttol
  1866  001142  C225  F21B         	movff	___fttol@lval+1,?___fttol+1
  1867  001146  C226  F21C         	movff	___fttol@lval+2,?___fttol+2
  1868  00114A  C227  F21D         	movff	___fttol@lval+3,?___fttol+3
  1869  00114E  0012               	return	
  1870  001150                     __end_of___fttol:
  1871                           	opt stack 0
  1872                           tblptru	equ	0xFF8
  1873                           wreg	equ	0xFE8
  1874                           status	equ	0xFD8
  1875                           
  1876 ;; *************** function ___ftmul *****************
  1877 ;; Defined at:
  1878 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;  f1              3   11[BANK2 ] float 
  1881 ;;  f2              3   14[BANK2 ] float 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  f3_as_produc    3   21[BANK2 ] unsigned um
  1884 ;;  sign            1   25[BANK2 ] unsigned char 
  1885 ;;  cntr            1   24[BANK2 ] unsigned char 
  1886 ;;  exp             1   20[BANK2 ] unsigned char 
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  3   11[BANK2 ] float 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0, cstack
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1896 ;;      Params:         0       0       0       6       0       0       0       0       0
  1897 ;;      Locals:         0       0       0       6       0       0       0       0       0
  1898 ;;      Temps:          0       0       0       3       0       0       0       0       0
  1899 ;;      Totals:         0       0       0      15       0       0       0       0       0
  1900 ;;Total ram usage:       15 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; Hardware stack levels required when called:    4
  1903 ;; This function calls:
  1904 ;;		___ftpack
  1905 ;; This function is called by:
  1906 ;;		_main
  1907 ;;		_writeValueLcd
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           	psect	text4
  1912  001150                     __ptext4:
  1913                           	opt stack 0
  1914  001150                     ___ftmul:
  1915                           	opt stack 25
  1916                           
  1917                           ; BSR set to: 2
  1918                           ;incstack = 0
  1919  001150  C20D  F211         	movff	___ftmul@f1+2,??___ftmul
  1920  001154  0102               	movlb	2	; () banked
  1921  001156  6B12               	clrf	(??___ftmul+1)& (0+255),b
  1922  001158  6B13               	clrf	(??___ftmul+2)& (0+255),b
  1923  00115A  350C               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  1924  00115C  3711               	rlcf	??___ftmul& (0+255),f,b
  1925  00115E  E301               	bnc	u851
  1926  001160  8112               	bsf	(??___ftmul+1)& (0+255),0,b
  1927  001162                     u851:
  1928  001162  5111               	movf	??___ftmul& (0+255),w,b
  1929  001164  6F14               	movwf	___ftmul@exp& (0+255),b
  1930  001166  5114               	movf	___ftmul@exp& (0+255),w,b
  1931  001168  A4D8               	btfss	status,2,c
  1932  00116A  D007               	goto	l456
  1933                           
  1934                           ; BSR set to: 2
  1935  00116C  0E00               	movlw	0
  1936  00116E  6F0B               	movwf	?___ftmul& (0+255),b
  1937  001170  0E00               	movlw	0
  1938  001172  6F0C               	movwf	(?___ftmul+1)& (0+255),b
  1939  001174  0E00               	movlw	0
  1940  001176  6F0D               	movwf	(?___ftmul+2)& (0+255),b
  1941                           
  1942                           ; BSR set to: 2
  1943  001178  0012               	return	
  1944  00117A                     l456:
  1945                           
  1946                           ; BSR set to: 2
  1947                           
  1948                           ; BSR set to: 2
  1949  00117A  C210  F211         	movff	___ftmul@f2+2,??___ftmul
  1950  00117E  6B12               	clrf	(??___ftmul+1)& (0+255),b
  1951  001180  6B13               	clrf	(??___ftmul+2)& (0+255),b
  1952  001182  350F               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  1953  001184  3711               	rlcf	??___ftmul& (0+255),f,b
  1954  001186  E301               	bnc	u871
  1955  001188  8112               	bsf	(??___ftmul+1)& (0+255),0,b
  1956  00118A                     u871:
  1957  00118A  5111               	movf	??___ftmul& (0+255),w,b
  1958  00118C  6F19               	movwf	___ftmul@sign& (0+255),b
  1959  00118E  5119               	movf	___ftmul@sign& (0+255),w,b
  1960  001190  A4D8               	btfss	status,2,c
  1961  001192  D007               	goto	l458
  1962                           
  1963                           ; BSR set to: 2
  1964  001194  0E00               	movlw	0
  1965  001196  6F0B               	movwf	?___ftmul& (0+255),b
  1966  001198  0E00               	movlw	0
  1967  00119A  6F0C               	movwf	(?___ftmul+1)& (0+255),b
  1968  00119C  0E00               	movlw	0
  1969  00119E  6F0D               	movwf	(?___ftmul+2)& (0+255),b
  1970                           
  1971                           ; BSR set to: 2
  1972  0011A0  0012               	return	
  1973  0011A2                     l458:
  1974                           
  1975                           ; BSR set to: 2
  1976                           
  1977                           ; BSR set to: 2
  1978  0011A2  5119               	movf	___ftmul@sign& (0+255),w,b
  1979  0011A4  0F7B               	addlw	123
  1980  0011A6  2714               	addwf	___ftmul@exp& (0+255),f,b
  1981                           
  1982                           ; BSR set to: 2
  1983  0011A8  C20D  F219         	movff	___ftmul@f1+2,___ftmul@sign
  1984  0011AC  5110               	movf	(___ftmul@f2+2)& (0+255),w,b
  1985  0011AE  1B19               	xorwf	___ftmul@sign& (0+255),f,b
  1986  0011B0  0E80               	movlw	128
  1987  0011B2  1719               	andwf	___ftmul@sign& (0+255),f,b
  1988                           
  1989                           ; BSR set to: 2
  1990  0011B4  8F0C               	bsf	(___ftmul@f1+1)& (0+255),7,b
  1991                           
  1992                           ; BSR set to: 2
  1993  0011B6  8F0F               	bsf	(___ftmul@f2+1)& (0+255),7,b
  1994                           
  1995                           ; BSR set to: 2
  1996  0011B8  0EFF               	movlw	255
  1997  0011BA  170E               	andwf	___ftmul@f2& (0+255),f,b
  1998  0011BC  0EFF               	movlw	255
  1999  0011BE  170F               	andwf	(___ftmul@f2+1)& (0+255),f,b
  2000  0011C0  0E00               	movlw	0
  2001  0011C2  1710               	andwf	(___ftmul@f2+2)& (0+255),f,b
  2002                           
  2003                           ; BSR set to: 2
  2004  0011C4  0E00               	movlw	0
  2005  0011C6  6F15               	movwf	___ftmul@f3_as_product& (0+255),b
  2006  0011C8  0E00               	movlw	0
  2007  0011CA  6F16               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  2008  0011CC  0E00               	movlw	0
  2009  0011CE  6F17               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  2010                           
  2011                           ; BSR set to: 2
  2012  0011D0  0E07               	movlw	7
  2013  0011D2  6F18               	movwf	___ftmul@cntr& (0+255),b
  2014  0011D4                     
  2015                           ; BSR set to: 2
  2016                           
  2017                           ; BSR set to: 2
  2018  0011D4  A10B               	btfss	___ftmul@f1& (0+255),0,b
  2019  0011D6  D006               	goto	l460
  2020                           
  2021                           ; BSR set to: 2
  2022  0011D8  510E               	movf	___ftmul@f2& (0+255),w,b
  2023  0011DA  2715               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2024  0011DC  510F               	movf	(___ftmul@f2+1)& (0+255),w,b
  2025  0011DE  2316               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2026  0011E0  5110               	movf	(___ftmul@f2+2)& (0+255),w,b
  2027  0011E2  2317               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2028  0011E4                     l460:
  2029                           
  2030                           ; BSR set to: 2
  2031                           
  2032                           ; BSR set to: 2
  2033  0011E4  90D8               	bcf	status,0,c
  2034  0011E6  330D               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2035  0011E8  330C               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2036  0011EA  330B               	rrcf	___ftmul@f1& (0+255),f,b
  2037  0011EC  90D8               	bcf	status,0,c
  2038  0011EE  370E               	rlcf	___ftmul@f2& (0+255),f,b
  2039  0011F0  370F               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  2040  0011F2  3710               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  2041                           
  2042                           ; BSR set to: 2
  2043  0011F4  2F18               	decfsz	___ftmul@cntr& (0+255),f,b
  2044  0011F6  D7EE               	goto	l459
  2045                           
  2046                           ; BSR set to: 2
  2047                           
  2048                           ; BSR set to: 2
  2049  0011F8  0E09               	movlw	9
  2050  0011FA  6F18               	movwf	___ftmul@cntr& (0+255),b
  2051  0011FC                     
  2052                           ; BSR set to: 2
  2053                           
  2054                           ; BSR set to: 2
  2055  0011FC  A10B               	btfss	___ftmul@f1& (0+255),0,b
  2056  0011FE  D006               	goto	l463
  2057                           
  2058                           ; BSR set to: 2
  2059  001200  510E               	movf	___ftmul@f2& (0+255),w,b
  2060  001202  2715               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2061  001204  510F               	movf	(___ftmul@f2+1)& (0+255),w,b
  2062  001206  2316               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2063  001208  5110               	movf	(___ftmul@f2+2)& (0+255),w,b
  2064  00120A  2317               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2065  00120C                     l463:
  2066                           
  2067                           ; BSR set to: 2
  2068                           
  2069                           ; BSR set to: 2
  2070  00120C  90D8               	bcf	status,0,c
  2071  00120E  330D               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2072  001210  330C               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2073  001212  330B               	rrcf	___ftmul@f1& (0+255),f,b
  2074  001214  90D8               	bcf	status,0,c
  2075  001216  3317               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  2076  001218  3316               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  2077  00121A  3315               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  2078                           
  2079                           ; BSR set to: 2
  2080  00121C  2F18               	decfsz	___ftmul@cntr& (0+255),f,b
  2081  00121E  D7EE               	goto	l462
  2082                           
  2083                           ; BSR set to: 2
  2084                           
  2085                           ; BSR set to: 2
  2086  001220  C215  F200         	movff	___ftmul@f3_as_product,___ftpack@arg
  2087  001224  C216  F201         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2088  001228  C217  F202         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2089  00122C  C214  F203         	movff	___ftmul@exp,___ftpack@exp
  2090  001230  C219  F204         	movff	___ftmul@sign,___ftpack@sign
  2091  001234  EC73  F00A         	call	___ftpack	;wreg free
  2092  001238  C200  F20B         	movff	?___ftpack,?___ftmul
  2093  00123C  C201  F20C         	movff	?___ftpack+1,?___ftmul+1
  2094  001240  C202  F20D         	movff	?___ftpack+2,?___ftmul+2
  2095  001244  0012               	return	
  2096  001246                     __end_of___ftmul:
  2097                           	opt stack 0
  2098                           tblptru	equ	0xFF8
  2099                           wreg	equ	0xFE8
  2100                           status	equ	0xFD8
  2101                           
  2102 ;; *************** function ___almod *****************
  2103 ;; Defined at:
  2104 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\almod.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  dividend        4    0[BANK2 ] long 
  2107 ;;  divisor         4    4[BANK2 ] long 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  sign            1    9[BANK2 ] unsigned char 
  2110 ;;  counter         1    8[BANK2 ] unsigned char 
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  4    0[BANK2 ] long 
  2113 ;; Registers used:
  2114 ;;		wreg, status,2, status,0
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2120 ;;      Params:         0       0       0       8       0       0       0       0       0
  2121 ;;      Locals:         0       0       0       2       0       0       0       0       0
  2122 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2123 ;;      Totals:         0       0       0      10       0       0       0       0       0
  2124 ;;Total ram usage:       10 bytes
  2125 ;; Hardware stack levels used:    1
  2126 ;; Hardware stack levels required when called:    3
  2127 ;; This function calls:
  2128 ;;		Nothing
  2129 ;; This function is called by:
  2130 ;;		_writeValueLcd
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text5
  2135  001596                     __ptext5:
  2136                           	opt stack 0
  2137  001596                     ___almod:
  2138                           	opt stack 26
  2139                           
  2140                           ;incstack = 0
  2141  001596  0E00               	movlw	0
  2142  001598  0102               	movlb	2	; () banked
  2143  00159A  6F09               	movwf	___almod@sign& (0+255),b
  2144                           
  2145                           ; BSR set to: 2
  2146  00159C  AF03               	btfss	(___almod@dividend+3)& (0+255),7,b
  2147  00159E  D00A               	goto	l231
  2148                           
  2149                           ; BSR set to: 2
  2150  0015A0  1F03               	comf	(___almod@dividend+3)& (0+255),f,b
  2151  0015A2  1F02               	comf	(___almod@dividend+2)& (0+255),f,b
  2152  0015A4  1F01               	comf	(___almod@dividend+1)& (0+255),f,b
  2153  0015A6  6D00               	negf	___almod@dividend& (0+255),b
  2154  0015A8  0E00               	movlw	0
  2155  0015AA  2301               	addwfc	(___almod@dividend+1)& (0+255),f,b
  2156  0015AC  2302               	addwfc	(___almod@dividend+2)& (0+255),f,b
  2157  0015AE  2303               	addwfc	(___almod@dividend+3)& (0+255),f,b
  2158                           
  2159                           ; BSR set to: 2
  2160  0015B0  0E01               	movlw	1
  2161  0015B2  6F09               	movwf	___almod@sign& (0+255),b
  2162  0015B4                     l231:
  2163                           
  2164                           ; BSR set to: 2
  2165                           
  2166                           ; BSR set to: 2
  2167  0015B4  AF07               	btfss	(___almod@divisor+3)& (0+255),7,b
  2168  0015B6  D008               	goto	l232
  2169                           
  2170                           ; BSR set to: 2
  2171  0015B8  1F07               	comf	(___almod@divisor+3)& (0+255),f,b
  2172  0015BA  1F06               	comf	(___almod@divisor+2)& (0+255),f,b
  2173  0015BC  1F05               	comf	(___almod@divisor+1)& (0+255),f,b
  2174  0015BE  6D04               	negf	___almod@divisor& (0+255),b
  2175  0015C0  0E00               	movlw	0
  2176  0015C2  2305               	addwfc	(___almod@divisor+1)& (0+255),f,b
  2177  0015C4  2306               	addwfc	(___almod@divisor+2)& (0+255),f,b
  2178  0015C6  2307               	addwfc	(___almod@divisor+3)& (0+255),f,b
  2179  0015C8                     l232:
  2180                           
  2181                           ; BSR set to: 2
  2182                           
  2183                           ; BSR set to: 2
  2184  0015C8  5104               	movf	___almod@divisor& (0+255),w,b
  2185  0015CA  1105               	iorwf	(___almod@divisor+1)& (0+255),w,b
  2186  0015CC  1106               	iorwf	(___almod@divisor+2)& (0+255),w,b
  2187  0015CE  1107               	iorwf	(___almod@divisor+3)& (0+255),w,b
  2188  0015D0  B4D8               	btfsc	status,2,c
  2189  0015D2  D024               	goto	l239
  2190                           
  2191                           ; BSR set to: 2
  2192  0015D4  0E01               	movlw	1
  2193  0015D6  6F08               	movwf	___almod@counter& (0+255),b
  2194  0015D8  D006               	goto	l234
  2195  0015DA                     
  2196                           ; BSR set to: 2
  2197                           
  2198                           ; BSR set to: 2
  2199  0015DA  90D8               	bcf	status,0,c
  2200  0015DC  3704               	rlcf	___almod@divisor& (0+255),f,b
  2201  0015DE  3705               	rlcf	(___almod@divisor+1)& (0+255),f,b
  2202  0015E0  3706               	rlcf	(___almod@divisor+2)& (0+255),f,b
  2203  0015E2  3707               	rlcf	(___almod@divisor+3)& (0+255),f,b
  2204  0015E4  2B08               	incf	___almod@counter& (0+255),f,b
  2205  0015E6                     l234:
  2206                           
  2207                           ; BSR set to: 2
  2208                           
  2209                           ; BSR set to: 2
  2210  0015E6  AF07               	btfss	(___almod@divisor+3)& (0+255),7,b
  2211  0015E8  D7F8               	goto	l235
  2212  0015EA                     u820:
  2213                           
  2214                           ; BSR set to: 2
  2215                           
  2216                           ; BSR set to: 2
  2217                           
  2218                           ; BSR set to: 2
  2219  0015EA  5104               	movf	___almod@divisor& (0+255),w,b
  2220  0015EC  5D00               	subwf	___almod@dividend& (0+255),w,b
  2221  0015EE  5105               	movf	(___almod@divisor+1)& (0+255),w,b
  2222  0015F0  5901               	subwfb	(___almod@dividend+1)& (0+255),w,b
  2223  0015F2  5106               	movf	(___almod@divisor+2)& (0+255),w,b
  2224  0015F4  5902               	subwfb	(___almod@dividend+2)& (0+255),w,b
  2225  0015F6  5107               	movf	(___almod@divisor+3)& (0+255),w,b
  2226  0015F8  5903               	subwfb	(___almod@dividend+3)& (0+255),w,b
  2227  0015FA  A0D8               	btfss	status,0,c
  2228  0015FC  D008               	goto	l238
  2229                           
  2230                           ; BSR set to: 2
  2231  0015FE  5104               	movf	___almod@divisor& (0+255),w,b
  2232  001600  5F00               	subwf	___almod@dividend& (0+255),f,b
  2233  001602  5105               	movf	(___almod@divisor+1)& (0+255),w,b
  2234  001604  5B01               	subwfb	(___almod@dividend+1)& (0+255),f,b
  2235  001606  5106               	movf	(___almod@divisor+2)& (0+255),w,b
  2236  001608  5B02               	subwfb	(___almod@dividend+2)& (0+255),f,b
  2237  00160A  5107               	movf	(___almod@divisor+3)& (0+255),w,b
  2238  00160C  5B03               	subwfb	(___almod@dividend+3)& (0+255),f,b
  2239  00160E                     l238:
  2240                           
  2241                           ; BSR set to: 2
  2242                           
  2243                           ; BSR set to: 2
  2244  00160E  90D8               	bcf	status,0,c
  2245  001610  3307               	rrcf	(___almod@divisor+3)& (0+255),f,b
  2246  001612  3306               	rrcf	(___almod@divisor+2)& (0+255),f,b
  2247  001614  3305               	rrcf	(___almod@divisor+1)& (0+255),f,b
  2248  001616  3304               	rrcf	___almod@divisor& (0+255),f,b
  2249                           
  2250                           ; BSR set to: 2
  2251  001618  2F08               	decfsz	___almod@counter& (0+255),f,b
  2252  00161A  D7E7               	goto	u820
  2253  00161C                     l239:
  2254                           
  2255                           ; BSR set to: 2
  2256                           
  2257                           ; BSR set to: 2
  2258                           
  2259                           ; BSR set to: 2
  2260  00161C  5109               	movf	___almod@sign& (0+255),w,b
  2261  00161E  B4D8               	btfsc	status,2,c
  2262  001620  D008               	goto	l240
  2263                           
  2264                           ; BSR set to: 2
  2265  001622  1F03               	comf	(___almod@dividend+3)& (0+255),f,b
  2266  001624  1F02               	comf	(___almod@dividend+2)& (0+255),f,b
  2267  001626  1F01               	comf	(___almod@dividend+1)& (0+255),f,b
  2268  001628  6D00               	negf	___almod@dividend& (0+255),b
  2269  00162A  0E00               	movlw	0
  2270  00162C  2301               	addwfc	(___almod@dividend+1)& (0+255),f,b
  2271  00162E  2302               	addwfc	(___almod@dividend+2)& (0+255),f,b
  2272  001630  2303               	addwfc	(___almod@dividend+3)& (0+255),f,b
  2273  001632                     l240:
  2274                           
  2275                           ; BSR set to: 2
  2276                           
  2277                           ; BSR set to: 2
  2278  001632  C200  F200         	movff	___almod@dividend,?___almod
  2279  001636  C201  F201         	movff	___almod@dividend+1,?___almod+1
  2280  00163A  C202  F202         	movff	___almod@dividend+2,?___almod+2
  2281  00163E  C203  F203         	movff	___almod@dividend+3,?___almod+3
  2282  001642  0012               	return	
  2283  001644                     __end_of___almod:
  2284                           	opt stack 0
  2285                           tblptru	equ	0xFF8
  2286                           wreg	equ	0xFE8
  2287                           status	equ	0xFD8
  2288                           
  2289 ;; *************** function ___aldiv *****************
  2290 ;; Defined at:
  2291 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  dividend        4   10[BANK2 ] long 
  2294 ;;  divisor         4   14[BANK2 ] long 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;  quotient        4   20[BANK2 ] long 
  2297 ;;  sign            1   19[BANK2 ] unsigned char 
  2298 ;;  counter         1   18[BANK2 ] unsigned char 
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  4   10[BANK2 ] long 
  2301 ;; Registers used:
  2302 ;;		wreg, status,2, status,0
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2308 ;;      Params:         0       0       0       8       0       0       0       0       0
  2309 ;;      Locals:         0       0       0       6       0       0       0       0       0
  2310 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2311 ;;      Totals:         0       0       0      14       0       0       0       0       0
  2312 ;;Total ram usage:       14 bytes
  2313 ;; Hardware stack levels used:    1
  2314 ;; Hardware stack levels required when called:    3
  2315 ;; This function calls:
  2316 ;;		Nothing
  2317 ;; This function is called by:
  2318 ;;		_writeValueLcd
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           	psect	text6
  2323  001418                     __ptext6:
  2324                           	opt stack 0
  2325  001418                     ___aldiv:
  2326                           	opt stack 26
  2327                           
  2328                           ; BSR set to: 2
  2329                           ;incstack = 0
  2330  001418  0E00               	movlw	0
  2331  00141A  0102               	movlb	2	; () banked
  2332  00141C  6F13               	movwf	___aldiv@sign& (0+255),b
  2333                           
  2334                           ; BSR set to: 2
  2335  00141E  AF11               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  2336  001420  D00A               	goto	l218
  2337                           
  2338                           ; BSR set to: 2
  2339  001422  1F11               	comf	(___aldiv@divisor+3)& (0+255),f,b
  2340  001424  1F10               	comf	(___aldiv@divisor+2)& (0+255),f,b
  2341  001426  1F0F               	comf	(___aldiv@divisor+1)& (0+255),f,b
  2342  001428  6D0E               	negf	___aldiv@divisor& (0+255),b
  2343  00142A  0E00               	movlw	0
  2344  00142C  230F               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  2345  00142E  2310               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  2346  001430  2311               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  2347                           
  2348                           ; BSR set to: 2
  2349  001432  0E01               	movlw	1
  2350  001434  6F13               	movwf	___aldiv@sign& (0+255),b
  2351  001436                     l218:
  2352                           
  2353                           ; BSR set to: 2
  2354                           
  2355                           ; BSR set to: 2
  2356  001436  AF0D               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  2357  001438  D00A               	goto	l219
  2358                           
  2359                           ; BSR set to: 2
  2360  00143A  1F0D               	comf	(___aldiv@dividend+3)& (0+255),f,b
  2361  00143C  1F0C               	comf	(___aldiv@dividend+2)& (0+255),f,b
  2362  00143E  1F0B               	comf	(___aldiv@dividend+1)& (0+255),f,b
  2363  001440  6D0A               	negf	___aldiv@dividend& (0+255),b
  2364  001442  0E00               	movlw	0
  2365  001444  230B               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  2366  001446  230C               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  2367  001448  230D               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  2368                           
  2369                           ; BSR set to: 2
  2370  00144A  0E01               	movlw	1
  2371  00144C  1B13               	xorwf	___aldiv@sign& (0+255),f,b
  2372  00144E                     l219:
  2373                           
  2374                           ; BSR set to: 2
  2375                           
  2376                           ; BSR set to: 2
  2377  00144E  0E00               	movlw	0
  2378  001450  6F14               	movwf	___aldiv@quotient& (0+255),b
  2379  001452  0E00               	movlw	0
  2380  001454  6F15               	movwf	(___aldiv@quotient+1)& (0+255),b
  2381  001456  0E00               	movlw	0
  2382  001458  6F16               	movwf	(___aldiv@quotient+2)& (0+255),b
  2383  00145A  0E00               	movlw	0
  2384  00145C  6F17               	movwf	(___aldiv@quotient+3)& (0+255),b
  2385                           
  2386                           ; BSR set to: 2
  2387  00145E  510E               	movf	___aldiv@divisor& (0+255),w,b
  2388  001460  110F               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  2389  001462  1110               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  2390  001464  1111               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  2391  001466  B4D8               	btfsc	status,2,c
  2392  001468  D02A               	goto	l226
  2393                           
  2394                           ; BSR set to: 2
  2395  00146A  0E01               	movlw	1
  2396  00146C  6F12               	movwf	___aldiv@counter& (0+255),b
  2397  00146E  D006               	goto	l221
  2398  001470                     
  2399                           ; BSR set to: 2
  2400                           
  2401                           ; BSR set to: 2
  2402  001470  90D8               	bcf	status,0,c
  2403  001472  370E               	rlcf	___aldiv@divisor& (0+255),f,b
  2404  001474  370F               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  2405  001476  3710               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  2406  001478  3711               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  2407  00147A  2B12               	incf	___aldiv@counter& (0+255),f,b
  2408  00147C                     l221:
  2409                           
  2410                           ; BSR set to: 2
  2411                           
  2412                           ; BSR set to: 2
  2413  00147C  AF11               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  2414  00147E  D7F8               	goto	l222
  2415  001480                     u760:
  2416                           
  2417                           ; BSR set to: 2
  2418                           
  2419                           ; BSR set to: 2
  2420                           
  2421                           ; BSR set to: 2
  2422  001480  90D8               	bcf	status,0,c
  2423  001482  3714               	rlcf	___aldiv@quotient& (0+255),f,b
  2424  001484  3715               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  2425  001486  3716               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  2426  001488  3717               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  2427                           
  2428                           ; BSR set to: 2
  2429  00148A  510E               	movf	___aldiv@divisor& (0+255),w,b
  2430  00148C  5D0A               	subwf	___aldiv@dividend& (0+255),w,b
  2431  00148E  510F               	movf	(___aldiv@divisor+1)& (0+255),w,b
  2432  001490  590B               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  2433  001492  5110               	movf	(___aldiv@divisor+2)& (0+255),w,b
  2434  001494  590C               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  2435  001496  5111               	movf	(___aldiv@divisor+3)& (0+255),w,b
  2436  001498  590D               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  2437  00149A  A0D8               	btfss	status,0,c
  2438  00149C  D009               	goto	l225
  2439                           
  2440                           ; BSR set to: 2
  2441  00149E  510E               	movf	___aldiv@divisor& (0+255),w,b
  2442  0014A0  5F0A               	subwf	___aldiv@dividend& (0+255),f,b
  2443  0014A2  510F               	movf	(___aldiv@divisor+1)& (0+255),w,b
  2444  0014A4  5B0B               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  2445  0014A6  5110               	movf	(___aldiv@divisor+2)& (0+255),w,b
  2446  0014A8  5B0C               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  2447  0014AA  5111               	movf	(___aldiv@divisor+3)& (0+255),w,b
  2448  0014AC  5B0D               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  2449                           
  2450                           ; BSR set to: 2
  2451  0014AE  8114               	bsf	___aldiv@quotient& (0+255),0,b
  2452  0014B0                     l225:
  2453                           
  2454                           ; BSR set to: 2
  2455                           
  2456                           ; BSR set to: 2
  2457  0014B0  90D8               	bcf	status,0,c
  2458  0014B2  3311               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  2459  0014B4  3310               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  2460  0014B6  330F               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  2461  0014B8  330E               	rrcf	___aldiv@divisor& (0+255),f,b
  2462                           
  2463                           ; BSR set to: 2
  2464  0014BA  2F12               	decfsz	___aldiv@counter& (0+255),f,b
  2465  0014BC  D7E1               	goto	u760
  2466  0014BE                     l226:
  2467                           
  2468                           ; BSR set to: 2
  2469                           
  2470                           ; BSR set to: 2
  2471                           
  2472                           ; BSR set to: 2
  2473  0014BE  5113               	movf	___aldiv@sign& (0+255),w,b
  2474  0014C0  B4D8               	btfsc	status,2,c
  2475  0014C2  D008               	goto	l227
  2476                           
  2477                           ; BSR set to: 2
  2478  0014C4  1F17               	comf	(___aldiv@quotient+3)& (0+255),f,b
  2479  0014C6  1F16               	comf	(___aldiv@quotient+2)& (0+255),f,b
  2480  0014C8  1F15               	comf	(___aldiv@quotient+1)& (0+255),f,b
  2481  0014CA  6D14               	negf	___aldiv@quotient& (0+255),b
  2482  0014CC  0E00               	movlw	0
  2483  0014CE  2315               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  2484  0014D0  2316               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  2485  0014D2  2317               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  2486  0014D4                     l227:
  2487                           
  2488                           ; BSR set to: 2
  2489                           
  2490                           ; BSR set to: 2
  2491  0014D4  C214  F20A         	movff	___aldiv@quotient,?___aldiv
  2492  0014D8  C215  F20B         	movff	___aldiv@quotient+1,?___aldiv+1
  2493  0014DC  C216  F20C         	movff	___aldiv@quotient+2,?___aldiv+2
  2494  0014E0  C217  F20D         	movff	___aldiv@quotient+3,?___aldiv+3
  2495  0014E4  0012               	return	
  2496  0014E6                     __end_of___aldiv:
  2497                           	opt stack 0
  2498                           tblptru	equ	0xFF8
  2499                           wreg	equ	0xFE8
  2500                           status	equ	0xFD8
  2501                           
  2502 ;; *************** function _writeStringLcd *****************
  2503 ;; Defined at:
  2504 ;;		line 47 in file "lcd.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;  s               2    2[BANK2 ] PTR unsigned char 
  2507 ;;		 -> STR_13(2), STR_12(10), STR_11(2), STR_10(10), 
  2508 ;;		 -> STR_9(2), STR_8(10), STR_7(2), STR_6(10), 
  2509 ;;		 -> STR_5(2), STR_4(10), STR_3(2), STR_2(10), 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;		None
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      void 
  2514 ;; Registers used:
  2515 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2521 ;;      Params:         0       0       0       2       0       0       0       0       0
  2522 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2523 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2524 ;;      Totals:         0       0       0       2       0       0       0       0       0
  2525 ;;Total ram usage:        2 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; Hardware stack levels required when called:    5
  2528 ;; This function calls:
  2529 ;;		_writeLcd
  2530 ;; This function is called by:
  2531 ;;		_main
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           	psect	text7
  2536  001888                     __ptext7:
  2537                           	opt stack 0
  2538  001888                     _writeStringLcd:
  2539                           	opt stack 25
  2540                           
  2541                           ;lcd.c: 48: LATBbits.LATB4 = 1;
  2542                           
  2543                           ; BSR set to: 2
  2544                           ;incstack = 0
  2545  001888  888A               	bsf	3978,4,c	;volatile
  2546                           
  2547                           ;lcd.c: 49: while (*s)
  2548  00188A  D00B               	goto	l133
  2549  00188C                     
  2550                           ;lcd.c: 50: writeLcd(*s++);
  2551  00188C  C202  FFF6         	movff	writeStringLcd@s,tblptrl
  2552  001890  C203  FFF7         	movff	writeStringLcd@s+1,tblptrh
  2553  001894                     	if	0	;tblptru may be non-zero
  2554  001894                     	endif
  2555  001894                     	if	0	;tblptru may be non-zero
  2556  001894                     	endif
  2557  001894  0008               	tblrd		*
  2558  001896  50F5               	movf	tablat,w,c
  2559  001898  ECE4  F00B         	call	_writeLcd
  2560  00189C  0102               	movlb	2	; () banked
  2561  00189E  4B02               	infsnz	writeStringLcd@s& (0+255),f,b
  2562  0018A0  2B03               	incf	(writeStringLcd@s+1)& (0+255),f,b
  2563  0018A2                     l133:
  2564                           
  2565                           ; BSR set to: 2
  2566  0018A2  C202  FFF6         	movff	writeStringLcd@s,tblptrl
  2567  0018A6  C203  FFF7         	movff	writeStringLcd@s+1,tblptrh
  2568  0018AA                     	if	0	;tblptru may be non-zero
  2569  0018AA                     	endif
  2570  0018AA                     	if	0	;tblptru may be non-zero
  2571  0018AA                     	endif
  2572  0018AA  0008               	tblrd		*
  2573  0018AC  50F5               	movf	tablat,w,c
  2574  0018AE  0900               	iorlw	0
  2575  0018B0  B4D8               	btfsc	status,2,c
  2576  0018B2  0012               	return	
  2577  0018B4  D7EB               	goto	l134
  2578  0018B6                     __end_of_writeStringLcd:
  2579                           	opt stack 0
  2580                           tblptru	equ	0xFF8
  2581                           tblptrh	equ	0xFF7
  2582                           tblptrl	equ	0xFF6
  2583                           tablat	equ	0xFF5
  2584                           wreg	equ	0xFE8
  2585                           status	equ	0xFD8
  2586                           
  2587 ;; *************** function _writeCStringLcd *****************
  2588 ;; Defined at:
  2589 ;;		line 41 in file "lcd.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;  s               2    2[BANK2 ] PTR const unsigned char 
  2592 ;;		 -> STR_1(17), 
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;		None
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      void 
  2597 ;; Registers used:
  2598 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2604 ;;      Params:         0       0       0       2       0       0       0       0       0
  2605 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2606 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2607 ;;      Totals:         0       0       0       2       0       0       0       0       0
  2608 ;;Total ram usage:        2 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; Hardware stack levels required when called:    5
  2611 ;; This function calls:
  2612 ;;		_writeLcd
  2613 ;; This function is called by:
  2614 ;;		_main
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           	psect	text8
  2619  0018B6                     __ptext8:
  2620                           	opt stack 0
  2621  0018B6                     _writeCStringLcd:
  2622                           	opt stack 25
  2623                           
  2624                           ;lcd.c: 42: LATBbits.LATB4 = 1;
  2625                           
  2626                           ;incstack = 0
  2627  0018B6  888A               	bsf	3978,4,c	;volatile
  2628                           
  2629                           ;lcd.c: 43: while (*s)
  2630  0018B8  D00B               	goto	l127
  2631  0018BA                     
  2632                           ;lcd.c: 44: writeLcd(*s++);
  2633  0018BA  C202  FFF6         	movff	writeCStringLcd@s,tblptrl
  2634  0018BE  C203  FFF7         	movff	writeCStringLcd@s+1,tblptrh
  2635  0018C2                     	if	0	;tblptru may be non-zero
  2636  0018C2                     	endif
  2637  0018C2                     	if	0	;tblptru may be non-zero
  2638  0018C2                     	endif
  2639  0018C2  0008               	tblrd		*
  2640  0018C4  50F5               	movf	tablat,w,c
  2641  0018C6  ECE4  F00B         	call	_writeLcd
  2642  0018CA  0102               	movlb	2	; () banked
  2643  0018CC  4B02               	infsnz	writeCStringLcd@s& (0+255),f,b
  2644  0018CE  2B03               	incf	(writeCStringLcd@s+1)& (0+255),f,b
  2645  0018D0                     l127:
  2646                           
  2647                           ; BSR set to: 2
  2648  0018D0  C202  FFF6         	movff	writeCStringLcd@s,tblptrl
  2649  0018D4  C203  FFF7         	movff	writeCStringLcd@s+1,tblptrh
  2650  0018D8                     	if	0	;tblptru may be non-zero
  2651  0018D8                     	endif
  2652  0018D8                     	if	0	;tblptru may be non-zero
  2653  0018D8                     	endif
  2654  0018D8  0008               	tblrd		*
  2655  0018DA  50F5               	movf	tablat,w,c
  2656  0018DC  0900               	iorlw	0
  2657  0018DE  B4D8               	btfsc	status,2,c
  2658  0018E0  0012               	return	
  2659  0018E2  D7EB               	goto	l128
  2660  0018E4                     __end_of_writeCStringLcd:
  2661                           	opt stack 0
  2662                           tblptru	equ	0xFF8
  2663                           tblptrh	equ	0xFF7
  2664                           tblptrl	equ	0xFF6
  2665                           tablat	equ	0xFF5
  2666                           wreg	equ	0xFE8
  2667                           status	equ	0xFD8
  2668                           
  2669 ;; *************** function _setTimer *****************
  2670 ;; Defined at:
  2671 ;;		line 29 in file "timer.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  state           1    wreg     unsigned char 
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  state           1    0[BANK2 ] unsigned char 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  1    wreg      void 
  2678 ;; Registers used:
  2679 ;;		wreg, status,2, status,0
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2685 ;;      Params:         0       0       0       0       0       0       0       0       0
  2686 ;;      Locals:         0       0       0       1       0       0       0       0       0
  2687 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2688 ;;      Totals:         0       0       0       1       0       0       0       0       0
  2689 ;;Total ram usage:        1 bytes
  2690 ;; Hardware stack levels used:    1
  2691 ;; Hardware stack levels required when called:    3
  2692 ;; This function calls:
  2693 ;;		Nothing
  2694 ;; This function is called by:
  2695 ;;		_main
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           	psect	text9
  2700  0018E4                     __ptext9:
  2701                           	opt stack 0
  2702  0018E4                     _setTimer:
  2703                           	opt stack 27
  2704                           
  2705                           ;incstack = 0
  2706                           ;setTimer@state stored from wreg
  2707  0018E4  0102               	movlb	2	; () banked
  2708  0018E6  6F00               	movwf	setTimer@state& (0+255),b
  2709                           
  2710                           ;timer.c: 30: if(state == 0) {
  2711  0018E8  0102               	movlb	2	; () banked
  2712  0018EA  5100               	movf	setTimer@state& (0+255),w,b
  2713  0018EC  A4D8               	btfss	status,2,c
  2714  0018EE  D008               	goto	l160
  2715                           
  2716                           ; BSR set to: 2
  2717                           ;timer.c: 31: T0CON = T0CON & 0b01111111;
  2718  0018F0  50D5               	movf	4053,w,c	;volatile
  2719  0018F2  0B7F               	andlw	127
  2720  0018F4  6ED5               	movwf	4053,c	;volatile
  2721                           
  2722                           ; BSR set to: 2
  2723                           ;timer.c: 32: TMR0L = 0;
  2724  0018F6  0E00               	movlw	0
  2725  0018F8  6ED6               	movwf	4054,c	;volatile
  2726                           
  2727                           ; BSR set to: 2
  2728                           ;timer.c: 33: TMR0H = 0;
  2729  0018FA  0E00               	movlw	0
  2730  0018FC  6ED7               	movwf	4055,c	;volatile
  2731                           
  2732                           ;timer.c: 34: } else {
  2733  0018FE  0012               	return	
  2734  001900                     l160:
  2735                           
  2736                           ; BSR set to: 2
  2737                           ;timer.c: 35: TMR0L = 0xD2;
  2738                           
  2739                           ; BSR set to: 2
  2740  001900  0ED2               	movlw	210
  2741  001902  6ED6               	movwf	4054,c	;volatile
  2742                           
  2743                           ;timer.c: 36: TMR0H = 0x39;
  2744  001904  0E39               	movlw	57
  2745  001906  6ED7               	movwf	4055,c	;volatile
  2746                           
  2747                           ; BSR set to: 2
  2748                           ;timer.c: 37: T0CON = T0CON | 0b10000000;
  2749  001908  50D5               	movf	4053,w,c	;volatile
  2750  00190A  0980               	iorlw	128
  2751  00190C  6ED5               	movwf	4053,c	;volatile
  2752  00190E  0012               	return	
  2753  001910                     __end_of_setTimer:
  2754                           	opt stack 0
  2755                           tblptru	equ	0xFF8
  2756                           tblptrh	equ	0xFF7
  2757                           tblptrl	equ	0xFF6
  2758                           tablat	equ	0xFF5
  2759                           wreg	equ	0xFE8
  2760                           status	equ	0xFD8
  2761                           
  2762 ;; *************** function _initConfigs *****************
  2763 ;; Defined at:
  2764 ;;		line 13 in file "preset.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;		None
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;		None
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      void 
  2771 ;; Registers used:
  2772 ;;		wreg, status,2, status,0, cstack
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2778 ;;      Params:         0       0       0       0       0       0       0       0       0
  2779 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2780 ;;      Temps:          0       0       0       2       0       0       0       0       0
  2781 ;;      Totals:         0       0       0       2       0       0       0       0       0
  2782 ;;Total ram usage:        2 bytes
  2783 ;; Hardware stack levels used:    1
  2784 ;; Hardware stack levels required when called:    6
  2785 ;; This function calls:
  2786 ;;		_clearLcd
  2787 ;;		_writeLcd
  2788 ;; This function is called by:
  2789 ;;		_main
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text10
  2794  0016E0                     __ptext10:
  2795                           	opt stack 0
  2796  0016E0                     _initConfigs:
  2797                           	opt stack 24
  2798                           
  2799                           ;preset.c: 14: UCON<3>=0;
  2800                           
  2801                           ; BSR set to: 2
  2802                           ;incstack = 0
  2803  0016E0  506D               	movf	3949,w,c	;volatile
  2804                           
  2805                           ;preset.c: 15: CMCON = 0b00000111;
  2806  0016E2  0E07               	movlw	7
  2807  0016E4  6EB4               	movwf	4020,c	;volatile
  2808                           
  2809                           ;preset.c: 16: TRISC = 0b11111000;
  2810  0016E6  0EF8               	movlw	248
  2811  0016E8  6E94               	movwf	3988,c	;volatile
  2812                           
  2813                           ;preset.c: 17: TRISD = 0b00000001;
  2814  0016EA  0E01               	movlw	1
  2815  0016EC  6E95               	movwf	3989,c	;volatile
  2816                           
  2817                           ;preset.c: 18: TRISE = 0b1111;
  2818  0016EE  0E0F               	movlw	15
  2819  0016F0  6E96               	movwf	3990,c	;volatile
  2820                           
  2821                           ;preset.c: 20: TRISA = 0b10111111;
  2822  0016F2  0EBF               	movlw	191
  2823  0016F4  6E92               	movwf	3986,c	;volatile
  2824                           
  2825                           ;preset.c: 21: ADCON1 = 0b00001001;
  2826  0016F6  0E09               	movlw	9
  2827  0016F8  6EC1               	movwf	4033,c	;volatile
  2828                           
  2829                           ;preset.c: 22: ADCON2 = 0b10000101;
  2830  0016FA  0E85               	movlw	133
  2831  0016FC  6EC0               	movwf	4032,c	;volatile
  2832                           
  2833                           ;preset.c: 24: TRISB = 0b11000000;
  2834  0016FE  0EC0               	movlw	192
  2835  001700  6E93               	movwf	3987,c	;volatile
  2836                           
  2837                           ;preset.c: 25: LATBbits.LATB5 = 0;
  2838  001702  9A8A               	bcf	3978,5,c	;volatile
  2839                           
  2840                           ;preset.c: 26: LATBbits.LATB4 = 0;
  2841  001704  988A               	bcf	3978,4,c	;volatile
  2842                           
  2843                           ;preset.c: 27: _delay((unsigned long)((50)*((16000000)/4000.0)));
  2844  001706  0E02               	movlw	2
  2845  001708  0102               	movlb	2	; () banked
  2846  00170A  6F04               	movwf	(??_initConfigs+1)& (0+255),b
  2847  00170C  0E04               	movlw	4
  2848  00170E  6F03               	movwf	??_initConfigs& (0+255),b
  2849  001710  0EBA               	movlw	186
  2850  001712                     u1267:
  2851  001712  2EE8               	decfsz	wreg,f,c
  2852  001714  D7FE               	bra	u1267
  2853  001716  2F03               	decfsz	??_initConfigs& (0+255),f,b
  2854  001718  D7FC               	bra	u1267
  2855  00171A  2F04               	decfsz	(??_initConfigs+1)& (0+255),f,b
  2856  00171C  D7FA               	bra	u1267
  2857  00171E  F000               	nop	
  2858                           
  2859                           ;preset.c: 28: writeLcd(0x02);
  2860  001720  0E02               	movlw	2
  2861  001722  ECE4  F00B         	call	_writeLcd
  2862                           
  2863                           ;preset.c: 29: _delay((unsigned long)((5)*((16000000)/4000.0)));
  2864  001726  0E1A               	movlw	26
  2865  001728  0102               	movlb	2	; () banked
  2866  00172A  6F03               	movwf	??_initConfigs& (0+255),b
  2867  00172C  0EF8               	movlw	248
  2868  00172E                     u1277:
  2869  00172E  2EE8               	decfsz	wreg,f,c
  2870  001730  D7FE               	bra	u1277
  2871  001732  2F03               	decfsz	??_initConfigs& (0+255),f,b
  2872  001734  D7FC               	bra	u1277
  2873  001736  F000               	nop	
  2874                           
  2875                           ;preset.c: 30: writeLcd(0x28);
  2876  001738  0E28               	movlw	40
  2877  00173A  ECE4  F00B         	call	_writeLcd
  2878                           
  2879                           ;preset.c: 31: writeLcd(0x01);
  2880  00173E  0E01               	movlw	1
  2881  001740  ECE4  F00B         	call	_writeLcd
  2882                           
  2883                           ;preset.c: 32: writeLcd(0x0c);
  2884  001744  0E0C               	movlw	12
  2885  001746  ECE4  F00B         	call	_writeLcd
  2886                           
  2887                           ;preset.c: 33: writeLcd(0x06);
  2888  00174A  0E06               	movlw	6
  2889  00174C  ECE4  F00B         	call	_writeLcd
  2890                           
  2891                           ;preset.c: 34: clearLcd();
  2892  001750  EC9B  F00C         	call	_clearLcd	;wreg free
  2893                           
  2894                           ;preset.c: 35: writeLcd(0x0C);
  2895  001754  0E0C               	movlw	12
  2896  001756  ECE4  F00B         	call	_writeLcd
  2897                           
  2898                           ;preset.c: 37: T0CON = 0b00000111;
  2899  00175A  0E07               	movlw	7
  2900  00175C  6ED5               	movwf	4053,c	;volatile
  2901                           
  2902                           ;preset.c: 38: INTCON = 0b11100000;
  2903  00175E  0EE0               	movlw	224
  2904  001760  6EF2               	movwf	intcon,c	;volatile
  2905                           
  2906                           ;preset.c: 51: LATD = LATD & 0b00000001;
  2907  001762  508C               	movf	3980,w,c	;volatile
  2908  001764  0B01               	andlw	1
  2909  001766  6E8C               	movwf	3980,c	;volatile
  2910                           
  2911                           ;preset.c: 52: LATC = LATC & 0b11111000;
  2912  001768  508B               	movf	3979,w,c	;volatile
  2913  00176A  0BF8               	andlw	248
  2914  00176C  6E8B               	movwf	3979,c	;volatile
  2915  00176E  0012               	return		;funcret
  2916  001770                     __end_of_initConfigs:
  2917                           	opt stack 0
  2918                           tblptru	equ	0xFF8
  2919                           tblptrh	equ	0xFF7
  2920                           tblptrl	equ	0xFF6
  2921                           tablat	equ	0xFF5
  2922                           intcon	equ	0xFF2
  2923                           wreg	equ	0xFE8
  2924                           status	equ	0xFD8
  2925                           
  2926 ;; *************** function _clearLcd *****************
  2927 ;; Defined at:
  2928 ;;		line 25 in file "lcd.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;		None
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;		None
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  1    wreg      void 
  2935 ;; Registers used:
  2936 ;;		wreg, status,2, status,0, cstack
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2942 ;;      Params:         0       0       0       0       0       0       0       0       0
  2943 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2944 ;;      Temps:          0       0       0       1       0       0       0       0       0
  2945 ;;      Totals:         0       0       0       1       0       0       0       0       0
  2946 ;;Total ram usage:        1 bytes
  2947 ;; Hardware stack levels used:    1
  2948 ;; Hardware stack levels required when called:    5
  2949 ;; This function calls:
  2950 ;;		_writeLcd
  2951 ;; This function is called by:
  2952 ;;		_main
  2953 ;;		_initConfigs
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           	psect	text11
  2958  001936                     __ptext11:
  2959                           	opt stack 0
  2960  001936                     _clearLcd:
  2961                           	opt stack 24
  2962                           
  2963                           ;lcd.c: 26: LATBbits.LATB4 = 0;
  2964                           
  2965                           ;incstack = 0
  2966  001936  988A               	bcf	3978,4,c	;volatile
  2967                           
  2968                           ;lcd.c: 27: writeLcd(0x1);
  2969  001938  0E01               	movlw	1
  2970  00193A  ECE4  F00B         	call	_writeLcd
  2971                           
  2972                           ;lcd.c: 28: _delay((unsigned long)((2)*((16000000)/4000.0)));
  2973  00193E  0E0B               	movlw	11
  2974  001940  0102               	movlb	2	; () banked
  2975  001942  6F02               	movwf	??_clearLcd& (0+255),b
  2976  001944  0E62               	movlw	98
  2977  001946                     u1287:
  2978  001946  2EE8               	decfsz	wreg,f,c
  2979  001948  D7FE               	bra	u1287
  2980  00194A  2F02               	decfsz	??_clearLcd& (0+255),f,b
  2981  00194C  D7FC               	bra	u1287
  2982  00194E  F000               	nop	
  2983  001950  0012               	return		;funcret
  2984  001952                     __end_of_clearLcd:
  2985                           	opt stack 0
  2986                           tblptru	equ	0xFF8
  2987                           tblptrh	equ	0xFF7
  2988                           tblptrl	equ	0xFF6
  2989                           tablat	equ	0xFF5
  2990                           intcon	equ	0xFF2
  2991                           wreg	equ	0xFE8
  2992                           status	equ	0xFD8
  2993                           
  2994 ;; *************** function _gotoLcd *****************
  2995 ;; Defined at:
  2996 ;;		line 31 in file "lcd.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;  pos             1    wreg     unsigned char 
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;  pos             1    2[BANK2 ] unsigned char 
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  1    wreg      void 
  3003 ;; Registers used:
  3004 ;;		wreg, status,2, status,0, cstack
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3010 ;;      Params:         0       0       0       0       0       0       0       0       0
  3011 ;;      Locals:         0       0       0       1       0       0       0       0       0
  3012 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3013 ;;      Totals:         0       0       0       1       0       0       0       0       0
  3014 ;;Total ram usage:        1 bytes
  3015 ;; Hardware stack levels used:    1
  3016 ;; Hardware stack levels required when called:    5
  3017 ;; This function calls:
  3018 ;;		_writeLcd
  3019 ;; This function is called by:
  3020 ;;		_main
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           	psect	text12
  3025  001952                     __ptext12:
  3026                           	opt stack 0
  3027  001952                     _gotoLcd:
  3028                           	opt stack 25
  3029                           
  3030                           ;incstack = 0
  3031                           ;gotoLcd@pos stored from wreg
  3032  001952  0102               	movlb	2	; () banked
  3033  001954  6F02               	movwf	gotoLcd@pos& (0+255),b
  3034                           
  3035                           ;lcd.c: 32: LATBbits.LATB4 = 0;
  3036  001956  988A               	bcf	3978,4,c	;volatile
  3037                           
  3038                           ;lcd.c: 33: writeLcd(pos);
  3039  001958  0102               	movlb	2	; () banked
  3040  00195A  5102               	movf	gotoLcd@pos& (0+255),w,b
  3041  00195C  ECE4  F00B         	call	_writeLcd
  3042  001960  0012               	return		;funcret
  3043  001962                     __end_of_gotoLcd:
  3044                           	opt stack 0
  3045                           tblptru	equ	0xFF8
  3046                           tblptrh	equ	0xFF7
  3047                           tblptrl	equ	0xFF6
  3048                           tablat	equ	0xFF5
  3049                           intcon	equ	0xFF2
  3050                           wreg	equ	0xFE8
  3051                           status	equ	0xFD8
  3052                           
  3053 ;; *************** function _writeLcd *****************
  3054 ;; Defined at:
  3055 ;;		line 16 in file "lcd.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  c               1    wreg     unsigned char 
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;  c               1    1[BANK2 ] unsigned char 
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  1    wreg      void 
  3062 ;; Registers used:
  3063 ;;		wreg, status,2, status,0, cstack
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3069 ;;      Params:         0       0       0       0       0       0       0       0       0
  3070 ;;      Locals:         0       0       0       1       0       0       0       0       0
  3071 ;;      Temps:          0       0       0       1       0       0       0       0       0
  3072 ;;      Totals:         0       0       0       2       0       0       0       0       0
  3073 ;;Total ram usage:        2 bytes
  3074 ;; Hardware stack levels used:    1
  3075 ;; Hardware stack levels required when called:    4
  3076 ;; This function calls:
  3077 ;;		_sendLcd
  3078 ;; This function is called by:
  3079 ;;		_initConfigs
  3080 ;;		_clearLcd
  3081 ;;		_gotoLcd
  3082 ;;		_writeCStringLcd
  3083 ;;		_writeStringLcd
  3084 ;;		_writeValueLcd
  3085 ;; This function uses a non-reentrant model
  3086 ;;
  3087                           
  3088                           	psect	text13
  3089  0017C8                     __ptext13:
  3090                           	opt stack 0
  3091  0017C8                     _writeLcd:
  3092                           	opt stack 25
  3093                           
  3094                           ;incstack = 0
  3095                           ;writeLcd@c stored from wreg
  3096  0017C8  0102               	movlb	2	; () banked
  3097  0017CA  6F01               	movwf	writeLcd@c& (0+255),b
  3098                           
  3099                           ;lcd.c: 17: LATB = (unsigned char)((LATB & 0xF0) | (0x0F & c>>4));
  3100  0017CC  C201  F200         	movff	writeLcd@c,??_writeLcd
  3101  0017D0  0102               	movlb	2	; () banked
  3102  0017D2  3B00               	swapf	??_writeLcd& (0+255),f,b
  3103  0017D4  0E0F               	movlw	15
  3104  0017D6  1700               	andwf	??_writeLcd& (0+255),f,b
  3105  0017D8  0E0F               	movlw	15
  3106  0017DA  1700               	andwf	??_writeLcd& (0+255),f,b
  3107  0017DC  508A               	movf	3978,w,c	;volatile
  3108  0017DE  0BF0               	andlw	240
  3109  0017E0  1100               	iorwf	??_writeLcd& (0+255),w,b
  3110  0017E2  6E8A               	movwf	3978,c	;volatile
  3111                           
  3112                           ; BSR set to: 2
  3113                           ;lcd.c: 18: sendLcd();
  3114  0017E4  ECB8  F00C         	call	_sendLcd	;wreg free
  3115                           
  3116                           ;lcd.c: 19: _delay((unsigned long)((5)*((16000000)/4000000.0)));
  3117  0017E8  0E06               	movlw	6
  3118  0017EA                     u1297:
  3119  0017EA  2EE8               	decfsz	wreg,f,c
  3120  0017EC  D7FE               	bra	u1297
  3121  0017EE  D000               	nop2	
  3122                           
  3123                           ;lcd.c: 20: LATB = (unsigned char)((LATB & 0xF0) | (0x0F & c));
  3124  0017F0  C201  F200         	movff	writeLcd@c,??_writeLcd
  3125  0017F4  0E0F               	movlw	15
  3126  0017F6  0102               	movlb	2	; () banked
  3127  0017F8  1700               	andwf	??_writeLcd& (0+255),f,b
  3128  0017FA  508A               	movf	3978,w,c	;volatile
  3129  0017FC  0BF0               	andlw	240
  3130  0017FE  1100               	iorwf	??_writeLcd& (0+255),w,b
  3131  001800  6E8A               	movwf	3978,c	;volatile
  3132                           
  3133                           ; BSR set to: 2
  3134                           ;lcd.c: 21: sendLcd();
  3135  001802  ECB8  F00C         	call	_sendLcd	;wreg free
  3136                           
  3137                           ;lcd.c: 22: _delay((unsigned long)((5)*((16000000)/4000.0)));
  3138  001806  0E1A               	movlw	26
  3139  001808  0102               	movlb	2	; () banked
  3140  00180A  6F00               	movwf	??_writeLcd& (0+255),b
  3141  00180C  0EF8               	movlw	248
  3142  00180E                     u1307:
  3143  00180E  2EE8               	decfsz	wreg,f,c
  3144  001810  D7FE               	bra	u1307
  3145  001812  2F00               	decfsz	??_writeLcd& (0+255),f,b
  3146  001814  D7FC               	bra	u1307
  3147  001816  F000               	nop	
  3148  001818  0012               	return		;funcret
  3149  00181A                     __end_of_writeLcd:
  3150                           	opt stack 0
  3151                           tblptru	equ	0xFF8
  3152                           tblptrh	equ	0xFF7
  3153                           tblptrl	equ	0xFF6
  3154                           tablat	equ	0xFF5
  3155                           intcon	equ	0xFF2
  3156                           wreg	equ	0xFE8
  3157                           status	equ	0xFD8
  3158                           
  3159 ;; *************** function _sendLcd *****************
  3160 ;; Defined at:
  3161 ;;		line 11 in file "lcd.c"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;		None
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;		None
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  1    wreg      void 
  3168 ;; Registers used:
  3169 ;;		None
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3175 ;;      Params:         0       0       0       0       0       0       0       0       0
  3176 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3177 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3178 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3179 ;;Total ram usage:        0 bytes
  3180 ;; Hardware stack levels used:    1
  3181 ;; Hardware stack levels required when called:    3
  3182 ;; This function calls:
  3183 ;;		Nothing
  3184 ;; This function is called by:
  3185 ;;		_writeLcd
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text14
  3190  001970                     __ptext14:
  3191                           	opt stack 0
  3192  001970                     _sendLcd:
  3193                           	opt stack 25
  3194                           
  3195                           ;lcd.c: 12: LATBbits.LATB5 = 1;
  3196                           
  3197                           ;incstack = 0
  3198  001970  8A8A               	bsf	3978,5,c	;volatile
  3199                           
  3200                           ;lcd.c: 13: LATBbits.LATB5 = 0;
  3201  001972  9A8A               	bcf	3978,5,c	;volatile
  3202  001974  0012               	return		;funcret
  3203  001976                     __end_of_sendLcd:
  3204                           	opt stack 0
  3205                           tblptru	equ	0xFF8
  3206                           tblptrh	equ	0xFF7
  3207                           tblptrl	equ	0xFF6
  3208                           tablat	equ	0xFF5
  3209                           intcon	equ	0xFF2
  3210                           wreg	equ	0xFE8
  3211                           status	equ	0xFD8
  3212                           
  3213 ;; *************** function _adc_read *****************
  3214 ;; Defined at:
  3215 ;;		line 11 in file "adc.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;  canal           1    wreg     unsigned char 
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;  canal           1    4[BANK2 ] unsigned char 
  3220 ;;  y               1    6[BANK2 ] unsigned char 
  3221 ;;  x               1    5[BANK2 ] unsigned char 
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  2    0[BANK2 ] unsigned int 
  3224 ;; Registers used:
  3225 ;;		wreg, status,2, status,0
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3231 ;;      Params:         0       0       0       2       0       0       0       0       0
  3232 ;;      Locals:         0       0       0       3       0       0       0       0       0
  3233 ;;      Temps:          0       0       0       2       0       0       0       0       0
  3234 ;;      Totals:         0       0       0       7       0       0       0       0       0
  3235 ;;Total ram usage:        7 bytes
  3236 ;; Hardware stack levels used:    1
  3237 ;; Hardware stack levels required when called:    3
  3238 ;; This function calls:
  3239 ;;		Nothing
  3240 ;; This function is called by:
  3241 ;;		_main
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           	psect	text15
  3246  00181A                     __ptext15:
  3247                           	opt stack 0
  3248  00181A                     _adc_read:
  3249                           	opt stack 27
  3250                           
  3251                           ;incstack = 0
  3252                           ;adc_read@canal stored from wreg
  3253  00181A  0102               	movlb	2	; () banked
  3254  00181C  6F04               	movwf	adc_read@canal& (0+255),b
  3255                           
  3256                           ;adc.c: 12: unsigned char x, y;
  3257                           ;adc.c: 13: ADCON0 = (unsigned char)((canal << 2) | 0x01);
  3258  00181E  0102               	movlb	2	; () banked
  3259  001820  4504               	rlncf	adc_read@canal& (0+255),w,b
  3260  001822  46E8               	rlncf	wreg,f,c
  3261  001824  0BFC               	andlw	252
  3262  001826  0901               	iorlw	1
  3263  001828  6EC2               	movwf	4034,c	;volatile
  3264                           
  3265                           ; BSR set to: 2
  3266                           ;adc.c: 14: ADCON0bits.GO_DONE = 1;
  3267  00182A  82C2               	bsf	4034,1,c	;volatile
  3268  00182C                     
  3269                           ; BSR set to: 2
  3270  00182C  B2C2               	btfsc	4034,1,c	;volatile
  3271  00182E  D7FE               	goto	l104
  3272                           
  3273                           ;adc.c: 16: x = (unsigned char)(ADRESH & 0x03);
  3274  001830  50C4               	movf	4036,w,c	;volatile
  3275  001832  0B03               	andlw	3
  3276  001834  0102               	movlb	2	; () banked
  3277  001836  6F05               	movwf	adc_read@x& (0+255),b
  3278                           
  3279                           ; BSR set to: 2
  3280                           ;adc.c: 17: y = ADRESL;
  3281  001838  CFC3 F206          	movff	4035,adc_read@y	;volatile
  3282                           
  3283                           ;adc.c: 18: return (unsigned int) (x << 8 | y);
  3284  00183C  5106               	movf	adc_read@y& (0+255),w,b
  3285  00183E  C205  F202         	movff	adc_read@x,??_adc_read
  3286  001842  6B03               	clrf	(??_adc_read+1)& (0+255),b
  3287  001844  C202  F203         	movff	??_adc_read,??_adc_read+1
  3288  001848  6B02               	clrf	??_adc_read& (0+255),b
  3289  00184A  1102               	iorwf	??_adc_read& (0+255),w,b
  3290  00184C  6F00               	movwf	?_adc_read& (0+255),b
  3291  00184E  5103               	movf	(??_adc_read+1)& (0+255),w,b
  3292  001850  6F01               	movwf	(?_adc_read+1)& (0+255),b
  3293  001852  0012               	return	
  3294  001854                     __end_of_adc_read:
  3295                           	opt stack 0
  3296                           tblptru	equ	0xFF8
  3297                           tblptrh	equ	0xFF7
  3298                           tblptrl	equ	0xFF6
  3299                           tablat	equ	0xFF5
  3300                           intcon	equ	0xFF2
  3301                           wreg	equ	0xFE8
  3302                           status	equ	0xFD8
  3303                           
  3304 ;; *************** function ___lwtoft *****************
  3305 ;; Defined at:
  3306 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;  c               2    8[BANK2 ] unsigned int 
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;		None
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  3    8[BANK2 ] float 
  3313 ;; Registers used:
  3314 ;;		wreg, status,2, status,0, cstack
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3320 ;;      Params:         0       0       0       3       0       0       0       0       0
  3321 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3322 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3323 ;;      Totals:         0       0       0       3       0       0       0       0       0
  3324 ;;Total ram usage:        3 bytes
  3325 ;; Hardware stack levels used:    1
  3326 ;; Hardware stack levels required when called:    4
  3327 ;; This function calls:
  3328 ;;		___ftpack
  3329 ;; This function is called by:
  3330 ;;		_main
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           	psect	text16
  3335  001910                     __ptext16:
  3336                           	opt stack 0
  3337  001910                     ___lwtoft:
  3338                           	opt stack 26
  3339                           
  3340                           ; BSR set to: 2
  3341                           ;incstack = 0
  3342  001910  C208  F200         	movff	___lwtoft@c,___ftpack@arg
  3343  001914  C209  F201         	movff	___lwtoft@c+1,___ftpack@arg+1
  3344  001918  0102               	movlb	2	; () banked
  3345  00191A  6B02               	clrf	(___ftpack@arg+2)& (0+255),b
  3346  00191C  0E8E               	movlw	142
  3347  00191E  6F03               	movwf	___ftpack@exp& (0+255),b
  3348  001920  0E00               	movlw	0
  3349  001922  6F04               	movwf	___ftpack@sign& (0+255),b
  3350  001924  EC73  F00A         	call	___ftpack	;wreg free
  3351  001928  C200  F208         	movff	?___ftpack,?___lwtoft
  3352  00192C  C201  F209         	movff	?___ftpack+1,?___lwtoft+1
  3353  001930  C202  F20A         	movff	?___ftpack+2,?___lwtoft+2
  3354  001934  0012               	return	
  3355  001936                     __end_of___lwtoft:
  3356                           	opt stack 0
  3357                           tblptru	equ	0xFF8
  3358                           tblptrh	equ	0xFF7
  3359                           tblptrl	equ	0xFF6
  3360                           tablat	equ	0xFF5
  3361                           intcon	equ	0xFF2
  3362                           wreg	equ	0xFE8
  3363                           status	equ	0xFD8
  3364                           
  3365 ;; *************** function ___ftdiv *****************
  3366 ;; Defined at:
  3367 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;  f1              3   26[BANK2 ] float 
  3370 ;;  f2              3   29[BANK2 ] float 
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;  f3              3   36[BANK2 ] float 
  3373 ;;  sign            1   40[BANK2 ] unsigned char 
  3374 ;;  exp             1   39[BANK2 ] unsigned char 
  3375 ;;  cntr            1   35[BANK2 ] unsigned char 
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  3   26[BANK2 ] float 
  3378 ;; Registers used:
  3379 ;;		wreg, status,2, status,0, cstack
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3385 ;;      Params:         0       0       0       6       0       0       0       0       0
  3386 ;;      Locals:         0       0       0       6       0       0       0       0       0
  3387 ;;      Temps:          0       0       0       3       0       0       0       0       0
  3388 ;;      Totals:         0       0       0      15       0       0       0       0       0
  3389 ;;Total ram usage:       15 bytes
  3390 ;; Hardware stack levels used:    1
  3391 ;; Hardware stack levels required when called:    4
  3392 ;; This function calls:
  3393 ;;		___ftpack
  3394 ;; This function is called by:
  3395 ;;		_main
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text17
  3400  001330                     __ptext17:
  3401                           	opt stack 0
  3402  001330                     ___ftdiv:
  3403                           	opt stack 26
  3404                           
  3405                           ;incstack = 0
  3406  001330  C21C  F220         	movff	___ftdiv@f1+2,??___ftdiv
  3407  001334  0102               	movlb	2	; () banked
  3408  001336  6B21               	clrf	(??___ftdiv+1)& (0+255),b
  3409  001338  6B22               	clrf	(??___ftdiv+2)& (0+255),b
  3410  00133A  351B               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  3411  00133C  3720               	rlcf	??___ftdiv& (0+255),f,b
  3412  00133E  E301               	bnc	u1091
  3413  001340  8121               	bsf	(??___ftdiv+1)& (0+255),0,b
  3414  001342                     u1091:
  3415  001342  5120               	movf	??___ftdiv& (0+255),w,b
  3416  001344  6F27               	movwf	___ftdiv@exp& (0+255),b
  3417  001346  5127               	movf	___ftdiv@exp& (0+255),w,b
  3418  001348  A4D8               	btfss	status,2,c
  3419  00134A  D007               	goto	l441
  3420                           
  3421                           ; BSR set to: 2
  3422  00134C  0E00               	movlw	0
  3423  00134E  6F1A               	movwf	?___ftdiv& (0+255),b
  3424  001350  0E00               	movlw	0
  3425  001352  6F1B               	movwf	(?___ftdiv+1)& (0+255),b
  3426  001354  0E00               	movlw	0
  3427  001356  6F1C               	movwf	(?___ftdiv+2)& (0+255),b
  3428                           
  3429                           ; BSR set to: 2
  3430  001358  0012               	return	
  3431  00135A                     l441:
  3432                           
  3433                           ; BSR set to: 2
  3434                           
  3435                           ; BSR set to: 2
  3436  00135A  C21F  F220         	movff	___ftdiv@f2+2,??___ftdiv
  3437  00135E  6B21               	clrf	(??___ftdiv+1)& (0+255),b
  3438  001360  6B22               	clrf	(??___ftdiv+2)& (0+255),b
  3439  001362  351E               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  3440  001364  3720               	rlcf	??___ftdiv& (0+255),f,b
  3441  001366  E301               	bnc	u1111
  3442  001368  8121               	bsf	(??___ftdiv+1)& (0+255),0,b
  3443  00136A                     u1111:
  3444  00136A  5120               	movf	??___ftdiv& (0+255),w,b
  3445  00136C  6F28               	movwf	___ftdiv@sign& (0+255),b
  3446  00136E  5128               	movf	___ftdiv@sign& (0+255),w,b
  3447  001370  A4D8               	btfss	status,2,c
  3448  001372  D007               	goto	l443
  3449                           
  3450                           ; BSR set to: 2
  3451  001374  0E00               	movlw	0
  3452  001376  6F1A               	movwf	?___ftdiv& (0+255),b
  3453  001378  0E00               	movlw	0
  3454  00137A  6F1B               	movwf	(?___ftdiv+1)& (0+255),b
  3455  00137C  0E00               	movlw	0
  3456  00137E  6F1C               	movwf	(?___ftdiv+2)& (0+255),b
  3457                           
  3458                           ; BSR set to: 2
  3459  001380  0012               	return	
  3460  001382                     l443:
  3461                           
  3462                           ; BSR set to: 2
  3463                           
  3464                           ; BSR set to: 2
  3465  001382  0E00               	movlw	0
  3466  001384  6F24               	movwf	___ftdiv@f3& (0+255),b
  3467  001386  0E00               	movlw	0
  3468  001388  6F25               	movwf	(___ftdiv@f3+1)& (0+255),b
  3469  00138A  0E00               	movlw	0
  3470  00138C  6F26               	movwf	(___ftdiv@f3+2)& (0+255),b
  3471                           
  3472                           ; BSR set to: 2
  3473  00138E  5128               	movf	___ftdiv@sign& (0+255),w,b
  3474  001390  0F89               	addlw	137
  3475  001392  5F27               	subwf	___ftdiv@exp& (0+255),f,b
  3476                           
  3477                           ; BSR set to: 2
  3478  001394  C21C  F228         	movff	___ftdiv@f1+2,___ftdiv@sign
  3479                           
  3480                           ; BSR set to: 2
  3481  001398  511F               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3482  00139A  1B28               	xorwf	___ftdiv@sign& (0+255),f,b
  3483                           
  3484                           ; BSR set to: 2
  3485  00139C  0E80               	movlw	128
  3486  00139E  1728               	andwf	___ftdiv@sign& (0+255),f,b
  3487                           
  3488                           ; BSR set to: 2
  3489  0013A0  8F1B               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  3490                           
  3491                           ; BSR set to: 2
  3492  0013A2  0EFF               	movlw	255
  3493  0013A4  171A               	andwf	___ftdiv@f1& (0+255),f,b
  3494  0013A6  0EFF               	movlw	255
  3495  0013A8  171B               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  3496  0013AA  0E00               	movlw	0
  3497  0013AC  171C               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  3498                           
  3499                           ; BSR set to: 2
  3500  0013AE  8F1E               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  3501                           
  3502                           ; BSR set to: 2
  3503  0013B0  0EFF               	movlw	255
  3504  0013B2  171D               	andwf	___ftdiv@f2& (0+255),f,b
  3505  0013B4  0EFF               	movlw	255
  3506  0013B6  171E               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  3507  0013B8  0E00               	movlw	0
  3508  0013BA  171F               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  3509                           
  3510                           ; BSR set to: 2
  3511  0013BC  0E18               	movlw	24
  3512  0013BE  6F23               	movwf	___ftdiv@cntr& (0+255),b
  3513  0013C0                     
  3514                           ; BSR set to: 2
  3515                           
  3516                           ; BSR set to: 2
  3517  0013C0  90D8               	bcf	status,0,c
  3518  0013C2  3724               	rlcf	___ftdiv@f3& (0+255),f,b
  3519  0013C4  3725               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  3520  0013C6  3726               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  3521                           
  3522                           ; BSR set to: 2
  3523  0013C8  511D               	movf	___ftdiv@f2& (0+255),w,b
  3524  0013CA  5D1A               	subwf	___ftdiv@f1& (0+255),w,b
  3525  0013CC  511E               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3526  0013CE  591B               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  3527  0013D0  511F               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3528  0013D2  591C               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  3529  0013D4  A0D8               	btfss	status,0,c
  3530  0013D6  D007               	goto	l445
  3531                           
  3532                           ; BSR set to: 2
  3533  0013D8  511D               	movf	___ftdiv@f2& (0+255),w,b
  3534  0013DA  5F1A               	subwf	___ftdiv@f1& (0+255),f,b
  3535  0013DC  511E               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3536  0013DE  5B1B               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  3537  0013E0  511F               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3538  0013E2  5B1C               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  3539                           
  3540                           ; BSR set to: 2
  3541  0013E4  8124               	bsf	___ftdiv@f3& (0+255),0,b
  3542  0013E6                     l445:
  3543                           
  3544                           ; BSR set to: 2
  3545  0013E6  90D8               	bcf	status,0,c
  3546  0013E8  371A               	rlcf	___ftdiv@f1& (0+255),f,b
  3547  0013EA  371B               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  3548  0013EC  371C               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  3549                           
  3550                           ; BSR set to: 2
  3551  0013EE  2F23               	decfsz	___ftdiv@cntr& (0+255),f,b
  3552  0013F0  D7E7               	goto	l444
  3553                           
  3554                           ; BSR set to: 2
  3555                           
  3556                           ; BSR set to: 2
  3557  0013F2  C224  F200         	movff	___ftdiv@f3,___ftpack@arg
  3558  0013F6  C225  F201         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3559  0013FA  C226  F202         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3560  0013FE  C227  F203         	movff	___ftdiv@exp,___ftpack@exp
  3561  001402  C228  F204         	movff	___ftdiv@sign,___ftpack@sign
  3562  001406  EC73  F00A         	call	___ftpack	;wreg free
  3563  00140A  C200  F21A         	movff	?___ftpack,?___ftdiv
  3564  00140E  C201  F21B         	movff	?___ftpack+1,?___ftdiv+1
  3565  001412  C202  F21C         	movff	?___ftpack+2,?___ftdiv+2
  3566  001416  0012               	return	
  3567  001418                     __end_of___ftdiv:
  3568                           	opt stack 0
  3569                           tblptru	equ	0xFF8
  3570                           tblptrh	equ	0xFF7
  3571                           tblptrl	equ	0xFF6
  3572                           tablat	equ	0xFF5
  3573                           intcon	equ	0xFF2
  3574                           wreg	equ	0xFE8
  3575                           status	equ	0xFD8
  3576                           
  3577 ;; *************** function ___ftpack *****************
  3578 ;; Defined at:
  3579 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  arg             3    0[BANK2 ] unsigned um
  3582 ;;  exp             1    3[BANK2 ] unsigned char 
  3583 ;;  sign            1    4[BANK2 ] unsigned char 
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;		None
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  3    0[BANK2 ] float 
  3588 ;; Registers used:
  3589 ;;		wreg, status,2, status,0
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3595 ;;      Params:         0       0       0       5       0       0       0       0       0
  3596 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3597 ;;      Temps:          0       0       0       3       0       0       0       0       0
  3598 ;;      Totals:         0       0       0       8       0       0       0       0       0
  3599 ;;Total ram usage:        8 bytes
  3600 ;; Hardware stack levels used:    1
  3601 ;; Hardware stack levels required when called:    3
  3602 ;; This function calls:
  3603 ;;		Nothing
  3604 ;; This function is called by:
  3605 ;;		___ftdiv
  3606 ;;		___ftmul
  3607 ;;		___lwtoft
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611                           	psect	text18
  3612  0014E6                     __ptext18:
  3613                           	opt stack 0
  3614  0014E6                     ___ftpack:
  3615                           	opt stack 25
  3616                           
  3617                           ;incstack = 0
  3618  0014E6  0102               	movlb	2	; () banked
  3619  0014E8  5103               	movf	___ftpack@exp& (0+255),w,b
  3620  0014EA  B4D8               	btfsc	status,2,c
  3621  0014EC  D005               	goto	u640
  3622                           
  3623                           ; BSR set to: 2
  3624  0014EE  5100               	movf	___ftpack@arg& (0+255),w,b
  3625  0014F0  1101               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  3626  0014F2  1102               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  3627  0014F4  A4D8               	btfss	status,2,c
  3628  0014F6  D00C               	goto	l377
  3629  0014F8                     u640:
  3630                           
  3631                           ; BSR set to: 2
  3632                           
  3633                           ; BSR set to: 2
  3634  0014F8  0E00               	movlw	0
  3635  0014FA  6F00               	movwf	?___ftpack& (0+255),b
  3636  0014FC  0E00               	movlw	0
  3637  0014FE  6F01               	movwf	(?___ftpack+1)& (0+255),b
  3638  001500  0E00               	movlw	0
  3639  001502  6F02               	movwf	(?___ftpack+2)& (0+255),b
  3640                           
  3641                           ; BSR set to: 2
  3642  001504  0012               	return	
  3643  001506                     
  3644                           ; BSR set to: 2
  3645                           
  3646                           ; BSR set to: 2
  3647  001506  2B03               	incf	___ftpack@exp& (0+255),f,b
  3648  001508  90D8               	bcf	status,0,c
  3649  00150A  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  3650  00150C  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  3651  00150E  3300               	rrcf	___ftpack@arg& (0+255),f,b
  3652  001510                     l377:
  3653                           
  3654                           ; BSR set to: 2
  3655                           
  3656                           ; BSR set to: 2
  3657  001510  0E00               	movlw	0
  3658  001512  1500               	andwf	___ftpack@arg& (0+255),w,b
  3659  001514  6F05               	movwf	??___ftpack& (0+255),b
  3660  001516  0E00               	movlw	0
  3661  001518  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
  3662  00151A  6F06               	movwf	(??___ftpack+1)& (0+255),b
  3663  00151C  0EFE               	movlw	254
  3664  00151E  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
  3665  001520  6F07               	movwf	(??___ftpack+2)& (0+255),b
  3666  001522  5105               	movf	??___ftpack& (0+255),w,b
  3667  001524  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
  3668  001526  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
  3669  001528  B4D8               	btfsc	status,2,c
  3670  00152A  D00C               	goto	l380
  3671  00152C  D7EC               	goto	l378
  3672  00152E                     
  3673                           ; BSR set to: 2
  3674                           
  3675                           ; BSR set to: 2
  3676  00152E  2B03               	incf	___ftpack@exp& (0+255),f,b
  3677                           
  3678                           ; BSR set to: 2
  3679  001530  0E01               	movlw	1
  3680  001532  2700               	addwf	___ftpack@arg& (0+255),f,b
  3681  001534  0E00               	movlw	0
  3682  001536  2301               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  3683  001538  0E00               	movlw	0
  3684  00153A  2302               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  3685  00153C  90D8               	bcf	status,0,c
  3686  00153E  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  3687  001540  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  3688  001542  3300               	rrcf	___ftpack@arg& (0+255),f,b
  3689  001544                     l380:
  3690                           
  3691                           ; BSR set to: 2
  3692                           
  3693                           ; BSR set to: 2
  3694  001544  0E00               	movlw	0
  3695  001546  1500               	andwf	___ftpack@arg& (0+255),w,b
  3696  001548  6F05               	movwf	??___ftpack& (0+255),b
  3697  00154A  0E00               	movlw	0
  3698  00154C  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
  3699  00154E  6F06               	movwf	(??___ftpack+1)& (0+255),b
  3700  001550  0EFF               	movlw	255
  3701  001552  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
  3702  001554  6F07               	movwf	(??___ftpack+2)& (0+255),b
  3703  001556  5105               	movf	??___ftpack& (0+255),w,b
  3704  001558  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
  3705  00155A  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
  3706  00155C  B4D8               	btfsc	status,2,c
  3707  00155E  D006               	goto	l383
  3708  001560  D7E6               	goto	l381
  3709  001562                     
  3710                           ; BSR set to: 2
  3711                           
  3712                           ; BSR set to: 2
  3713  001562  0703               	decf	___ftpack@exp& (0+255),f,b
  3714  001564  90D8               	bcf	status,0,c
  3715  001566  3700               	rlcf	___ftpack@arg& (0+255),f,b
  3716  001568  3701               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  3717  00156A  3702               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  3718  00156C                     l383:
  3719                           
  3720                           ; BSR set to: 2
  3721                           
  3722                           ; BSR set to: 2
  3723  00156C  BF01               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  3724  00156E  D003               	goto	u680
  3725                           
  3726                           ; BSR set to: 2
  3727  001570  0E02               	movlw	2
  3728  001572  6103               	cpfslt	___ftpack@exp& (0+255),b
  3729  001574  D7F6               	goto	l384
  3730  001576                     u680:
  3731                           
  3732                           ; BSR set to: 2
  3733                           
  3734                           ; BSR set to: 2
  3735  001576  A103               	btfss	___ftpack@exp& (0+255),0,b
  3736                           
  3737                           ; BSR set to: 2
  3738  001578  9F01               	bcf	(___ftpack@arg+1)& (0+255),7,b
  3739                           
  3740                           ; BSR set to: 2
  3741                           
  3742                           ; BSR set to: 2
  3743  00157A  90D8               	bcf	status,0,c
  3744  00157C  3303               	rrcf	___ftpack@exp& (0+255),f,b
  3745  00157E  5103               	movf	___ftpack@exp& (0+255),w,b
  3746  001580  1302               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  3747                           
  3748                           ; BSR set to: 2
  3749  001582  5104               	movf	___ftpack@sign& (0+255),w,b
  3750  001584  A4D8               	btfss	status,2,c
  3751                           
  3752                           ; BSR set to: 2
  3753  001586  8F02               	bsf	(___ftpack@arg+2)& (0+255),7,b
  3754                           
  3755                           ; BSR set to: 2
  3756                           
  3757                           ; BSR set to: 2
  3758  001588  C200  F200         	movff	___ftpack@arg,?___ftpack
  3759  00158C  C201  F201         	movff	___ftpack@arg+1,?___ftpack+1
  3760  001590  C202  F202         	movff	___ftpack@arg+2,?___ftpack+2
  3761  001594  0012               	return	
  3762  001596                     __end_of___ftpack:
  3763                           	opt stack 0
  3764                           tblptru	equ	0xFF8
  3765                           tblptrh	equ	0xFF7
  3766                           tblptrl	equ	0xFF6
  3767                           tablat	equ	0xFF5
  3768                           intcon	equ	0xFF2
  3769                           wreg	equ	0xFE8
  3770                           status	equ	0xFD8
  3771                           
  3772 ;; *************** function _high_priority_interrupt *****************
  3773 ;; Defined at:
  3774 ;;		line 56 in file "preset.c"
  3775 ;; Parameters:    Size  Location     Type
  3776 ;;		None
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;		None
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  1    wreg      void 
  3781 ;; Registers used:
  3782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3788 ;;      Params:         0       0       0       0       0       0       0       0       0
  3789 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3790 ;;      Temps:         18       0       0       0       0       0       0       0       0
  3791 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3792 ;;Total ram usage:       18 bytes
  3793 ;; Hardware stack levels used:    1
  3794 ;; Hardware stack levels required when called:    2
  3795 ;; This function calls:
  3796 ;;		_tmr0_flag
  3797 ;; This function is called by:
  3798 ;;		Interrupt level 2
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           	psect	intcode
  3803  000008                     __pintcode:
  3804                           	opt stack 0
  3805  000008                     _high_priority_interrupt:
  3806                           	opt stack 24
  3807                           
  3808                           ; BSR set to: 2
  3809                           ;incstack = 0
  3810  000008  8258               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3811  00000A  ED22  F00B         	call	int_func,f	;refresh shadow registers
  3812                           tblptru	equ	0xFF8
  3813                           tblptrh	equ	0xFF7
  3814                           tblptrl	equ	0xFF6
  3815                           tablat	equ	0xFF5
  3816                           intcon	equ	0xFF2
  3817                           wreg	equ	0xFE8
  3818                           status	equ	0xFD8
  3819                           
  3820                           	psect	intcode_body
  3821  001644                     __pintcode_body:
  3822                           	opt stack 24
  3823  001644                     int_func:
  3824                           	opt stack 24
  3825  001644  0006               	pop		; remove dummy address from shadow register refresh
  3826  001646  CFFA F046          	movff	pclath,??_high_priority_interrupt
  3827  00164A  CFFB F047          	movff	pclatu,??_high_priority_interrupt+1
  3828  00164E  CFE9 F048          	movff	fsr0l,??_high_priority_interrupt+2
  3829  001652  CFEA F049          	movff	fsr0h,??_high_priority_interrupt+3
  3830  001656  CFE1 F04A          	movff	fsr1l,??_high_priority_interrupt+4
  3831  00165A  CFE2 F04B          	movff	fsr1h,??_high_priority_interrupt+5
  3832  00165E  CFD9 F04C          	movff	fsr2l,??_high_priority_interrupt+6
  3833  001662  CFDA F04D          	movff	fsr2h,??_high_priority_interrupt+7
  3834  001666  CFF3 F04E          	movff	prodl,??_high_priority_interrupt+8
  3835  00166A  CFF4 F04F          	movff	prodh,??_high_priority_interrupt+9
  3836  00166E  CFF6 F050          	movff	tblptrl,??_high_priority_interrupt+10
  3837  001672  CFF7 F051          	movff	tblptrh,??_high_priority_interrupt+11
  3838  001676  CFF8 F052          	movff	tblptru,??_high_priority_interrupt+12
  3839  00167A  CFF5 F053          	movff	tablat,??_high_priority_interrupt+13
  3840  00167E  C058  F054         	movff	btemp,??_high_priority_interrupt+14
  3841  001682  C059  F055         	movff	btemp+1,??_high_priority_interrupt+15
  3842  001686  C05A  F056         	movff	btemp+2,??_high_priority_interrupt+16
  3843  00168A  C05B  F057         	movff	btemp+3,??_high_priority_interrupt+17
  3844                           
  3845                           ;preset.c: 57: if (INTCONbits.TMR0IF)
  3846  00168E  B4F2               	btfsc	intcon,2,c	;volatile
  3847                           
  3848                           ;preset.c: 58: tmr0_flag();
  3849  001690  EC23  F009         	call	_tmr0_flag	;wreg free
  3850  001694  C057  F05B         	movff	??_high_priority_interrupt+17,btemp+3
  3851  001698  C056  F05A         	movff	??_high_priority_interrupt+16,btemp+2
  3852  00169C  C055  F059         	movff	??_high_priority_interrupt+15,btemp+1
  3853  0016A0  C054  F058         	movff	??_high_priority_interrupt+14,btemp
  3854  0016A4  C053  FFF5         	movff	??_high_priority_interrupt+13,tablat
  3855  0016A8  C052  FFF8         	movff	??_high_priority_interrupt+12,tblptru
  3856  0016AC  C051  FFF7         	movff	??_high_priority_interrupt+11,tblptrh
  3857  0016B0  C050  FFF6         	movff	??_high_priority_interrupt+10,tblptrl
  3858  0016B4  C04F  FFF4         	movff	??_high_priority_interrupt+9,prodh
  3859  0016B8  C04E  FFF3         	movff	??_high_priority_interrupt+8,prodl
  3860  0016BC  C04D  FFDA         	movff	??_high_priority_interrupt+7,fsr2h
  3861  0016C0  C04C  FFD9         	movff	??_high_priority_interrupt+6,fsr2l
  3862  0016C4  C04B  FFE2         	movff	??_high_priority_interrupt+5,fsr1h
  3863  0016C8  C04A  FFE1         	movff	??_high_priority_interrupt+4,fsr1l
  3864  0016CC  C049  FFEA         	movff	??_high_priority_interrupt+3,fsr0h
  3865  0016D0  C048  FFE9         	movff	??_high_priority_interrupt+2,fsr0l
  3866  0016D4  C047  FFFB         	movff	??_high_priority_interrupt+1,pclatu
  3867  0016D8  C046  FFFA         	movff	??_high_priority_interrupt,pclath
  3868  0016DC  9258               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3869  0016DE  0011               	retfie		f
  3870  0016E0                     __end_of_high_priority_interrupt:
  3871                           	opt stack 0
  3872                           pclatu	equ	0xFFB
  3873                           pclath	equ	0xFFA
  3874                           tblptru	equ	0xFF8
  3875                           tblptrh	equ	0xFF7
  3876                           tblptrl	equ	0xFF6
  3877                           tablat	equ	0xFF5
  3878                           prodh	equ	0xFF4
  3879                           prodl	equ	0xFF3
  3880                           intcon	equ	0xFF2
  3881                           fsr0h	equ	0xFEA
  3882                           fsr0l	equ	0xFE9
  3883                           wreg	equ	0xFE8
  3884                           fsr1h	equ	0xFE2
  3885                           fsr1l	equ	0xFE1
  3886                           fsr2h	equ	0xFDA
  3887                           fsr2l	equ	0xFD9
  3888                           status	equ	0xFD8
  3889                           
  3890 ;; *************** function _tmr0_flag *****************
  3891 ;; Defined at:
  3892 ;;		line 11 in file "timer.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;		None
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  i               2   67[COMRAM] int 
  3897 ;;  It             60  120[BANK1 ] int [30]
  3898 ;;  Is             60   60[BANK1 ] int [30]
  3899 ;;  Ir             60    0[BANK1 ] int [30]
  3900 ;;  Vt             60   60[BANK0 ] int [30]
  3901 ;;  Vs             60    0[BANK0 ] int [30]
  3902 ;;  Vr             60    7[COMRAM] int [30]
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      void 
  3905 ;; Registers used:
  3906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3912 ;;      Params:         0       0       0       0       0       0       0       0       0
  3913 ;;      Locals:        62     120     180       0       0       0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3915 ;;      Totals:        62     120     180       0       0       0       0       0       0
  3916 ;;Total ram usage:      362 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:    1
  3919 ;; This function calls:
  3920 ;;		i2_adc_read
  3921 ;; This function is called by:
  3922 ;;		_high_priority_interrupt
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text20
  3927  001246                     __ptext20:
  3928                           	opt stack 0
  3929  001246                     _tmr0_flag:
  3930                           	opt stack 24
  3931                           
  3932                           ;timer.c: 12: INTCONbits.TMR0IF = 0;
  3933                           
  3934                           ;incstack = 0
  3935  001246  94F2               	bcf	intcon,2,c	;volatile
  3936                           
  3937                           ;timer.c: 13: TMR0L = 0xD2;
  3938  001248  0ED2               	movlw	210
  3939  00124A  6ED6               	movwf	4054,c	;volatile
  3940                           
  3941                           ;timer.c: 14: TMR0H = 0x39;
  3942  00124C  0E39               	movlw	57
  3943  00124E  6ED7               	movwf	4055,c	;volatile
  3944                           
  3945                           ;timer.c: 16: int Vr[30], Vs[30], Vt[30], Ir[30], Is[30], It[30];
  3946                           ;timer.c: 17: for(int i=0;i<30;i++) {
  3947  001250  0E00               	movlw	0
  3948  001252  6E45               	movwf	tmr0_flag@i+1,c
  3949  001254  0E00               	movlw	0
  3950  001256  6E44               	movwf	tmr0_flag@i,c
  3951  001258                     i2l1620:
  3952  001258  BE45               	btfsc	tmr0_flag@i+1,7,c
  3953  00125A  D006               	goto	i2l155
  3954  00125C  5045               	movf	tmr0_flag@i+1,w,c
  3955  00125E  E167               	bnz	i2l157
  3956  001260  0E1E               	movlw	30
  3957  001262  5C44               	subwf	tmr0_flag@i,w,c
  3958  001264  B0D8               	btfsc	status,0,c
  3959  001266  0012               	return	
  3960  001268                     i2l155:
  3961                           
  3962                           ;timer.c: 18: Vr[i] = adc_read(0);
  3963  001268  0E00               	movlw	0
  3964  00126A  EC2A  F00C         	call	i2_adc_read
  3965  00126E  90D8               	bcf	status,0,c
  3966  001270  3444               	rlcf	tmr0_flag@i,w,c
  3967  001272  6ED9               	movwf	fsr2l,c
  3968  001274  3445               	rlcf	tmr0_flag@i+1,w,c
  3969  001276  6EDA               	movwf	fsr2h,c
  3970  001278  0E08               	movlw	low tmr0_flag@Vr
  3971  00127A  26D9               	addwf	fsr2l,f,c
  3972  00127C  0E00               	movlw	high tmr0_flag@Vr
  3973  00127E  22DA               	addwfc	fsr2h,f,c
  3974  001280  C001  FFDE         	movff	?i2_adc_read,postinc2
  3975  001284  C002  FFDD         	movff	?i2_adc_read+1,postdec2
  3976                           
  3977                           ;timer.c: 19: Vs[i] = adc_read(1);
  3978  001288  0E01               	movlw	1
  3979  00128A  EC2A  F00C         	call	i2_adc_read
  3980  00128E  90D8               	bcf	status,0,c
  3981  001290  3444               	rlcf	tmr0_flag@i,w,c
  3982  001292  6ED9               	movwf	fsr2l,c
  3983  001294  3445               	rlcf	tmr0_flag@i+1,w,c
  3984  001296  6EDA               	movwf	fsr2h,c
  3985  001298  0E60               	movlw	low tmr0_flag@Vs
  3986  00129A  26D9               	addwf	fsr2l,f,c
  3987  00129C  0E00               	movlw	high tmr0_flag@Vs
  3988  00129E  22DA               	addwfc	fsr2h,f,c
  3989  0012A0  C001  FFDE         	movff	?i2_adc_read,postinc2
  3990  0012A4  C002  FFDD         	movff	?i2_adc_read+1,postdec2
  3991                           
  3992                           ;timer.c: 20: Vt[i] = adc_read(2);
  3993  0012A8  0E02               	movlw	2
  3994  0012AA  EC2A  F00C         	call	i2_adc_read
  3995  0012AE  90D8               	bcf	status,0,c
  3996  0012B0  3444               	rlcf	tmr0_flag@i,w,c
  3997  0012B2  6ED9               	movwf	fsr2l,c
  3998  0012B4  3445               	rlcf	tmr0_flag@i+1,w,c
  3999  0012B6  6EDA               	movwf	fsr2h,c
  4000  0012B8  0E9C               	movlw	low tmr0_flag@Vt
  4001  0012BA  26D9               	addwf	fsr2l,f,c
  4002  0012BC  0E00               	movlw	high tmr0_flag@Vt
  4003  0012BE  22DA               	addwfc	fsr2h,f,c
  4004  0012C0  C001  FFDE         	movff	?i2_adc_read,postinc2
  4005  0012C4  C002  FFDD         	movff	?i2_adc_read+1,postdec2
  4006                           
  4007                           ;timer.c: 21: Ir[i] = adc_read(3);
  4008  0012C8  0E03               	movlw	3
  4009  0012CA  EC2A  F00C         	call	i2_adc_read
  4010  0012CE  90D8               	bcf	status,0,c
  4011  0012D0  3444               	rlcf	tmr0_flag@i,w,c
  4012  0012D2  6ED9               	movwf	fsr2l,c
  4013  0012D4  3445               	rlcf	tmr0_flag@i+1,w,c
  4014  0012D6  6EDA               	movwf	fsr2h,c
  4015  0012D8  0E00               	movlw	low tmr0_flag@Ir
  4016  0012DA  26D9               	addwf	fsr2l,f,c
  4017  0012DC  0E01               	movlw	high tmr0_flag@Ir
  4018  0012DE  22DA               	addwfc	fsr2h,f,c
  4019  0012E0  C001  FFDE         	movff	?i2_adc_read,postinc2
  4020  0012E4  C002  FFDD         	movff	?i2_adc_read+1,postdec2
  4021                           
  4022                           ;timer.c: 22: Is[i] = adc_read(4);
  4023  0012E8  0E04               	movlw	4
  4024  0012EA  EC2A  F00C         	call	i2_adc_read
  4025  0012EE  90D8               	bcf	status,0,c
  4026  0012F0  3444               	rlcf	tmr0_flag@i,w,c
  4027  0012F2  6ED9               	movwf	fsr2l,c
  4028  0012F4  3445               	rlcf	tmr0_flag@i+1,w,c
  4029  0012F6  6EDA               	movwf	fsr2h,c
  4030  0012F8  0E3C               	movlw	low tmr0_flag@Is
  4031  0012FA  26D9               	addwf	fsr2l,f,c
  4032  0012FC  0E01               	movlw	high tmr0_flag@Is
  4033  0012FE  22DA               	addwfc	fsr2h,f,c
  4034  001300  C001  FFDE         	movff	?i2_adc_read,postinc2
  4035  001304  C002  FFDD         	movff	?i2_adc_read+1,postdec2
  4036                           
  4037                           ;timer.c: 23: It[i] = adc_read(5);
  4038  001308  0E05               	movlw	5
  4039  00130A  EC2A  F00C         	call	i2_adc_read
  4040  00130E  90D8               	bcf	status,0,c
  4041  001310  3444               	rlcf	tmr0_flag@i,w,c
  4042  001312  6ED9               	movwf	fsr2l,c
  4043  001314  3445               	rlcf	tmr0_flag@i+1,w,c
  4044  001316  6EDA               	movwf	fsr2h,c
  4045  001318  0E78               	movlw	low tmr0_flag@It
  4046  00131A  26D9               	addwf	fsr2l,f,c
  4047  00131C  0E01               	movlw	high tmr0_flag@It
  4048  00131E  22DA               	addwfc	fsr2h,f,c
  4049  001320  C001  FFDE         	movff	?i2_adc_read,postinc2
  4050  001324  C002  FFDD         	movff	?i2_adc_read+1,postdec2
  4051  001328  4A44               	infsnz	tmr0_flag@i,f,c
  4052  00132A  2A45               	incf	tmr0_flag@i+1,f,c
  4053  00132C  D795               	goto	i2l1620
  4054  00132E                     i2l157:
  4055  00132E  0012               	return		;funcret
  4056  001330                     __end_of_tmr0_flag:
  4057                           	opt stack 0
  4058                           pclatu	equ	0xFFB
  4059                           pclath	equ	0xFFA
  4060                           tblptru	equ	0xFF8
  4061                           tblptrh	equ	0xFF7
  4062                           tblptrl	equ	0xFF6
  4063                           tablat	equ	0xFF5
  4064                           prodh	equ	0xFF4
  4065                           prodl	equ	0xFF3
  4066                           intcon	equ	0xFF2
  4067                           fsr0h	equ	0xFEA
  4068                           fsr0l	equ	0xFE9
  4069                           wreg	equ	0xFE8
  4070                           fsr1h	equ	0xFE2
  4071                           fsr1l	equ	0xFE1
  4072                           postinc2	equ	0xFDE
  4073                           postdec2	equ	0xFDD
  4074                           fsr2h	equ	0xFDA
  4075                           fsr2l	equ	0xFD9
  4076                           status	equ	0xFD8
  4077                           
  4078 ;; *************** function i2_adc_read *****************
  4079 ;; Defined at:
  4080 ;;		line 11 in file "adc.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;  canal           1    wreg     unsigned char 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;  canal           1    4[COMRAM] unsigned char 
  4085 ;;  adc_read        1    6[COMRAM] unsigned char 
  4086 ;;  adc_read        1    5[COMRAM] unsigned char 
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  2    0[COMRAM] unsigned int 
  4089 ;; Registers used:
  4090 ;;		wreg, status,2, status,0
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4096 ;;      Params:         2       0       0       0       0       0       0       0       0
  4097 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4098 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4099 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4100 ;;Total ram usage:        7 bytes
  4101 ;; Hardware stack levels used:    1
  4102 ;; This function calls:
  4103 ;;		Nothing
  4104 ;; This function is called by:
  4105 ;;		_tmr0_flag
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109                           	psect	text21
  4110  001854                     __ptext21:
  4111                           	opt stack 0
  4112  001854                     i2_adc_read:
  4113                           	opt stack 24
  4114                           
  4115                           ;incstack = 0
  4116                           ;i2adc_read@canal stored from wreg
  4117  001854  6E05               	movwf	i2adc_read@canal,c
  4118                           
  4119                           ;adc.c: 12: unsigned char x, y;
  4120                           ;adc.c: 13: ADCON0 = (unsigned char)((canal << 2) | 0x01);
  4121  001856  4405               	rlncf	i2adc_read@canal,w,c
  4122  001858  46E8               	rlncf	wreg,f,c
  4123  00185A  0BFC               	andlw	252
  4124  00185C  0901               	iorlw	1
  4125  00185E  6EC2               	movwf	4034,c	;volatile
  4126                           
  4127                           ;adc.c: 14: ADCON0bits.GO_DONE = 1;
  4128  001860  82C2               	bsf	4034,1,c	;volatile
  4129  001862  B2C2               	btfsc	4034,1,c	;volatile
  4130  001864  D7FE               	goto	i2l104
  4131                           
  4132                           ;adc.c: 16: x = (unsigned char)(ADRESH & 0x03);
  4133  001866  50C4               	movf	4036,w,c	;volatile
  4134  001868  0B03               	andlw	3
  4135  00186A  6E06               	movwf	i2adc_read@x,c
  4136                           
  4137                           ;adc.c: 17: y = ADRESL;
  4138  00186C  CFC3 F007          	movff	4035,i2adc_read@y	;volatile
  4139                           
  4140                           ;adc.c: 18: return (unsigned int) (x << 8 | y);
  4141  001870  5007               	movf	i2adc_read@y,w,c
  4142  001872  C006  F003         	movff	i2adc_read@x,??i2_adc_read
  4143  001876  6A04               	clrf	(??i2_adc_read+1)& (0+255),c
  4144  001878  C003  F004         	movff	??i2_adc_read,??i2_adc_read+1
  4145  00187C  6A03               	clrf	??i2_adc_read,c
  4146  00187E  1003               	iorwf	??i2_adc_read,w,c
  4147  001880  6E01               	movwf	?i2_adc_read,c
  4148  001882  5004               	movf	??i2_adc_read+1,w,c
  4149  001884  6E02               	movwf	?i2_adc_read+1,c
  4150  001886  0012               	return	
  4151  001888                     __end_ofi2_adc_read:
  4152                           	opt stack 0
  4153                           pclatu	equ	0xFFB
  4154                           pclath	equ	0xFFA
  4155                           tblptru	equ	0xFF8
  4156                           tblptrh	equ	0xFF7
  4157                           tblptrl	equ	0xFF6
  4158                           tablat	equ	0xFF5
  4159                           prodh	equ	0xFF4
  4160                           prodl	equ	0xFF3
  4161                           intcon	equ	0xFF2
  4162                           fsr0h	equ	0xFEA
  4163                           fsr0l	equ	0xFE9
  4164                           wreg	equ	0xFE8
  4165                           fsr1h	equ	0xFE2
  4166                           fsr1l	equ	0xFE1
  4167                           postinc2	equ	0xFDE
  4168                           postdec2	equ	0xFDD
  4169                           fsr2h	equ	0xFDA
  4170                           fsr2l	equ	0xFD9
  4171                           status	equ	0xFD8
  4172                           pclatu	equ	0xFFB
  4173                           pclath	equ	0xFFA
  4174                           tblptru	equ	0xFF8
  4175                           tblptrh	equ	0xFF7
  4176                           tblptrl	equ	0xFF6
  4177                           tablat	equ	0xFF5
  4178                           prodh	equ	0xFF4
  4179                           prodl	equ	0xFF3
  4180                           intcon	equ	0xFF2
  4181                           fsr0h	equ	0xFEA
  4182                           fsr0l	equ	0xFE9
  4183                           wreg	equ	0xFE8
  4184                           fsr1h	equ	0xFE2
  4185                           fsr1l	equ	0xFE1
  4186                           postinc2	equ	0xFDE
  4187                           postdec2	equ	0xFDD
  4188                           fsr2h	equ	0xFDA
  4189                           fsr2l	equ	0xFD9
  4190                           status	equ	0xFD8
  4191                           
  4192                           	psect	rparam
  4193  0000                     pclatu	equ	0xFFB
  4194                           pclath	equ	0xFFA
  4195                           tblptru	equ	0xFF8
  4196                           tblptrh	equ	0xFF7
  4197                           tblptrl	equ	0xFF6
  4198                           tablat	equ	0xFF5
  4199                           prodh	equ	0xFF4
  4200                           prodl	equ	0xFF3
  4201                           intcon	equ	0xFF2
  4202                           fsr0h	equ	0xFEA
  4203                           fsr0l	equ	0xFE9
  4204                           wreg	equ	0xFE8
  4205                           fsr1h	equ	0xFE2
  4206                           fsr1l	equ	0xFE1
  4207                           postinc2	equ	0xFDE
  4208                           postdec2	equ	0xFDD
  4209                           fsr2h	equ	0xFDA
  4210                           fsr2l	equ	0xFD9
  4211                           status	equ	0xFD8
  4212                           
  4213                           	psect	temp
  4214  000058                     btemp:
  4215                           	opt stack 0
  4216  000058                     	ds	1
  4217  0000                     int$flags	set	btemp
  4218  0000                     wtemp6	set	btemp+1
  4219                           pclatu	equ	0xFFB
  4220                           pclath	equ	0xFFA
  4221                           tblptru	equ	0xFF8
  4222                           tblptrh	equ	0xFF7
  4223                           tblptrl	equ	0xFF6
  4224                           tablat	equ	0xFF5
  4225                           prodh	equ	0xFF4
  4226                           prodl	equ	0xFF3
  4227                           intcon	equ	0xFF2
  4228                           fsr0h	equ	0xFEA
  4229                           fsr0l	equ	0xFE9
  4230                           wreg	equ	0xFE8
  4231                           fsr1h	equ	0xFE2
  4232                           fsr1l	equ	0xFE1
  4233                           postinc2	equ	0xFDE
  4234                           postdec2	equ	0xFDD
  4235                           fsr2h	equ	0xFDA
  4236                           fsr2l	equ	0xFD9
  4237                           status	equ	0xFD8


Data Sizes:
    Strings     79
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      87
    BANK0           160    120     120
    BANK1           256    180     180
    BANK2           256     57      57
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    writeStringLcd@s	PTR unsigned char  size(2) Largest target is 10
		 -> STR_13(CODE[2]), STR_12(CODE[10]), STR_11(CODE[2]), STR_10(CODE[10]), 
		 -> STR_9(CODE[2]), STR_8(CODE[10]), STR_7(CODE[2]), STR_6(CODE[10]), 
		 -> STR_5(CODE[2]), STR_4(CODE[10]), STR_3(CODE[2]), STR_2(CODE[10]), 

    writeCStringLcd@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_priority_interrupt in COMRAM

    _high_priority_interrupt->_tmr0_flag
    _tmr0_flag->i2_adc_read

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_priority_interrupt in BANK0

    _high_priority_interrupt->_tmr0_flag

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_priority_interrupt in BANK1

    _high_priority_interrupt->_tmr0_flag

Critical Paths under _main in BANK2

    _main->_writeValueLcd
    _writeValueLcd->___fttol
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    ___aldiv->___almod
    _writeStringLcd->_writeLcd
    _writeCStringLcd->_writeLcd
    _initConfigs->_clearLcd
    _clearLcd->_writeLcd
    _gotoLcd->_writeLcd
    ___lwtoft->___ftpack
    ___ftdiv->___ftmul

Critical Paths under _high_priority_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_priority_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_priority_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_priority_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_priority_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_priority_interrupt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   20208
                                             52 BANK2      5     5      0
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                           _adc_read
                           _clearLcd
                            _gotoLcd
                        _initConfigs
                           _setTimer
                    _writeCStringLcd
                     _writeStringLcd
                      _writeValueLcd
 ---------------------------------------------------------------------------------
 (1) _writeValueLcd                                       11     8      3    8023
                                             41 BANK2     11     8      3
                            ___aldiv
                            ___almod
                            ___ftmul
                            ___fttol
                             ___lmul
                           _writeLcd
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              0 BANK2     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     328
                                             26 BANK2     15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3943
                                             11 BANK2     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
                           _adc_read (ARG)
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8    1664
                                              0 BANK2     10     2      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     908
                                             10 BANK2     14     6      8
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (1) _writeStringLcd                                       2     0      2    1001
                                              2 BANK2      2     0      2
                           _writeLcd
 ---------------------------------------------------------------------------------
 (1) _writeCStringLcd                                      2     0      2     165
                                              2 BANK2      2     0      2
                           _writeLcd
 ---------------------------------------------------------------------------------
 (1) _setTimer                                             1     1      0      22
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initConfigs                                          2     2      0      88
                                              3 BANK2      2     2      0
                           _clearLcd
                           _writeLcd
 ---------------------------------------------------------------------------------
 (2) _clearLcd                                             1     1      0      44
                                              2 BANK2      1     1      0
                           _writeLcd
 ---------------------------------------------------------------------------------
 (1) _gotoLcd                                              1     1      0      66
                                              2 BANK2      1     1      0
                           _writeLcd
 ---------------------------------------------------------------------------------
 (2) _writeLcd                                             2     2      0      44
                                              0 BANK2      2     2      0
                            _sendLcd
 ---------------------------------------------------------------------------------
 (3) _sendLcd                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             7     5      2      68
                                              0 BANK2      7     5      2
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2905
                                              8 BANK2      3     0      3
                           ___ftpack
                           _adc_read (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    3745
                                             26 BANK2     15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                           _adc_read (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2427
                                              0 BANK2      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_priority_interrupt                             18    18      0     390
                                             69 COMRAM    18    18      0
                          _tmr0_flag
 ---------------------------------------------------------------------------------
 (6) _tmr0_flag                                          362   362      0     390
                                              7 COMRAM    62    62      0
                                              0 BANK0    120   120      0
                                              0 BANK1    180   180      0
                         i2_adc_read
 ---------------------------------------------------------------------------------
 (7) i2_adc_read                                           7     5      2      68
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         _adc_read (ARG)
       _adc_read (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
       _adc_read (ARG)
     _adc_read (ARG)
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
       _adc_read (ARG)
     _adc_read (ARG)
   ___lwtoft
     ___ftpack
     _adc_read (ARG)
   _adc_read
   _clearLcd
     _writeLcd
       _sendLcd
   _gotoLcd
     _writeLcd
       _sendLcd
   _initConfigs
     _clearLcd
       _writeLcd
         _sendLcd
     _writeLcd
       _sendLcd
   _setTimer
   _writeCStringLcd
     _writeLcd
       _sendLcd
   _writeStringLcd
     _writeLcd
       _sendLcd
   _writeValueLcd
     ___aldiv
       ___almod (ARG)
     ___almod
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         _adc_read (ARG)
       _adc_read (ARG)
     ___fttol
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _adc_read (ARG)
         _adc_read (ARG)
     ___lmul
     _writeLcd
       _sendLcd

 _high_priority_interrupt (ROOT)
   _tmr0_flag
     i2_adc_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     57      57       1       92.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     78      78       5       75.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B4      B4       7       70.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100     39      39       9       22.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Mar 21 12:20:50 2018

                  writeValueLcd@x 0230                                l23 08E2  
                writeValueLcd@val 0229                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                      __CFG_CP2$OFF 000000  
                    __CFG_CP3$OFF 000000                        i2_adc_read 1854  
                             l104 182C                               l140 0ED4  
                             l133 18A2                               l221 147C  
                             l141 0E2E                               l134 188C  
                             l222 1470                               l127 18D0  
                             l231 15B4                               l160 1900  
                             l128 18BA                               l240 1632  
                             l232 15C8                               l225 14B0  
                             l226 14BE                               l218 1436  
                             l234 15E6                               l227 14D4  
                             l219 144E                               l235 15DA  
                             l139 0D5C                               l238 160E  
                             l174 1782                               l239 161C  
                             l175 1796                               l441 135A  
                             l443 1382                               l380 1544  
                             l444 13C0                               l460 11E4  
                             l381 152E                               l445 13E6  
                             l462 11FC                               l383 156C  
                             l463 120C                               l384 1562  
                             l456 117A                               l480 10EE  
                             l377 1510                               l378 1506  
                             l458 11A2                               l459 11D4  
                             l485 1122                               l477 1086  
                             l486 1116                               l479 10FE  
                             l488 113E                      __CFG_CPB$OFF 000000  
                    __CFG_CPD$OFF 000000                               u640 14F8  
                             u820 15EA                               u911 106A  
                             u680 1576                               u760 1480  
                             u930 10A4                               u851 1162  
                             u871 118A                               u935 109C  
                             u970 1128                 ??_writeCStringLcd 0204  
                             wreg 000FE8                      __CFG_FOSC$HS 000000  
                    __CFG_LVP$OFF 000000                      ___ftdiv@cntr 0223  
                    ___ftdiv@sign 0228                      __CFG_WDT$OFF 000000  
                            STR_1 0801                              STR_2 0812  
                            STR_3 084E                              STR_4 0826  
                            STR_5 084E                              STR_6 083A  
                            STR_7 084E                              STR_8 081C  
                            STR_9 084E                              u1111 136A  
                            u1050 0D74                              u1060 0D8A  
                            u1207 098E                              u1217 0A34  
                            u1091 1342                              u1307 180E  
                            u1227 0ADA                              u1237 0B80  
                            u1157 085E                              _LATB 000F8A  
                            u1247 0C26                              u1167 0878  
                            _LATC 000F8B                              _LATD 000F8C  
                            u1257 0CCC                              u1177 0892  
                            u1267 1712                              u1187 08B0  
                            u1277 172E                              u1197 08CA  
                            u1287 1946                              u1297 17EA  
                   __CFG_DEBUG$ON 000000                              _UCON 000F6D  
                    __CFG_PWRT$ON 000000                              _main 0852  
                    ___ftpack@arg 0200                      ___ftpack@exp 0203  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr2h 000FDA                              fsr0l 000FE9  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 0058                              prodh 000FF4  
                            prodl 000FF3                              start 000E  
                    ?_initConfigs 0001                     __CFG_MCLRE$ON 000000  
                    ___ftmul@cntr 0218                       i2adc_read@x 0006  
                     i2adc_read@y 0007                      ___param_bank 000000  
                    ___ftmul@sign 0219                      ___fttol@exp1 0228  
                 i2adc_read@canal 0005                      ___fttol@lval 0224  
                   __CFG_PLLDIV$4 000000                   __end_of___aldiv 14E6  
                 __end_of___almod 1644                             ?_main 0001  
                           STR_10 0830                             STR_11 084E  
                           STR_12 0844                             STR_13 084E  
                 __end_of___ftdiv 1418                             _CMCON 000FB4  
                 __end_of___ftmul 1246                             _T0CON 000FD5  
                 __end_of___fttol 1150                             i2l104 1862  
                           i2l155 1268                             i2l157 132E  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                     __CFG_WRT2$OFF 000000  
             ___lmul@multiplicand 0204                     __CFG_WRT3$OFF 000000  
                  __CFG_EBTR0$OFF 000000                    __CFG_EBTR1$OFF 000000  
                  __CFG_EBTR2$OFF 000000                    __CFG_EBTR3$OFF 000000  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                 __end_of_gotoLcd 1962                     ___ftpack@sign 0204  
                 __end_of_sendLcd 1976                             pclath 000FFA  
                           tablat 000FF5                             status 000FD8  
                           wtemp6 0059                    __CFG_ICPRT$OFF 000000  
                 __initialization 1962                   writeStringLcd@s 0202  
                    __end_of_main 0CDC                  ??_writeStringLcd 0204  
                     ?i2_adc_read 0001                            ??_main 0234  
                   ___fttol@sign1 0223                     __activetblptr 000002  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                            _ADRESH 000FC4  
                          _ADRESL 000FC3                  __end_of___ftpack 1596  
                __end_of_adc_read 1854                            i2l1620 1258  
                          _INTCON 000FF2                  __end_of___lwtoft 1936  
                __end_of_clearLcd 1952                    __CFG_XINST$OFF 000000  
                          ___lmul 1770                         ??___aldiv 0212  
                       ??___almod 0208                    __CFG_STVREN$ON 000000  
                       ??___ftdiv 0220                         ??___ftmul 0211  
                       ??___fttol 021E             ___ftmul@f3_as_product 0215  
                __end_of_setTimer 1910                         ??_gotoLcd 0202  
                       ??_sendLcd 0200                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                  writeCStringLcd@s 0202  
                __end_of_writeLcd 181A                        __accesstop 0060  
         __end_of__initialization 1962               __size_ofi2_adc_read 0034  
                   ___rparam_used 000001                        ___ftdiv@f1 021A  
                      ___ftdiv@f2 021D                        ___ftdiv@f3 0224  
                      ___ftmul@f1 020B                        ___ftmul@f2 020E  
          __size_of_writeValueLcd 037C                        ___fttol@f1 021A  
                 _writeCStringLcd 18B6                    __pcstackCOMRAM 0001  
            __size_of_initConfigs 0090                        ___lwtoft@c 0208  
__size_of_high_priority_interrupt 16D8                           ?___lmul 0200  
              __size_of_tmr0_flag 00EA                    ___lmul@product 0208  
                       ?___ftpack 0200                         ?_adc_read 0200  
                       ?___lwtoft 0208                       tmr0_flag@Ir 0100  
                     tmr0_flag@Is 013C                       tmr0_flag@It 0178  
                     tmr0_flag@Vr 0008                       tmr0_flag@Vs 0060  
                     tmr0_flag@Vt 009C                         ?_clearLcd 0001  
                   _writeValueLcd 0CDC           __end_of_writeCStringLcd 18E4  
                         __Hparam 0000                         ?_setTimer 0001  
                         __Lparam 0000                           ___aldiv 1418  
                         ___almod 1596                   __size_of___lmul 0058  
                         ___ftdiv 1330                           ___ftmul 1150  
                         ___fttol 1058                      __psmallconst 0800  
                         __pcinit 1962                        ??___ftpack 0205  
                         __ramtop 0800                      ??i2_adc_read 0003  
                      ??_adc_read 0202                         ?_writeLcd 0001  
                         __ptext0 0852                           __ptext1 0CDC  
                         __ptext2 1770                           __ptext3 1058  
                         __ptext4 1150                           __ptext5 1596  
                         __ptext6 1418                           __ptext7 1888  
                         __ptext8 18B6                           __ptext9 18E4  
                      ??___lwtoft 020B                           _gotoLcd 1952  
                  ?_writeValueLcd 0229                           _sendLcd 1970  
                ___aldiv@dividend 020A                        ??_clearLcd 0202  
                  __pintcode_body 1644              end_of_initialization 1962  
               __end_of_tmr0_flag 1330                     __Lmediumconst 0000  
                         int_func 1644                __end_ofi2_adc_read 1888  
                      ??_setTimer 0200                  ___aldiv@quotient 0214  
                         postdec2 000FDD                           postinc2 000FDE  
         _high_priority_interrupt 0008                        ??_writeLcd 0200  
                ?_writeCStringLcd 0202                       ___ftdiv@exp 0227  
                     ___ftmul@exp 0214                     setTimer@state 0200  
                  __end_of___lmul 17C8                   ??_writeValueLcd 022C  
             start_initialization 1962           __size_of_writeStringLcd 002E  
                      gotoLcd@pos 0202                     ??_initConfigs 0203  
                        ??___lmul 0208         ??_high_priority_interrupt 0046  
               __size_of___ftpack 00B0                 __size_of_adc_read 003A  
               __size_of___lwtoft 0026                     __pcstackBANK0 0060  
                   __pcstackBANK1 0100                     __pcstackBANK2 0200  
               __size_of_clearLcd 001C                     adc_read@canal 0204  
                       adc_read@x 0205                         adc_read@y 0206  
                       __pintcode 0008                          ?___aldiv 020A  
                        ?___almod 0200                 __size_of_setTimer 002C  
                        ?___ftdiv 021A                          ?___ftmul 020B  
                        ?___fttol 021A                        tmr0_flag@i 0044  
             __end_of_initConfigs 1770                  ___almod@dividend 0200  
                     __smallconst 0800                          ?_gotoLcd 0001  
               __size_of_writeLcd 0052                          ?_sendLcd 0001  
 __end_of_high_priority_interrupt 16E0                   ___aldiv@divisor 020E  
                 ___aldiv@counter 0212                          _LATBbits 000F8A  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
                       _tmr0_flag 1246                        _ADCON0bits 000FC2  
                       main@valor 0236                    _writeStringLcd 1888  
               ___lmul@multiplier 0200                        ?_tmr0_flag 0001  
                        __Hrparam 0000                          __Lrparam 0000  
                     _initConfigs 16E0                  __size_of___aldiv 00CE  
                __size_of___almod 00AE                  __size_of___ftdiv 00E8  
                __size_of___ftmul 00F6                  __size_of___fttol 00F8  
                        ___ftpack 14E6                          _adc_read 181A  
                        ___lwtoft 1910            __end_of_writeStringLcd 18B6  
                __size_of_gotoLcd 0010                          _clearLcd 1936  
                __size_of_sendLcd 0006                          __ptext10 16E0  
                        __ptext11 1936                          __ptext20 1246  
                        __ptext12 1952                          __ptext21 1854  
                        __ptext13 17C8                          __ptext14 1970  
                        __ptext15 181A                          __ptext16 1910  
                        __ptext17 1330                          __ptext18 14E6  
                 ___almod@divisor 0204                   ___almod@counter 0208  
                   __size_of_main 048A                          _setTimer 18E4  
                        int$flags 0058          __size_of_writeCStringLcd 002E  
                        _writeLcd 17C8             __CFG_CPUDIV$OSC1_PLL2 000000  
                 ?_writeStringLcd 0202                        _INTCONbits 000FF2  
           __end_of_writeValueLcd 1058                          intlevel2 0000  
                     ??_tmr0_flag 0008                         writeLcd@c 0201  
                    ___aldiv@sign 0213                      ___almod@sign 0209  
        ?_high_priority_interrupt 0001  
